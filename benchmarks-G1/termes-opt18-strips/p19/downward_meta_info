INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/termes-opt18-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/termes-opt18-strips/p19.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-opt18-strips/p19/output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 52 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
880 relevant atoms
2652 auxiliary atoms
3532 final queue length
4323 total queue pushes
Completing instantiation... [0.010s CPU, 0.011s wall-clock]
Instantiating: [0.030s CPU, 0.029s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.014s wall-clock]
129 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
64 operators removed
0 axioms removed
18 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.005s wall-clock]
Reordering and filtering variables...
13 of 13 variables necessary.
0 of 12 mutex groups necessary.
644 of 644 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.002s wall-clock]
Translator variables: 13
Translator derived variables: 0
Translator facts: 69
Translator goal facts: 12
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 644
Translator axioms: 0
Translator task size: 3788
Translator peak memory: 31400 KB
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.060s CPU, 0.056s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-opt18-strips/p19/output.sas
INFO     search time limit: 299.9s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-opt18-strips/p19/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-opt18-strips/p19/output.sas
[t=0s, 9880 KB] reading input...
[t=0s, 10004 KB] done reading input!
[t=0.00259647s, 10400 KB] Initializing landmark count heuristic...
[t=0.00259647s, 10400 KB] Generating landmark graph...
[t=0.00259647s, 10400 KB] Building a landmark graph with reasonable orders.
[t=0.00259647s, 10400 KB] Initializing Exploration...
[t=0.00259647s, 10544 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00259647s, 10544 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00259647s, 10544 KB] Landmarks generation time: 0s
[t=0.00259647s, 10544 KB] Discovered 30 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.00259647s, 10544 KB] 50 edges
[t=0.00259647s, 10544 KB] approx. reasonable orders
[t=0.00259647s, 10544 KB] approx. obedient reasonable orders
[t=0.00259647s, 10544 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00259647s, 10544 KB] Landmarks generation time: 0s
[t=0.00259647s, 10544 KB] Discovered 30 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.00259647s, 10544 KB] 50 edges
[t=0.00259647s, 10544 KB] Landmark graph generation time: 0s
[t=0.00259647s, 10544 KB] Landmark graph contains 30 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.00259647s, 10544 KB] Landmark graph contains 50 orderings.
[t=0.00259647s, 10544 KB] Simplifying 888 unary operators... done! [884 unary operators]
[t=0.00259647s, 10544 KB] time to simplify: 0s
[t=0.00259647s, 10544 KB] Initializing additive heuristic...
[t=0.00259647s, 10544 KB] Initializing FF heuristic...
[t=0.00259647s, 10544 KB] Building successor generator...done!
[t=0.00259647s, 10680 KB] peak memory difference for successor generator creation: 136 KB
[t=0.00259647s, 10680 KB] time for successor generation creation: 0s
[t=0.00259647s, 10680 KB] Variables: 13
[t=0.00259647s, 10680 KB] FactPairs: 69
[t=0.00259647s, 10680 KB] Bytes per state: 8
[t=0.00259647s, 10680 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00259647s, 10680 KB] 13 initial landmarks, 12 goal landmarks
[t=0.00259647s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.00259647s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.00259647s, 10680 KB] g=0, 1 evaluated, 0 expanded
[t=0.00259647s, 10680 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.00259647s, 10680 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.00259647s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.00259647s, 10680 KB] g=1, 2 evaluated, 1 expanded
[t=0.00259647s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.00259647s, 10680 KB] g=2, 3 evaluated, 2 expanded
[t=0.00259647s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.00259647s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.00259647s, 10680 KB] g=3, 10 evaluated, 9 expanded
[t=0.00259647s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.00259647s, 10680 KB] g=4, 11 evaluated, 10 expanded
[t=0.00659598s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.00659598s, 10680 KB] g=5, 49 evaluated, 48 expanded
[t=0.00659598s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.00659598s, 10680 KB] g=9, 92 evaluated, 91 expanded
[t=0.00659598s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.00659598s, 10680 KB] g=10, 97 evaluated, 96 expanded
[t=0.00659598s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.00659598s, 10680 KB] g=17, 296 evaluated, 295 expanded
[t=0.00659598s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.00659598s, 10680 KB] g=18, 307 evaluated, 306 expanded
[t=0.010595s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.010595s, 10680 KB] g=19, 310 evaluated, 309 expanded
[t=0.010595s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.010595s, 10680 KB] g=28, 363 evaluated, 362 expanded
[t=0.010595s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.010595s, 10680 KB] g=38, 433 evaluated, 432 expanded
[t=0.010595s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.010595s, 10680 KB] g=51, 534 evaluated, 533 expanded
[t=0.0145946s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0145946s, 10680 KB] g=60, 710 evaluated, 709 expanded
[t=0.0145946s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0145946s, 10680 KB] g=64, 753 evaluated, 752 expanded
[t=0.0145946s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0145946s, 10680 KB] g=68, 804 evaluated, 803 expanded
[t=0.0145946s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0145946s, 10680 KB] g=70, 809 evaluated, 808 expanded
[t=0.0145946s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0145946s, 10680 KB] g=73, 817 evaluated, 816 expanded
[t=0.0145946s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0145946s, 10680 KB] g=79, 863 evaluated, 862 expanded
[t=0.0185948s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0185948s, 10680 KB] g=89, 970 evaluated, 969 expanded
[t=0.0185948s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0185948s, 10680 KB] g=79, 981 evaluated, 980 expanded
[t=0.0185948s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0185948s, 10680 KB] g=86, 1024 evaluated, 1023 expanded
[t=0.0185948s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0185948s, 10680 KB] g=97, 1087 evaluated, 1086 expanded
[t=0.0225948s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0225948s, 10680 KB] g=111, 1253 evaluated, 1252 expanded
[t=0.0225948s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0225948s, 10680 KB] g=112, 1266 evaluated, 1265 expanded
[t=0.0225948s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0225948s, 10680 KB] g=137, 1373 evaluated, 1372 expanded
[t=0.0265947s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0265947s, 10680 KB] g=139, 1580 evaluated, 1579 expanded
[t=0.0265947s, 10680 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0265947s, 10680 KB] g=142, 1587 evaluated, 1586 expanded
[t=0.0265947s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0265947s, 10680 KB] g=168, 1859 evaluated, 1858 expanded
[t=0.0305948s, 10680 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0305948s, 10680 KB] g=176, 1877 evaluated, 1876 expanded
[t=0.0465944s, 10792 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0465944s, 10792 KB] g=193, 3297 evaluated, 3296 expanded
[t=0.0465944s, 10792 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0465944s, 10792 KB] g=194, 3300 evaluated, 3299 expanded
[t=0.0465944s, 10792 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0465944s, 10792 KB] g=195, 3301 evaluated, 3300 expanded
[t=0.246594s, 13052 KB] Solution found!
[t=0.246594s, 13052 KB] Actual search time: 0.243998s
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
move pos-3-1 pos-2-1 n0 (1)
place-block pos-2-1 pos-1-1 n0 n1 (1)
move pos-2-1 pos-2-0 n0 (1)
move pos-2-0 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-2-0 n0 (1)
place-block pos-2-0 pos-1-0 n0 n1 (1)
move pos-2-0 pos-2-1 n0 (1)
remove-block pos-2-1 pos-1-1 n1 n0 (1)
place-block pos-2-1 pos-2-0 n0 n1 (1)
move-up pos-2-1 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move-up pos-3-0 n0 pos-2-0 n1 (1)
place-block pos-2-0 pos-1-0 n1 n2 (1)
move-down pos-2-0 n1 pos-2-1 n0 (1)
remove-block pos-2-1 pos-2-0 n1 n0 (1)
place-block pos-2-1 pos-1-1 n0 n1 (1)
move-up pos-2-1 n0 pos-1-1 n1 (1)
remove-block pos-1-1 pos-1-0 n2 n1 (1)
move-down pos-1-1 n1 pos-2-1 n0 (1)
place-block pos-2-1 pos-2-2 n0 n1 (1)
move pos-2-1 pos-2-0 n0 (1)
remove-block pos-2-0 pos-1-0 n1 n0 (1)
move pos-2-0 pos-1-0 n0 (1)
place-block pos-1-0 pos-2-0 n0 n1 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move-up pos-3-0 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-1-0 n0 (1)
move pos-1-0 pos-0-0 n0 (1)
place-block pos-0-0 pos-1-0 n0 n1 (1)
move pos-0-0 pos-0-1 n0 (1)
move pos-0-1 pos-0-2 n0 (1)
move pos-0-2 pos-1-2 n0 (1)
remove-block pos-1-2 pos-1-1 n1 n0 (1)
move pos-1-2 pos-1-1 n0 (1)
place-block pos-1-1 pos-1-2 n0 n1 (1)
move pos-1-1 pos-2-1 n0 (1)
remove-block pos-2-1 pos-2-2 n1 n0 (1)
place-block pos-2-1 pos-1-1 n0 n1 (1)
move-up pos-2-1 n0 pos-1-1 n1 (1)
move pos-1-1 pos-1-0 n1 (1)
move-down pos-1-0 n1 pos-0-0 n0 (1)
remove-block pos-0-0 pos-1-0 n1 n0 (1)
move pos-0-0 pos-1-0 n0 (1)
move-up pos-1-0 n0 pos-1-1 n1 (1)
place-block pos-1-1 pos-1-2 n1 n2 (1)
move-down pos-1-1 n1 pos-0-1 n0 (1)
move pos-0-1 pos-0-0 n0 (1)
move pos-0-0 pos-1-0 n0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move-up pos-3-0 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-2-1 n0 (1)
place-block pos-2-1 pos-2-2 n0 n1 (1)
move pos-2-1 pos-3-1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move-up pos-3-0 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-1-0 n0 (1)
move pos-1-0 pos-0-0 n0 (1)
place-block pos-0-0 pos-1-0 n0 n1 (1)
move-up pos-0-0 n0 pos-1-0 n1 (1)
move pos-1-0 pos-1-1 n1 (1)
remove-block pos-1-1 pos-1-2 n2 n1 (1)
move pos-1-1 pos-1-2 n1 (1)
place-block pos-1-2 pos-2-2 n1 n2 (1)
move pos-1-2 pos-1-1 n1 (1)
move-down pos-1-1 n1 pos-2-1 n0 (1)
move-up pos-2-1 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move-up pos-3-0 n0 pos-2-0 n1 (1)
move pos-2-0 pos-1-0 n1 (1)
place-block pos-1-0 pos-1-1 n1 n2 (1)
move pos-1-0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move-up pos-3-0 n0 pos-2-0 n1 (1)
move pos-2-0 pos-1-0 n1 (1)
place-block pos-1-0 pos-2-0 n1 n2 (1)
remove-block pos-1-0 pos-1-1 n2 n1 (1)
move pos-1-0 pos-1-1 n1 (1)
place-block pos-1-1 pos-1-2 n1 n2 (1)
move pos-1-1 pos-1-0 n1 (1)
remove-block pos-1-0 pos-2-0 n2 n1 (1)
place-block pos-1-0 pos-1-1 n1 n2 (1)
move pos-1-0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move-up pos-3-0 n0 pos-2-0 n1 (1)
move pos-2-0 pos-1-0 n1 (1)
move-up pos-1-0 n1 pos-1-1 n2 (1)
place-block pos-1-1 pos-1-2 n2 n3 (1)
move-down pos-1-1 n2 pos-1-0 n1 (1)
move pos-1-0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move-up pos-3-0 n0 pos-2-0 n1 (1)
place-block pos-2-0 pos-1-0 n1 n2 (1)
move-up pos-2-0 n1 pos-1-0 n2 (1)
move pos-1-0 pos-1-1 n2 (1)
remove-block pos-1-1 pos-1-2 n3 n2 (1)
move pos-1-1 pos-1-0 n2 (1)
move-down pos-1-0 n2 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-2-1 n0 (1)
place-block pos-2-1 pos-3-1 n0 n1 (1)
move-up pos-2-1 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move-up pos-3-0 n0 pos-2-0 n1 (1)
move-up pos-2-0 n1 pos-1-0 n2 (1)
place-block pos-1-0 pos-1-1 n2 n3 (1)
move-down pos-1-0 n2 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
remove-block pos-3-0 pos-3-1 n1 n0 (1)
move pos-3-0 pos-3-1 n0 (1)
place-block pos-3-1 pos-2-1 n0 n1 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move-up pos-3-0 n0 pos-2-0 n1 (1)
move pos-2-0 pos-2-1 n1 (1)
place-block pos-2-1 pos-2-0 n1 n2 (1)
remove-block pos-2-1 pos-2-2 n2 n1 (1)
move-up pos-2-1 n1 pos-2-0 n2 (1)
place-block pos-2-0 pos-1-0 n2 n3 (1)
move-down pos-2-0 n2 pos-2-1 n1 (1)
move-down pos-2-1 n1 pos-3-1 n0 (1)
move pos-3-1 pos-3-2 n0 (1)
remove-block pos-3-2 pos-2-2 n1 n0 (1)
move pos-3-2 pos-2-2 n0 (1)
move-up pos-2-2 n0 pos-2-1 n1 (1)
move-up pos-2-1 n1 pos-2-0 n2 (1)
move-up pos-2-0 n2 pos-1-0 n3 (1)
place-block pos-1-0 pos-1-1 n3 n4 (1)
move-down pos-1-0 n3 pos-2-0 n2 (1)
move-down pos-2-0 n2 pos-2-1 n1 (1)
move-down pos-2-1 n1 pos-2-2 n0 (1)
remove-block pos-2-2 pos-2-1 n1 n0 (1)
move pos-2-2 pos-2-1 n0 (1)
place-block pos-2-1 pos-2-2 n0 n1 (1)
move pos-2-1 pos-3-1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
place-block pos-3-1 pos-2-1 n0 n1 (1)
move-up pos-3-1 n0 pos-2-1 n1 (1)
remove-block pos-2-1 pos-2-0 n2 n1 (1)
place-block pos-2-1 pos-2-2 n1 n2 (1)
move pos-2-1 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
place-block pos-3-1 pos-3-2 n0 n1 (1)
move pos-3-1 pos-3-0 n0 (1)
create-block pos-3-0 (1)
move pos-3-0 pos-3-1 n0 (1)
move-up pos-3-1 n0 pos-2-1 n1 (1)
place-block pos-2-1 pos-2-0 n1 n2 (1)
move-down pos-2-1 n1 pos-3-1 n0 (1)
remove-block pos-3-1 pos-3-2 n1 n0 (1)
move-up pos-3-1 n0 pos-2-1 n1 (1)
move-up pos-2-1 n1 pos-2-2 n2 (1)
place-block pos-2-2 pos-1-2 n2 n3 (1)
move-up pos-2-2 n2 pos-1-2 n3 (1)
remove-block pos-1-2 pos-1-1 n4 n3 (1)
move pos-1-2 pos-1-1 n3 (1)
place-block pos-1-1 pos-1-0 n3 n4 (1)
move pos-1-1 pos-1-2 n3 (1)
move-down pos-1-2 n3 pos-2-2 n2 (1)
move-down pos-2-2 n2 pos-2-1 n1 (1)
remove-block pos-2-1 pos-2-2 n2 n1 (1)
move-down pos-2-1 n1 pos-3-1 n0 (1)
place-block pos-3-1 pos-3-2 n0 n1 (1)
move-up pos-3-1 n0 pos-3-2 n1 (1)
move pos-3-2 pos-2-2 n1 (1)
move pos-2-2 pos-2-1 n1 (1)
remove-block pos-2-1 pos-2-0 n2 n1 (1)
place-block pos-2-1 pos-2-2 n1 n2 (1)
move-down pos-2-1 n1 pos-3-1 n0 (1)
remove-block pos-3-1 pos-3-2 n1 n0 (1)
move-up pos-3-1 n0 pos-2-1 n1 (1)
move-up pos-2-1 n1 pos-2-2 n2 (1)
move-up pos-2-2 n2 pos-1-2 n3 (1)
place-block pos-1-2 pos-1-1 n3 n4 (1)
move-down pos-1-2 n3 pos-2-2 n2 (1)
remove-block pos-2-2 pos-1-2 n3 n2 (1)
move-down pos-2-2 n2 pos-2-1 n1 (1)
place-block pos-2-1 pos-2-0 n1 n2 (1)
move-down pos-2-1 n1 pos-3-1 n0 (1)
remove-block pos-3-1 pos-2-1 n1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
destroy-block pos-3-0 (1)
[t=0.246594s, 13052 KB] Plan length: 198 step(s).
[t=0.246594s, 13052 KB] Plan cost: 198
[t=0.246594s, 13052 KB] Expanded 22597 state(s).
[t=0.246594s, 13052 KB] Reopened 0 state(s).
[t=0.246594s, 13052 KB] Evaluated 22598 state(s).
[t=0.246594s, 13052 KB] Evaluations: 45196
[t=0.246594s, 13052 KB] Generated 69746 state(s).
[t=0.246594s, 13052 KB] Dead ends: 0 state(s).
[t=0.246594s, 13052 KB] Number of registered states: 22598
[t=0.246594s, 13052 KB] Int hash set load factor: 22598/32768 = 0.689636
[t=0.246594s, 13052 KB] Int hash set resizes: 15
[t=0.246594s, 13052 KB] Search time: 0.243998s
[t=0.246594s, 13052 KB] Total time: 0.246594s
Solution found.
Peak memory: 13052 KB
search exit code: 0

INFO     Planner time: 0.36s
