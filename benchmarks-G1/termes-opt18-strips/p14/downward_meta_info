INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/termes-opt18-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/termes-opt18-strips/p14.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-opt18-strips/p14/output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.010s CPU, 0.001s wall-clock]
Generated 52 rules.
Computing model... [0.010s CPU, 0.014s wall-clock]
880 relevant atoms
2652 auxiliary atoms
3532 final queue length
4323 total queue pushes
Completing instantiation... [0.010s CPU, 0.011s wall-clock]
Instantiating: [0.030s CPU, 0.028s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.001s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.013s wall-clock]
125 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
96 operators removed
0 axioms removed
18 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.005s wall-clock]
Reordering and filtering variables...
13 of 13 variables necessary.
0 of 12 mutex groups necessary.
608 of 608 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.002s wall-clock]
Translator variables: 13
Translator derived variables: 0
Translator facts: 69
Translator goal facts: 12
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 608
Translator axioms: 0
Translator task size: 3574
Translator peak memory: 31404 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.050s CPU, 0.053s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-opt18-strips/p14/output.sas
INFO     search time limit: 299.9s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-opt18-strips/p14/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-opt18-strips/p14/output.sas
[t=0s, 9880 KB] reading input...
[t=0.00164726s, 10004 KB] done reading input!
[t=0.00164726s, 10400 KB] Initializing landmark count heuristic...
[t=0.00164726s, 10400 KB] Generating landmark graph...
[t=0.00164726s, 10400 KB] Building a landmark graph with reasonable orders.
[t=0.00164726s, 10400 KB] Initializing Exploration...
[t=0.00164726s, 10532 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00164726s, 10532 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00164726s, 10532 KB] Landmarks generation time: 0s
[t=0.00164726s, 10532 KB] Discovered 30 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.00164726s, 10532 KB] 54 edges
[t=0.00164726s, 10532 KB] approx. reasonable orders
[t=0.00164726s, 10532 KB] approx. obedient reasonable orders
[t=0.00164726s, 10532 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00164726s, 10532 KB] Landmarks generation time: 0s
[t=0.00164726s, 10532 KB] Discovered 30 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.00164726s, 10532 KB] 54 edges
[t=0.00164726s, 10532 KB] Landmark graph generation time: 0s
[t=0.00164726s, 10532 KB] Landmark graph contains 30 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.00164726s, 10532 KB] Landmark graph contains 54 orderings.
[t=0.00164726s, 10532 KB] Simplifying 838 unary operators... done! [832 unary operators]
[t=0.00164726s, 10532 KB] time to simplify: 0s
[t=0.00164726s, 10532 KB] Initializing additive heuristic...
[t=0.00164726s, 10532 KB] Initializing FF heuristic...
[t=0.00164726s, 10532 KB] Building successor generator...done!
[t=0.00164726s, 10532 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00164726s, 10532 KB] time for successor generation creation: 0s
[t=0.00164726s, 10532 KB] Variables: 13
[t=0.00164726s, 10532 KB] FactPairs: 69
[t=0.00164726s, 10532 KB] Bytes per state: 8
[t=0.00164726s, 10532 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00564666s, 10532 KB] 13 initial landmarks, 12 goal landmarks
[t=0.00564666s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.00564666s, 10532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.00564666s, 10532 KB] g=0, 1 evaluated, 0 expanded
[t=0.00564666s, 10532 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.00564666s, 10532 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.00564666s, 10532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.00564666s, 10532 KB] g=1, 3 evaluated, 2 expanded
[t=0.00564666s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.00564666s, 10532 KB] g=2, 9 evaluated, 8 expanded
[t=0.00564666s, 10532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.00564666s, 10532 KB] g=3, 10 evaluated, 9 expanded
[t=0.00564666s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.00564666s, 10532 KB] g=3, 11 evaluated, 10 expanded
[t=0.00564666s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.00564666s, 10532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.00564666s, 10532 KB] g=9, 55 evaluated, 54 expanded
[t=0.00564666s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.00564666s, 10532 KB] g=16, 72 evaluated, 71 expanded
[t=0.00564666s, 10532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.00564666s, 10532 KB] g=17, 90 evaluated, 89 expanded
[t=0.00564666s, 10532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.00564666s, 10532 KB] g=21, 107 evaluated, 106 expanded
[t=0.00564666s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.00564666s, 10532 KB] g=22, 109 evaluated, 108 expanded
[t=0.00564666s, 10532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.00564666s, 10532 KB] g=23, 154 evaluated, 153 expanded
[t=0.00564666s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.00564666s, 10532 KB] g=23, 155 evaluated, 154 expanded
[t=0.00564666s, 10532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.00564666s, 10532 KB] g=24, 158 evaluated, 157 expanded
[t=0.00964647s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.00964647s, 10532 KB] g=42, 295 evaluated, 294 expanded
[t=0.00964647s, 10532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.00964647s, 10532 KB] g=48, 327 evaluated, 326 expanded
[t=0.00964647s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.00964647s, 10532 KB] g=45, 362 evaluated, 361 expanded
[t=0.00964647s, 10532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.00964647s, 10532 KB] g=50, 392 evaluated, 391 expanded
[t=0.00964647s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.00964647s, 10532 KB] g=54, 434 evaluated, 433 expanded
[t=0.00964647s, 10532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.00964647s, 10532 KB] g=60, 470 evaluated, 469 expanded
[t=0.00964647s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.00964647s, 10532 KB] g=62, 480 evaluated, 479 expanded
[t=0.0136464s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0136464s, 10532 KB] g=86, 701 evaluated, 700 expanded
[t=0.0176464s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0176464s, 10532 KB] g=110, 931 evaluated, 930 expanded
[t=0.0216463s, 10532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0216463s, 10532 KB] g=136, 1318 evaluated, 1317 expanded
[t=0.0256463s, 10532 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0256463s, 10532 KB] g=134, 1658 evaluated, 1657 expanded
[t=0.0256463s, 10532 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0256463s, 10532 KB] g=136, 1661 evaluated, 1660 expanded
[t=0.0416461s, 10816 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0416461s, 10816 KB] g=155, 3146 evaluated, 3145 expanded
[t=0.0536462s, 10944 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0536462s, 10944 KB] g=174, 3956 evaluated, 3955 expanded
[t=0.0536462s, 10944 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0536462s, 10944 KB] g=178, 3965 evaluated, 3964 expanded
[t=0.0536462s, 10944 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0536462s, 10944 KB] g=209, 4260 evaluated, 4259 expanded
[t=0.0576463s, 10944 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0576463s, 10944 KB] g=214, 4284 evaluated, 4283 expanded
[t=0.0576463s, 10944 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0576463s, 10944 KB] g=215, 4285 evaluated, 4284 expanded
[t=0.0576463s, 10944 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0576463s, 10944 KB] g=229, 4430 evaluated, 4429 expanded
[t=0.0576463s, 10944 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0576463s, 10944 KB] g=228, 4497 evaluated, 4496 expanded
[t=0.0576463s, 10944 KB] Solution found!
[t=0.0576463s, 10944 KB] Actual search time: 0.0519996s
create-block pos-1-0 (1)
move pos-1-0 pos-2-0 n0 (1)
place-block pos-2-0 pos-3-0 n0 n1 (1)
move pos-2-0 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move pos-1-0 pos-2-0 n0 (1)
move-up pos-2-0 n0 pos-3-0 n1 (1)
move-down pos-3-0 n1 pos-3-1 n0 (1)
place-block pos-3-1 pos-3-2 n0 n1 (1)
move-up pos-3-1 n0 pos-3-0 n1 (1)
move-down pos-3-0 n1 pos-2-0 n0 (1)
move pos-2-0 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move pos-1-0 pos-2-0 n0 (1)
move pos-2-0 pos-2-1 n0 (1)
place-block pos-2-1 pos-3-1 n0 n1 (1)
move pos-2-1 pos-2-0 n0 (1)
move pos-2-0 pos-1-0 n0 (1)
create-block pos-1-0 (1)
place-block pos-1-0 pos-2-0 n0 n1 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move pos-2-0 pos-3-0 n1 (1)
move pos-3-0 pos-3-1 n1 (1)
place-block pos-3-1 pos-3-2 n1 n2 (1)
move pos-3-1 pos-3-0 n1 (1)
move pos-3-0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-2-1 n0 (1)
remove-block pos-2-1 pos-3-1 n1 n0 (1)
move-up pos-2-1 n0 pos-2-0 n1 (1)
place-block pos-2-0 pos-3-0 n1 n2 (1)
move-down pos-2-0 n1 pos-2-1 n0 (1)
remove-block pos-2-1 pos-2-0 n1 n0 (1)
place-block pos-2-1 pos-3-1 n0 n1 (1)
move-up pos-2-1 n0 pos-3-1 n1 (1)
remove-block pos-3-1 pos-3-0 n2 n1 (1)
move pos-3-1 pos-3-0 n1 (1)
place-block pos-3-0 pos-3-1 n1 n2 (1)
move-down pos-3-0 n1 pos-2-0 n0 (1)
move pos-2-0 pos-1-0 n0 (1)
create-block pos-1-0 (1)
place-block pos-1-0 pos-2-0 n0 n1 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move pos-2-0 pos-3-0 n1 (1)
move-up pos-3-0 n1 pos-3-1 n2 (1)
place-block pos-3-1 pos-3-2 n2 n3 (1)
move-down pos-3-1 n2 pos-3-0 n1 (1)
move pos-3-0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-2-1 n0 (1)
remove-block pos-2-1 pos-2-0 n1 n0 (1)
move pos-2-1 pos-2-0 n0 (1)
move pos-2-0 pos-1-0 n0 (1)
place-block pos-1-0 pos-2-0 n0 n1 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
place-block pos-2-0 pos-3-0 n1 n2 (1)
move-up pos-2-0 n1 pos-3-0 n2 (1)
move pos-3-0 pos-3-1 n2 (1)
remove-block pos-3-1 pos-3-2 n3 n2 (1)
move pos-3-1 pos-3-0 n2 (1)
move-down pos-3-0 n2 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-2-1 n0 (1)
place-block pos-2-1 pos-1-1 n0 n1 (1)
move-up pos-2-1 n0 pos-2-0 n1 (1)
remove-block pos-2-0 pos-3-0 n2 n1 (1)
move pos-2-0 pos-3-0 n1 (1)
place-block pos-3-0 pos-2-0 n1 n2 (1)
remove-block pos-3-0 pos-3-1 n2 n1 (1)
move pos-3-0 pos-3-1 n1 (1)
place-block pos-3-1 pos-3-0 n1 n2 (1)
remove-block pos-3-1 pos-3-2 n2 n1 (1)
move-up pos-3-1 n1 pos-3-0 n2 (1)
place-block pos-3-0 pos-2-0 n2 n3 (1)
move-down pos-3-0 n2 pos-3-1 n1 (1)
move-down pos-3-1 n1 pos-2-1 n0 (1)
remove-block pos-2-1 pos-1-1 n1 n0 (1)
move-up pos-2-1 n0 pos-3-1 n1 (1)
move pos-3-1 pos-3-2 n1 (1)
place-block pos-3-2 pos-3-1 n1 n2 (1)
move-up pos-3-2 n1 pos-3-1 n2 (1)
move pos-3-1 pos-3-0 n2 (1)
remove-block pos-3-0 pos-2-0 n3 n2 (1)
move pos-3-0 pos-3-1 n2 (1)
place-block pos-3-1 pos-3-0 n2 n3 (1)
move-down pos-3-1 n2 pos-3-2 n1 (1)
remove-block pos-3-2 pos-3-1 n2 n1 (1)
move-down pos-3-2 n1 pos-2-2 n0 (1)
place-block pos-2-2 pos-2-1 n0 n1 (1)
move-up pos-2-2 n0 pos-2-1 n1 (1)
remove-block pos-2-1 pos-2-0 n2 n1 (1)
place-block pos-2-1 pos-3-1 n1 n2 (1)
move pos-2-1 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move pos-2-0 pos-2-1 n1 (1)
place-block pos-2-1 pos-2-0 n1 n2 (1)
move-up pos-2-1 n1 pos-3-1 n2 (1)
remove-block pos-3-1 pos-3-0 n3 n2 (1)
move pos-3-1 pos-3-0 n2 (1)
place-block pos-3-0 pos-2-0 n2 n3 (1)
move pos-3-0 pos-3-1 n2 (1)
move-down pos-3-1 n2 pos-3-2 n1 (1)
remove-block pos-3-2 pos-3-1 n2 n1 (1)
move pos-3-2 pos-3-1 n1 (1)
place-block pos-3-1 pos-3-2 n1 n2 (1)
move-up pos-3-1 n1 pos-3-0 n2 (1)
remove-block pos-3-0 pos-2-0 n3 n2 (1)
move pos-3-0 pos-2-0 n2 (1)
place-block pos-2-0 pos-3-0 n2 n3 (1)
move-down pos-2-0 n2 pos-2-1 n1 (1)
remove-block pos-2-1 pos-2-0 n2 n1 (1)
place-block pos-2-1 pos-3-1 n1 n2 (1)
move-up pos-2-1 n1 pos-3-1 n2 (1)
remove-block pos-3-1 pos-3-0 n3 n2 (1)
place-block pos-3-1 pos-3-2 n2 n3 (1)
move pos-3-1 pos-3-0 n2 (1)
move-down pos-3-0 n2 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move-up pos-2-0 n1 pos-3-0 n2 (1)
place-block pos-3-0 pos-3-1 n2 n3 (1)
move-down pos-3-0 n2 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move-up pos-2-0 n1 pos-3-0 n2 (1)
move-up pos-3-0 n2 pos-3-1 n3 (1)
place-block pos-3-1 pos-3-2 n3 n4 (1)
move-down pos-3-1 n3 pos-3-0 n2 (1)
move-down pos-3-0 n2 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move pos-2-0 pos-2-1 n1 (1)
move-down pos-2-1 n1 pos-2-2 n0 (1)
place-block pos-2-2 pos-1-2 n0 n1 (1)
move-up pos-2-2 n0 pos-2-1 n1 (1)
move pos-2-1 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move pos-2-0 pos-2-1 n1 (1)
place-block pos-2-1 pos-2-0 n1 n2 (1)
move-down pos-2-1 n1 pos-2-2 n0 (1)
remove-block pos-2-2 pos-1-2 n1 n0 (1)
move-up pos-2-2 n0 pos-2-1 n1 (1)
move-up pos-2-1 n1 pos-2-0 n2 (1)
move pos-2-0 pos-3-0 n2 (1)
place-block pos-3-0 pos-2-0 n2 n3 (1)
remove-block pos-3-0 pos-3-1 n3 n2 (1)
move pos-3-0 pos-3-1 n2 (1)
place-block pos-3-1 pos-3-0 n2 n3 (1)
move-down pos-3-1 n2 pos-2-1 n1 (1)
move-down pos-2-1 n1 pos-2-2 n0 (1)
remove-block pos-2-2 pos-2-1 n1 n0 (1)
move pos-2-2 pos-2-1 n0 (1)
move pos-2-1 pos-1-1 n0 (1)
move pos-1-1 pos-1-2 n0 (1)
place-block pos-1-2 pos-0-2 n0 n1 (1)
move pos-1-2 pos-1-1 n0 (1)
move pos-1-1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move pos-1-0 pos-1-1 n0 (1)
place-block pos-1-1 pos-2-1 n0 n1 (1)
move pos-1-1 pos-1-2 n0 (1)
remove-block pos-1-2 pos-0-2 n1 n0 (1)
move pos-1-2 pos-2-2 n0 (1)
move-up pos-2-2 n0 pos-2-1 n1 (1)
move-up pos-2-1 n1 pos-3-1 n2 (1)
move-up pos-3-1 n2 pos-3-0 n3 (1)
place-block pos-3-0 pos-2-0 n3 n4 (1)
move-down pos-3-0 n3 pos-3-1 n2 (1)
move-down pos-3-1 n2 pos-2-1 n1 (1)
move-down pos-2-1 n1 pos-2-2 n0 (1)
remove-block pos-2-2 pos-2-1 n1 n0 (1)
move pos-2-2 pos-2-1 n0 (1)
move pos-2-1 pos-1-1 n0 (1)
move pos-1-1 pos-1-2 n0 (1)
place-block pos-1-2 pos-0-2 n0 n1 (1)
move pos-1-2 pos-1-1 n0 (1)
move pos-1-1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move pos-1-0 pos-0-0 n0 (1)
move pos-0-0 pos-0-1 n0 (1)
place-block pos-0-1 pos-1-1 n0 n1 (1)
remove-block pos-0-1 pos-0-2 n1 n0 (1)
move-up pos-0-1 n0 pos-1-1 n1 (1)
move-down pos-1-1 n1 pos-2-1 n0 (1)
move pos-2-1 pos-2-2 n0 (1)
place-block pos-2-2 pos-2-1 n0 n1 (1)
move pos-2-2 pos-1-2 n0 (1)
move-up pos-1-2 n0 pos-1-1 n1 (1)
move-down pos-1-1 n1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-1-1 n1 (1)
place-block pos-1-1 pos-2-1 n1 n2 (1)
move-down pos-1-1 n1 pos-1-2 n0 (1)
remove-block pos-1-2 pos-1-1 n1 n0 (1)
move pos-1-2 pos-1-1 n0 (1)
move pos-1-1 pos-1-0 n0 (1)
place-block pos-1-0 pos-1-1 n0 n1 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-1-1 n1 (1)
move-up pos-1-1 n1 pos-2-1 n2 (1)
place-block pos-2-1 pos-3-1 n2 n3 (1)
move-down pos-2-1 n2 pos-1-1 n1 (1)
remove-block pos-1-1 pos-2-1 n2 n1 (1)
move-down pos-1-1 n1 pos-1-2 n0 (1)
place-block pos-1-2 pos-0-2 n0 n1 (1)
remove-block pos-1-2 pos-1-1 n1 n0 (1)
move pos-1-2 pos-1-1 n0 (1)
place-block pos-1-1 pos-0-1 n0 n1 (1)
remove-block pos-1-1 pos-2-1 n1 n0 (1)
move pos-1-1 pos-1-2 n0 (1)
place-block pos-1-2 pos-1-1 n0 n1 (1)
remove-block pos-1-2 pos-0-2 n1 n0 (1)
move pos-1-2 pos-0-2 n0 (1)
place-block pos-0-2 pos-1-2 n0 n1 (1)
remove-block pos-0-2 pos-0-1 n1 n0 (1)
move pos-0-2 pos-0-1 n0 (1)
place-block pos-0-1 pos-0-2 n0 n1 (1)
move-up pos-0-1 n0 pos-0-2 n1 (1)
move pos-0-2 pos-1-2 n1 (1)
move-down pos-1-2 n1 pos-2-2 n0 (1)
move pos-2-2 pos-2-1 n0 (1)
remove-block pos-2-1 pos-1-1 n1 n0 (1)
move pos-2-1 pos-2-2 n0 (1)
move-up pos-2-2 n0 pos-1-2 n1 (1)
place-block pos-1-2 pos-0-2 n1 n2 (1)
move-down pos-1-2 n1 pos-2-2 n0 (1)
remove-block pos-2-2 pos-1-2 n1 n0 (1)
place-block pos-2-2 pos-2-1 n0 n1 (1)
move pos-2-2 pos-1-2 n0 (1)
move pos-1-2 pos-1-1 n0 (1)
remove-block pos-1-1 pos-2-1 n1 n0 (1)
move pos-1-1 pos-0-1 n0 (1)
move pos-0-1 pos-0-0 n0 (1)
place-block pos-0-0 pos-0-1 n0 n1 (1)
move-up pos-0-0 n0 pos-0-1 n1 (1)
remove-block pos-0-1 pos-0-2 n2 n1 (1)
move pos-0-1 pos-0-2 n1 (1)
place-block pos-0-2 pos-0-1 n1 n2 (1)
move-down pos-0-2 n1 pos-1-2 n0 (1)
remove-block pos-1-2 pos-0-2 n1 n0 (1)
move pos-1-2 pos-0-2 n0 (1)
place-block pos-0-2 pos-1-2 n0 n1 (1)
move-up pos-0-2 n0 pos-1-2 n1 (1)
move-down pos-1-2 n1 pos-1-1 n0 (1)
remove-block pos-1-1 pos-1-2 n1 n0 (1)
move pos-1-1 pos-2-1 n0 (1)
place-block pos-2-1 pos-1-1 n0 n1 (1)
move-up pos-2-1 n0 pos-1-1 n1 (1)
remove-block pos-1-1 pos-0-1 n2 n1 (1)
move-down pos-1-1 n1 pos-1-0 n0 (1)
destroy-block pos-1-0 (1)
move pos-1-0 pos-0-0 n0 (1)
remove-block pos-0-0 pos-0-1 n1 n0 (1)
move pos-0-0 pos-1-0 n0 (1)
destroy-block pos-1-0 (1)
remove-block pos-1-0 pos-1-1 n1 n0 (1)
destroy-block pos-1-0 (1)
[t=0.0576463s, 10944 KB] Plan length: 264 step(s).
[t=0.0576463s, 10944 KB] Plan cost: 264
[t=0.0576463s, 10944 KB] Expanded 4643 state(s).
[t=0.0576463s, 10944 KB] Reopened 0 state(s).
[t=0.0576463s, 10944 KB] Evaluated 4644 state(s).
[t=0.0576463s, 10944 KB] Evaluations: 9288
[t=0.0576463s, 10944 KB] Generated 16971 state(s).
[t=0.0576463s, 10944 KB] Dead ends: 0 state(s).
[t=0.0576463s, 10944 KB] Number of registered states: 4644
[t=0.0576463s, 10944 KB] Int hash set load factor: 4644/8192 = 0.566895
[t=0.0576463s, 10944 KB] Int hash set resizes: 13
[t=0.0576463s, 10944 KB] Search time: 0.055999s
[t=0.0576463s, 10944 KB] Total time: 0.0576463s
Solution found.
Peak memory: 10944 KB
search exit code: 0

INFO     Planner time: 0.16s
