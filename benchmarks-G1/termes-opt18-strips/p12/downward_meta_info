INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.99s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/termes-opt18-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/termes-opt18-strips/p12.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-opt18-strips/p12/output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 52 rules.
Computing model... [0.010s CPU, 0.012s wall-clock]
694 relevant atoms
2181 auxiliary atoms
2875 final queue length
3474 total queue pushes
Completing instantiation... [0.010s CPU, 0.009s wall-clock]
Instantiating: [0.020s CPU, 0.024s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.010s CPU, 0.011s wall-clock]
94 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
69 operators removed
0 axioms removed
17 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.004s wall-clock]
Reordering and filtering variables...
13 of 13 variables necessary.
0 of 12 mutex groups necessary.
468 of 468 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.001s wall-clock]
Translator variables: 13
Translator derived variables: 0
Translator facts: 58
Translator goal facts: 12
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 468
Translator axioms: 0
Translator task size: 2751
Translator peak memory: 30636 KB
Writing output... [0.000s CPU, 0.002s wall-clock]
Done! [0.040s CPU, 0.045s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-opt18-strips/p12/output.sas
INFO     search time limit: 299.91s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-opt18-strips/p12/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-opt18-strips/p12/output.sas
[t=0s, 9880 KB] reading input...
[t=0.000185112s, 10004 KB] done reading input!
[t=0.000185112s, 10268 KB] Initializing landmark count heuristic...
[t=0.000185112s, 10268 KB] Generating landmark graph...
[t=0.000185112s, 10268 KB] Building a landmark graph with reasonable orders.
[t=0.000185112s, 10268 KB] Initializing Exploration...
[t=0.000185112s, 10408 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.000185112s, 10540 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.000185112s, 10540 KB] Landmarks generation time: 0s
[t=0.000185112s, 10540 KB] Discovered 26 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.000185112s, 10540 KB] 34 edges
[t=0.000185112s, 10540 KB] approx. reasonable orders
[t=0.000185112s, 10540 KB] approx. obedient reasonable orders
[t=0.000185112s, 10540 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.000185112s, 10540 KB] Landmarks generation time: 0s
[t=0.000185112s, 10540 KB] Discovered 26 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.000185112s, 10540 KB] 34 edges
[t=0.000185112s, 10540 KB] Landmark graph generation time: 0s
[t=0.000185112s, 10540 KB] Landmark graph contains 26 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.000185112s, 10540 KB] Landmark graph contains 34 orderings.
[t=0.000185112s, 10540 KB] Simplifying 642 unary operators... done! [636 unary operators]
[t=0.00391432s, 10540 KB] time to simplify: 0.00372921s
[t=0.00391432s, 10540 KB] Initializing additive heuristic...
[t=0.00391432s, 10540 KB] Initializing FF heuristic...
[t=0.00391432s, 10540 KB] Building successor generator...done!
[t=0.00391432s, 10540 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00391432s, 10540 KB] time for successor generation creation: 0s
[t=0.00391432s, 10540 KB] Variables: 13
[t=0.00391432s, 10540 KB] FactPairs: 58
[t=0.00391432s, 10540 KB] Bytes per state: 4
[t=0.00391432s, 10540 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00391432s, 10540 KB] 13 initial landmarks, 12 goal landmarks
[t=0.00391432s, 10540 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.00391432s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.00391432s, 10540 KB] g=0, 1 evaluated, 0 expanded
[t=0.00391432s, 10540 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.00391432s, 10540 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.00391432s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.00391432s, 10540 KB] g=1, 2 evaluated, 1 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.00391432s, 10540 KB] g=2, 3 evaluated, 2 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.00391432s, 10540 KB] g=1, 4 evaluated, 3 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.00391432s, 10540 KB] g=2, 8 evaluated, 7 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.00391432s, 10540 KB] g=3, 11 evaluated, 10 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.00391432s, 10540 KB] g=4, 15 evaluated, 14 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.00391432s, 10540 KB] g=9, 48 evaluated, 47 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.00391432s, 10540 KB] g=10, 56 evaluated, 55 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.00391432s, 10540 KB] g=11, 58 evaluated, 57 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.00391432s, 10540 KB] g=12, 68 evaluated, 67 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.00391432s, 10540 KB] g=14, 75 evaluated, 74 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.00391432s, 10540 KB] g=15, 76 evaluated, 75 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.00391432s, 10540 KB] g=15, 77 evaluated, 76 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.00391432s, 10540 KB] g=23, 126 evaluated, 125 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.00391432s, 10540 KB] g=26, 134 evaluated, 133 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.00391432s, 10540 KB] g=26, 150 evaluated, 149 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.00391432s, 10540 KB] g=27, 151 evaluated, 150 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.00391432s, 10540 KB] g=27, 153 evaluated, 152 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.00391432s, 10540 KB] g=36, 220 evaluated, 219 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.00391432s, 10540 KB] g=39, 230 evaluated, 229 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.00391432s, 10540 KB] g=39, 231 evaluated, 230 expanded
[t=0.00391432s, 10540 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.00391432s, 10540 KB] g=40, 234 evaluated, 233 expanded
[t=0.00791493s, 10540 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.00791493s, 10540 KB] g=56, 529 evaluated, 528 expanded
[t=0.0119154s, 10540 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0119154s, 10540 KB] g=63, 760 evaluated, 759 expanded
[t=0.0119154s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0119154s, 10540 KB] g=83, 1010 evaluated, 1009 expanded
[t=0.0119154s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0119154s, 10540 KB] g=96, 1090 evaluated, 1089 expanded
[t=0.0119154s, 10540 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0119154s, 10540 KB] g=97, 1091 evaluated, 1090 expanded
[t=0.031911s, 10676 KB] Solution found!
[t=0.031911s, 10676 KB] Actual search time: 0.0279967s
create-block pos-1-0 (1)
move pos-1-0 pos-0-0 n0 (1)
move pos-0-0 pos-0-1 n0 (1)
move pos-0-1 pos-1-1 n0 (1)
place-block pos-1-1 pos-2-1 n0 n1 (1)
move pos-1-1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
place-block pos-1-0 pos-0-0 n0 n1 (1)
create-block pos-1-0 (1)
place-block pos-1-0 pos-2-0 n0 n1 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move pos-2-0 pos-2-1 n1 (1)
place-block pos-2-1 pos-2-0 n1 n2 (1)
move-down pos-2-1 n1 pos-1-1 n0 (1)
move pos-1-1 pos-0-1 n0 (1)
remove-block pos-0-1 pos-0-0 n1 n0 (1)
move pos-0-1 pos-0-0 n0 (1)
place-block pos-0-0 pos-0-1 n0 n1 (1)
move pos-0-0 pos-1-0 n0 (1)
create-block pos-1-0 (1)
place-block pos-1-0 pos-0-0 n0 n1 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-0-0 n1 (1)
move pos-0-0 pos-0-1 n1 (1)
place-block pos-0-1 pos-0-0 n1 n2 (1)
move-down pos-0-1 n1 pos-1-1 n0 (1)
move-up pos-1-1 n0 pos-2-1 n1 (1)
remove-block pos-2-1 pos-2-0 n2 n1 (1)
move pos-2-1 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-1-0 n0 (1)
place-block pos-1-0 pos-1-1 n0 n1 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-1-1 n1 (1)
place-block pos-1-1 pos-0-1 n1 n2 (1)
move pos-1-1 pos-2-1 n1 (1)
move pos-2-1 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
place-block pos-2-0 pos-2-1 n1 n2 (1)
move-down pos-2-0 n1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
move pos-3-0 pos-3-1 n0 (1)
place-block pos-3-1 pos-3-0 n0 n1 (1)
move-up pos-3-1 n0 pos-3-0 n1 (1)
move pos-3-0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-1-0 n0 (1)
remove-block pos-1-0 pos-1-1 n1 n0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move pos-2-0 pos-3-0 n1 (1)
place-block pos-3-0 pos-2-0 n1 n2 (1)
move-down pos-3-0 n1 pos-3-1 n0 (1)
remove-block pos-3-1 pos-3-0 n1 n0 (1)
move pos-3-1 pos-3-0 n0 (1)
place-block pos-3-0 pos-3-1 n0 n1 (1)
move-up pos-3-0 n0 pos-3-1 n1 (1)
move-down pos-3-1 n1 pos-3-2 n0 (1)
remove-block pos-3-2 pos-3-1 n1 n0 (1)
place-block pos-3-2 pos-2-2 n0 n1 (1)
move-up pos-3-2 n0 pos-2-2 n1 (1)
remove-block pos-2-2 pos-2-1 n2 n1 (1)
move pos-2-2 pos-2-1 n1 (1)
move-down pos-2-1 n1 pos-1-1 n0 (1)
move pos-1-1 pos-1-2 n0 (1)
place-block pos-1-2 pos-0-2 n0 n1 (1)
remove-block pos-1-2 pos-2-2 n1 n0 (1)
place-block pos-1-2 pos-1-1 n0 n1 (1)
remove-block pos-1-2 pos-0-2 n1 n0 (1)
move-up pos-1-2 n0 pos-1-1 n1 (1)
place-block pos-1-1 pos-2-1 n1 n2 (1)
remove-block pos-1-1 pos-0-1 n2 n1 (1)
move pos-1-1 pos-0-1 n1 (1)
place-block pos-0-1 pos-1-1 n1 n2 (1)
remove-block pos-0-1 pos-0-0 n2 n1 (1)
move-up pos-0-1 n1 pos-1-1 n2 (1)
place-block pos-1-1 pos-2-1 n2 n3 (1)
move-down pos-1-1 n2 pos-0-1 n1 (1)
remove-block pos-0-1 pos-1-1 n2 n1 (1)
place-block pos-0-1 pos-0-0 n1 n2 (1)
move pos-0-1 pos-1-1 n1 (1)
move-down pos-1-1 n1 pos-1-2 n0 (1)
remove-block pos-1-2 pos-1-1 n1 n0 (1)
move pos-1-2 pos-1-1 n0 (1)
place-block pos-1-1 pos-1-2 n0 n1 (1)
move pos-1-1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
place-block pos-1-0 pos-1-1 n0 n1 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-1-1 n1 (1)
move pos-1-1 pos-1-2 n1 (1)
move-down pos-1-2 n1 pos-2-2 n0 (1)
place-block pos-2-2 pos-3-2 n0 n1 (1)
remove-block pos-2-2 pos-1-2 n1 n0 (1)
move pos-2-2 pos-1-2 n0 (1)
place-block pos-1-2 pos-0-2 n0 n1 (1)
remove-block pos-1-2 pos-1-1 n1 n0 (1)
move pos-1-2 pos-2-2 n0 (1)
place-block pos-2-2 pos-1-2 n0 n1 (1)
remove-block pos-2-2 pos-3-2 n1 n0 (1)
move-up pos-2-2 n0 pos-1-2 n1 (1)
place-block pos-1-2 pos-0-2 n1 n2 (1)
move-up pos-1-2 n1 pos-0-2 n2 (1)
move-down pos-0-2 n2 pos-0-1 n1 (1)
move-down pos-0-1 n1 pos-1-1 n0 (1)
move pos-1-1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
place-block pos-1-0 pos-1-1 n0 n1 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-1-1 n1 (1)
place-block pos-1-1 pos-0-1 n1 n2 (1)
move pos-1-1 pos-1-2 n1 (1)
remove-block pos-1-2 pos-0-2 n2 n1 (1)
move-down pos-1-2 n1 pos-2-2 n0 (1)
place-block pos-2-2 pos-3-2 n0 n1 (1)
remove-block pos-2-2 pos-1-2 n1 n0 (1)
move pos-2-2 pos-1-2 n0 (1)
place-block pos-1-2 pos-2-2 n0 n1 (1)
move-up pos-1-2 n0 pos-2-2 n1 (1)
move pos-2-2 pos-3-2 n1 (1)
move-down pos-3-2 n1 pos-3-1 n0 (1)
remove-block pos-3-1 pos-3-2 n1 n0 (1)
move pos-3-1 pos-3-2 n0 (1)
move-up pos-3-2 n0 pos-2-2 n1 (1)
move-down pos-2-2 n1 pos-1-2 n0 (1)
move-up pos-1-2 n0 pos-1-1 n1 (1)
move-up pos-1-1 n1 pos-0-1 n2 (1)
place-block pos-0-1 pos-0-0 n2 n3 (1)
move-down pos-0-1 n2 pos-1-1 n1 (1)
move-down pos-1-1 n1 pos-1-2 n0 (1)
remove-block pos-1-2 pos-0-2 n1 n0 (1)
move-up pos-1-2 n0 pos-1-1 n1 (1)
move-down pos-1-1 n1 pos-1-0 n0 (1)
destroy-block pos-1-0 (1)
remove-block pos-1-0 pos-1-1 n1 n0 (1)
destroy-block pos-1-0 (1)
move pos-1-0 pos-1-1 n0 (1)
move pos-1-1 pos-1-2 n0 (1)
remove-block pos-1-2 pos-2-2 n1 n0 (1)
place-block pos-1-2 pos-1-1 n0 n1 (1)
move-up pos-1-2 n0 pos-1-1 n1 (1)
move-up pos-1-1 n1 pos-0-1 n2 (1)
remove-block pos-0-1 pos-0-0 n3 n2 (1)
move-down pos-0-1 n2 pos-1-1 n1 (1)
move-down pos-1-1 n1 pos-1-0 n0 (1)
destroy-block pos-1-0 (1)
remove-block pos-1-0 pos-1-1 n1 n0 (1)
destroy-block pos-1-0 (1)
[t=0.031911s, 10676 KB] Plan length: 150 step(s).
[t=0.031911s, 10676 KB] Plan cost: 150
[t=0.031911s, 10676 KB] Expanded 3296 state(s).
[t=0.031911s, 10676 KB] Reopened 0 state(s).
[t=0.031911s, 10676 KB] Evaluated 3297 state(s).
[t=0.031911s, 10676 KB] Evaluations: 6594
[t=0.031911s, 10676 KB] Generated 11067 state(s).
[t=0.031911s, 10676 KB] Dead ends: 0 state(s).
[t=0.031911s, 10676 KB] Number of registered states: 3297
[t=0.031911s, 10676 KB] Int hash set load factor: 3297/4096 = 0.804932
[t=0.031911s, 10676 KB] Int hash set resizes: 12
[t=0.031911s, 10676 KB] Search time: 0.0279967s
[t=0.031911s, 10676 KB] Total time: 0.031911s
Solution found.
Peak memory: 10676 KB
search exit code: 0

INFO     Planner time: 0.12s
