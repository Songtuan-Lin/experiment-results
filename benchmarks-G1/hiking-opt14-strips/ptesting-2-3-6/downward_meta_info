INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/hiking-opt14-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/hiking-opt14-strips/ptesting-2-3-6.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/hiking-opt14-strips/ptesting-2-3-6/output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 74 rules.
Computing model... [0.040s CPU, 0.045s wall-clock]
6725 relevant atoms
1977 auxiliary atoms
8702 final queue length
31265 total queue pushes
Completing instantiation... [0.160s CPU, 0.165s wall-clock]
Instantiating: [0.200s CPU, 0.214s wall-clock]
Computing fact groups...
Finding invariants...
16 initial candidates
Finding invariants: [0.010s CPU, 0.005s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.007s wall-clock]
Translating task: [0.130s CPU, 0.136s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
13 propositions removed
Detecting unreachable propositions: [0.050s CPU, 0.048s wall-clock]
Reordering and filtering variables...
13 of 13 variables necessary.
0 of 13 mutex groups necessary.
4436 of 4436 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.020s wall-clock]
Translator variables: 13
Translator derived variables: 0
Translator facts: 70
Translator goal facts: 2
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 4436
Translator axioms: 0
Translator task size: 37465
Translator peak memory: 55104 KB
Writing output... [0.020s CPU, 0.022s wall-clock]
Done! [0.450s CPU, 0.455s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/hiking-opt14-strips/ptesting-2-3-6/output.sas
INFO     search time limit: 299.5s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/hiking-opt14-strips/ptesting-2-3-6/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/hiking-opt14-strips/ptesting-2-3-6/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0105026s, 11344 KB] done reading input!
[t=0.0105026s, 11740 KB] Initializing landmark count heuristic...
[t=0.0105026s, 11740 KB] Generating landmark graph...
[t=0.0105026s, 11872 KB] Building a landmark graph with reasonable orders.
[t=0.0105026s, 12008 KB] Initializing Exploration...
[t=0.0145034s, 14352 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.050503s, 15144 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.050503s, 15144 KB] Landmarks generation time: 0.0400004s
[t=0.050503s, 15144 KB] Discovered 38 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.050503s, 15144 KB] 130 edges
[t=0.050503s, 15144 KB] approx. reasonable orders
[t=0.050503s, 15144 KB] approx. obedient reasonable orders
[t=0.050503s, 15144 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.050503s, 15144 KB] Landmarks generation time: 0.0400004s
[t=0.050503s, 15144 KB] Discovered 38 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.050503s, 15144 KB] 142 edges
[t=0.050503s, 15144 KB] Landmark graph generation time: 0.0400004s
[t=0.050503s, 15144 KB] Landmark graph contains 38 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.050503s, 15144 KB] Landmark graph contains 142 orderings.
[t=0.050503s, 15144 KB] Simplifying 14916 unary operators... done! [1596 unary operators]
[t=0.0545033s, 15144 KB] time to simplify: 0.00400032s
[t=0.0545033s, 15144 KB] Initializing additive heuristic...
[t=0.0545033s, 15144 KB] Initializing FF heuristic...
[t=0.0545033s, 15144 KB] Building successor generator...done!
[t=0.0545033s, 15144 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0545033s, 15144 KB] time for successor generation creation: 0s
[t=0.0545033s, 15144 KB] Variables: 13
[t=0.0545033s, 15144 KB] FactPairs: 70
[t=0.0545033s, 15144 KB] Bytes per state: 8
[t=0.0545033s, 15144 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0545033s, 15144 KB] 6 initial landmarks, 2 goal landmarks
[t=0.0545033s, 15144 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0545033s, 15144 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0545033s, 15144 KB] g=0, 1 evaluated, 0 expanded
[t=0.0545033s, 15144 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 32
[t=0.0545033s, 15144 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0545033s, 15144 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.0545033s, 15144 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0545033s, 15144 KB] g=1, 2 evaluated, 1 expanded
[t=0.0585031s, 15144 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.0585031s, 15144 KB] g=2, 7 evaluated, 6 expanded
[t=0.0585031s, 15144 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.0585031s, 15144 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0585031s, 15144 KB] g=3, 9 evaluated, 8 expanded
[t=0.0585031s, 15144 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0585031s, 15144 KB] g=4, 10 evaluated, 9 expanded
[t=0.0585031s, 15144 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0585031s, 15144 KB] g=5, 11 evaluated, 10 expanded
[t=0.0585031s, 15144 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 26
[t=0.0585031s, 15144 KB] g=4, 12 evaluated, 11 expanded
[t=0.0585031s, 15144 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0585031s, 15144 KB] g=5, 23 evaluated, 22 expanded
[t=0.0585031s, 15144 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0585031s, 15144 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0585031s, 15144 KB] g=7, 62 evaluated, 61 expanded
[t=0.0665029s, 15144 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0665029s, 15144 KB] g=10, 365 evaluated, 363 expanded
[t=0.0665029s, 15144 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0665029s, 15144 KB] g=11, 368 evaluated, 366 expanded
[t=0.0665029s, 15144 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.0665029s, 15144 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0665029s, 15144 KB] g=12, 369 evaluated, 367 expanded
[t=0.070503s, 15144 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.070503s, 15144 KB] g=15, 482 evaluated, 480 expanded
[t=0.070503s, 15144 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.070503s, 15144 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.070503s, 15144 KB] g=17, 506 evaluated, 504 expanded
[t=0.070503s, 15144 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.070503s, 15144 KB] g=18, 508 evaluated, 506 expanded
[t=0.306503s, 20872 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.306503s, 20872 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.306503s, 20872 KB] g=23, 9728 evaluated, 9714 expanded
[t=0.306503s, 20872 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.306503s, 20872 KB] g=24, 9731 evaluated, 9716 expanded
[t=0.306503s, 20872 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.306503s, 20872 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.306503s, 20872 KB] g=25, 9739 evaluated, 9724 expanded
[t=0.306503s, 20872 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.306503s, 20872 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.306503s, 20872 KB] g=29, 9833 evaluated, 9813 expanded
[t=0.390498s, 22460 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.390498s, 22460 KB] g=34, 13733 evaluated, 13671 expanded
[t=0.390498s, 22460 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.390498s, 22460 KB] g=35, 13739 evaluated, 13677 expanded
[t=0.390498s, 22460 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.390498s, 22460 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.390498s, 22460 KB] g=37, 13749 evaluated, 13687 expanded
[t=0.390498s, 22460 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.390498s, 22460 KB] g=38, 13751 evaluated, 13689 expanded
[t=0.390498s, 22460 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.390498s, 22460 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.390498s, 22460 KB] g=40, 13765 evaluated, 13703 expanded
[t=0.390498s, 22460 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.390498s, 22460 KB] g=41, 13767 evaluated, 13705 expanded
[t=0.390498s, 22460 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.390498s, 22460 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.390498s, 22460 KB] g=43, 13771 evaluated, 13709 expanded
[t=0.390498s, 22460 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.390498s, 22460 KB] g=44, 13772 evaluated, 13710 expanded
[t=0.390498s, 22460 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.390498s, 22460 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.390498s, 22460 KB] g=46, 13775 evaluated, 13713 expanded
[t=0.390498s, 22592 KB] Solution found!
[t=0.390498s, 22592 KB] Actual search time: 0.335994s
drive_tent girl0 place0 place1 car0 tent0 (1)
put_up girl0 place1 tent0 (1)
walk_together tent0 place1 guy1 place0 girl1 couple1 (1)
drive_tent guy0 place0 place2 car1 tent1 (1)
drive girl0 place1 place3 car0 (1)
put_up guy0 place2 tent1 (1)
walk_together tent1 place2 guy1 place1 girl1 couple1 (1)
drive guy0 place2 place1 car1 (1)
put_down guy0 place1 tent0 (1)
drive_tent guy0 place1 place3 car1 tent0 (1)
put_up girl0 place3 tent0 (1)
walk_together tent0 place3 guy1 place2 girl1 couple1 (1)
put_down girl0 place3 tent0 (1)
drive_tent girl0 place3 place4 car0 tent0 (1)
drive guy0 place3 place0 car1 (1)
put_up girl0 place4 tent0 (1)
walk_together tent0 place4 guy1 place3 girl1 couple1 (1)
put_down girl0 place4 tent0 (1)
drive_tent girl0 place4 place1 car0 tent0 (1)
put_up girl0 place1 tent0 (1)
drive guy0 place0 place1 car2 (1)
drive_passenger girl0 place1 place0 car0 guy0 (1)
walk_together tent0 place1 guy0 place0 girl0 couple0 (1)
put_down girl0 place1 tent0 (1)
drive_tent girl0 place1 place3 car2 tent0 (1)
drive_tent girl0 place3 place5 car2 tent0 (1)
put_up girl0 place5 tent0 (1)
drive girl0 place5 place2 car2 (1)
walk_together tent0 place5 guy1 place4 girl1 couple1 (1)
drive girl0 place2 place0 car2 (1)
drive girl0 place0 place1 car0 (1)
drive girl0 place1 place5 car0 (1)
drive_passenger girl0 place5 place1 car0 girl1 (1)
walk_together tent1 place2 guy0 place1 girl0 couple0 (1)
drive girl1 place1 place2 car0 (1)
put_down girl0 place2 tent1 (1)
drive_tent girl0 place2 place3 car0 tent1 (1)
put_up girl0 place3 tent1 (1)
drive girl0 place3 place2 car0 (1)
walk_together tent1 place3 guy0 place2 girl0 couple0 (1)
drive girl1 place2 place3 car0 (1)
put_down girl0 place3 tent1 (1)
drive_tent girl0 place3 place4 car0 tent1 (1)
put_up girl0 place4 tent1 (1)
drive girl0 place4 place3 car0 (1)
walk_together tent1 place4 guy0 place3 girl0 couple0 (1)
walk_together tent0 place5 guy0 place4 girl0 couple0 (1)
[t=0.390498s, 22592 KB] Plan length: 47 step(s).
[t=0.390498s, 22592 KB] Plan cost: 47
[t=0.390498s, 22592 KB] Expanded 13714 state(s).
[t=0.390498s, 22592 KB] Reopened 0 state(s).
[t=0.390498s, 22592 KB] Evaluated 13776 state(s).
[t=0.390498s, 22592 KB] Evaluations: 27491
[t=0.390498s, 22592 KB] Generated 438516 state(s).
[t=0.390498s, 22592 KB] Dead ends: 61 state(s).
[t=0.390498s, 22592 KB] Number of registered states: 13776
[t=0.390498s, 22592 KB] Int hash set load factor: 13776/16384 = 0.84082
[t=0.390498s, 22592 KB] Int hash set resizes: 14
[t=0.390498s, 22592 KB] Search time: 0.335994s
[t=0.390498s, 22592 KB] Total time: 0.390498s
Solution found.
Peak memory: 22592 KB
search exit code: 0

INFO     Planner time: 0.89s
