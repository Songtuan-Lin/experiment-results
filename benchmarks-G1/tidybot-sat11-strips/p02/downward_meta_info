INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tidybot-sat11-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tidybot-sat11-strips/p02.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p02/output.sas
Parsing...
Parsing: [0.010s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.013s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 400 rules.
Computing model... [0.340s CPU, 0.337s wall-clock]
31226 relevant atoms
32263 auxiliary atoms
63489 final queue length
163321 total queue pushes
Completing instantiation... [1.480s CPU, 1.478s wall-clock]
Instantiating: [1.840s CPU, 1.845s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.040s CPU, 0.039s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
383 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.040s CPU, 0.042s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.070s CPU, 0.064s wall-clock]
Translating task: [1.930s CPU, 1.931s wall-clock]
81643 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [1.040s CPU, 1.042s wall-clock]
Reordering and filtering variables...
385 of 385 variables necessary.
1 of 3 mutex groups necessary.
30657 of 30657 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.380s CPU, 0.380s wall-clock]
Translator variables: 385
Translator derived variables: 0
Translator facts: 773
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 30657
Translator axioms: 0
Translator task size: 367826
Translator peak memory: 226348 KB
Writing output... [0.240s CPU, 0.229s wall-clock]
Done! [5.540s CPU, 5.531s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p02/output.sas
INFO     search time limit: 294.4s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p02/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p02/output.sas
[t=0s, 9880 KB] reading input...
[t=0.115143s, 23704 KB] done reading input!
[t=0.119144s, 24104 KB] Initializing landmark count heuristic...
[t=0.119144s, 24104 KB] Generating landmark graph...
[t=0.123145s, 25284 KB] Building a landmark graph with reasonable orders.
[t=0.123145s, 26332 KB] Initializing Exploration...
[t=0.151146s, 60948 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.543138s, 61652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.543138s, 61652 KB] Landmarks generation time: 0.423992s
[t=0.547137s, 61652 KB] Discovered 28 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.547137s, 61652 KB] 48 edges
[t=0.547137s, 61652 KB] approx. reasonable orders
[t=0.547137s, 61652 KB] approx. obedient reasonable orders
[t=0.547137s, 61652 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.547137s, 61652 KB] Landmarks generation time: 0.427993s
[t=0.547137s, 61652 KB] Discovered 28 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.547137s, 61652 KB] 48 edges
[t=0.547137s, 61652 KB] Landmark graph generation time: 0.427993s
[t=0.547137s, 61652 KB] Landmark graph contains 28 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.547137s, 61652 KB] Landmark graph contains 48 orderings.
[t=0.559133s, 61652 KB] Simplifying 181056 unary operators... done! [180096 unary operators]
[t=1.39113s, 61652 KB] time to simplify: 0.831997s
[t=1.39513s, 61652 KB] Initializing additive heuristic...
[t=1.39513s, 61652 KB] Initializing FF heuristic...
[t=1.39513s, 61652 KB] Building successor generator...done!
[t=1.40713s, 61652 KB] peak memory difference for successor generator creation: 0 KB
[t=1.40713s, 61652 KB] time for successor generation creation: 0.00799919s
[t=1.40713s, 61652 KB] Variables: 385
[t=1.40713s, 61652 KB] FactPairs: 773
[t=1.40713s, 61652 KB] Bytes per state: 52
[t=1.40713s, 61652 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=1.40713s, 61652 KB] 14 initial landmarks, 4 goal landmarks
[t=1.41113s, 61652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=1.41113s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=1.41113s, 61652 KB] g=0, 1 evaluated, 0 expanded
[t=1.41113s, 61652 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=1.41113s, 61652 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 33
[t=1.41113s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=1.41113s, 61652 KB] g=1, 2 evaluated, 1 expanded
[t=1.42713s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=1.42713s, 61652 KB] g=4, 12 evaluated, 11 expanded
[t=1.44313s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=1.44313s, 61652 KB] g=4, 22 evaluated, 21 expanded
[t=1.45113s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=1.45113s, 61652 KB] g=7, 29 evaluated, 28 expanded
[t=1.46713s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=1.46713s, 61652 KB] g=8, 40 evaluated, 39 expanded
[t=1.52713s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=1.52713s, 61652 KB] g=7, 85 evaluated, 84 expanded
[t=1.54313s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=1.54313s, 61652 KB] g=9, 99 evaluated, 98 expanded
[t=1.63113s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=1.63113s, 61652 KB] g=9, 167 evaluated, 166 expanded
[t=1.63513s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=1.63513s, 61652 KB] g=10, 170 evaluated, 169 expanded
[t=1.64313s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=1.64313s, 61652 KB] g=13, 176 evaluated, 175 expanded
[t=1.64713s, 61652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=1.64713s, 61652 KB] g=15, 181 evaluated, 180 expanded
[t=1.70312s, 61652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=1.70312s, 61652 KB] g=25, 235 evaluated, 234 expanded
[t=1.76712s, 61652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=1.76712s, 61652 KB] g=30, 293 evaluated, 292 expanded
[t=1.77112s, 61652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=1.77112s, 61652 KB] g=31, 298 evaluated, 297 expanded
[t=1.77512s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=1.77512s, 61652 KB] g=33, 301 evaluated, 300 expanded
[t=1.78312s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=1.78312s, 61652 KB] g=35, 310 evaluated, 309 expanded
[t=2.11912s, 61652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=2.11912s, 61652 KB] g=34, 630 evaluated, 629 expanded
[t=2.11912s, 61652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=2.11912s, 61652 KB] g=35, 632 evaluated, 631 expanded
[t=2.12312s, 61652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=2.12312s, 61652 KB] g=36, 634 evaluated, 633 expanded
[t=2.12712s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=2.12712s, 61652 KB] g=40, 638 evaluated, 637 expanded
[t=2.12712s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=2.12712s, 61652 KB] g=41, 639 evaluated, 638 expanded
[t=2.13512s, 61652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=2.13512s, 61652 KB] g=43, 644 evaluated, 643 expanded
[t=2.13512s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=2.13512s, 61652 KB] g=44, 645 evaluated, 644 expanded
[t=2.13512s, 61652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=2.13512s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=2.13512s, 61652 KB] g=44, 646 evaluated, 645 expanded
[t=2.13912s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=2.13912s, 61652 KB] g=46, 648 evaluated, 647 expanded
[t=2.14712s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=2.14712s, 61652 KB] g=50, 656 evaluated, 655 expanded
[t=2.15512s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=2.15512s, 61652 KB] g=50, 665 evaluated, 664 expanded
[t=2.15912s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=2.15912s, 61652 KB] g=51, 666 evaluated, 665 expanded
[t=2.17512s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=2.17512s, 61652 KB] g=53, 681 evaluated, 680 expanded
[t=2.18312s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=2.18312s, 61652 KB] g=56, 691 evaluated, 690 expanded
[t=2.18712s, 61652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=2.18712s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=2.18712s, 61652 KB] g=57, 693 evaluated, 692 expanded
[t=2.19112s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=2.19112s, 61652 KB] g=61, 699 evaluated, 698 expanded
[t=2.22312s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=2.22312s, 61652 KB] g=69, 732 evaluated, 731 expanded
[t=2.22312s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=2.22312s, 61652 KB] g=70, 735 evaluated, 734 expanded
[t=2.22712s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=2.22712s, 61652 KB] g=71, 737 evaluated, 736 expanded
[t=2.22712s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=2.22712s, 61652 KB] g=72, 739 evaluated, 738 expanded
[t=2.22712s, 61652 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=2.22712s, 61652 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=2.22712s, 61652 KB] g=73, 740 evaluated, 739 expanded
[t=2.22712s, 61652 KB] Solution found!
[t=2.22712s, 61652 KB] Actual search time: 0.819994s
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-right pr2 x1 x2 y0 (1)
base-down pr2 x2 y0 y1 (1)
base-down pr2 x2 y1 y2 (1)
base-right pr2 x2 x3 y2 (1)
base-right pr2 x3 x4 y2 (1)
base-right pr2 x4 x5 y2 (1)
base-right pr2 x5 x6 y2 (1)
base-right pr2 x6 x7 y2 (1)
base-down pr2 x7 y2 y3 (1)
base-down pr2 x7 y3 y4 (1)
base-left pr2 x7 x6 y4 (1)
park pr2 (1)
get-left pr2 x6 y4 xrel0 x6 yrel0 y4 object3 x5 (1)
gripper-left pr2 x6 y4 xrel0 xrel-1 x6 x5 yrel0 y4 (1)
put-left pr2 x6 y4 xrel-1 x5 yrel0 y4 object3 x4 (1)
get-down pr2 x6 y4 xrel-1 x5 yrel0 y4 object1 y5 (1)
gripper-down pr2 x6 y4 xrel-1 x5 yrel0 yrel1 y4 y5 (1)
put-up pr2 x6 y4 xrel-1 x5 yrel1 y5 object1 y4 (1)
get-left pr2 x6 y4 xrel-1 x5 yrel1 y5 object0 x4 (1)
gripper-right pr2 x6 y4 xrel-1 xrel0 x5 x6 yrel1 y5 (1)
put-left pr2 x6 y4 xrel0 x6 yrel1 y5 object0 x5 (1)
gripper-up pr2 x6 y4 xrel0 x6 yrel1 yrel0 y5 y4 (1)
get-left pr2 x6 y4 xrel0 x6 yrel0 y4 object1 x5 (1)
unpark pr2 xrel0 yrel0 (1)
base-left pr2 x6 x5 y4 (1)
base-left pr2 x5 x4 y4 (1)
park pr2 (1)
put-down pr2 x4 y4 xrel0 x4 yrel0 y4 object1 y5 (1)
finish-object object1 x4 y5 (1)
gripper-right pr2 x4 y4 xrel0 xrel1 x4 x5 yrel0 y4 (1)
get-down pr2 x4 y4 xrel1 x5 yrel0 y4 object0 y5 (1)
put-left pr2 x4 y4 xrel1 x5 yrel0 y4 object0 x4 (1)
gripper-down pr2 x4 y4 xrel1 x5 yrel0 yrel1 y4 y5 (1)
finish-object object0 x4 y4 (1)
gripper-up pr2 x4 y4 xrel1 x5 yrel1 yrel0 y5 y4 (1)
get-left pr2 x4 y4 xrel1 x5 yrel0 y4 object3 x4 (1)
gripper-left pr2 x4 y4 xrel1 xrel0 x5 x4 yrel0 y4 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x4 x5 y4 (1)
park pr2 (1)
put-down pr2 x5 y4 xrel0 x5 yrel0 y4 object3 y5 (1)
finish-object object3 x5 y5 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x5 x6 y4 (1)
base-right pr2 x6 x7 y4 (1)
base-up pr2 x7 y4 y3 (1)
base-up pr2 x7 y3 y2 (1)
base-left pr2 x7 x6 y2 (1)
base-left pr2 x6 x5 y2 (1)
base-left pr2 x5 x4 y2 (1)
base-left pr2 x4 x3 y2 (1)
base-left pr2 x3 x2 y2 (1)
park pr2 (1)
gripper-down pr2 x2 y2 xrel0 x2 yrel0 yrel1 y2 y3 (1)
get-left pr2 x2 y2 xrel0 x2 yrel1 y3 object2 x1 (1)
gripper-up pr2 x2 y2 xrel0 x2 yrel1 yrel0 y3 y2 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x2 x3 y2 (1)
base-right pr2 x3 x4 y2 (1)
park pr2 (1)
gripper-right pr2 x4 y2 xrel0 xrel1 x4 x5 yrel0 y2 (1)
gripper-left pr2 x4 y2 xrel1 xrel0 x5 x4 yrel0 y2 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x4 x5 y2 (1)
base-right pr2 x5 x6 y2 (1)
base-right pr2 x6 x7 y2 (1)
base-down pr2 x7 y2 y3 (1)
base-down pr2 x7 y3 y4 (1)
base-left pr2 x7 x6 y4 (1)
park pr2 (1)
put-left pr2 x6 y4 xrel0 x6 yrel0 y4 object2 x5 (1)
finish-object object2 x5 y4 (1)
[t=2.22712s, 61652 KB] Plan length: 74 step(s).
[t=2.22712s, 61652 KB] Plan cost: 74
[t=2.22712s, 61652 KB] Expanded 740 state(s).
[t=2.22712s, 61652 KB] Reopened 0 state(s).
[t=2.22712s, 61652 KB] Evaluated 741 state(s).
[t=2.22712s, 61652 KB] Evaluations: 1482
[t=2.22712s, 61652 KB] Generated 2491 state(s).
[t=2.22712s, 61652 KB] Dead ends: 0 state(s).
[t=2.22712s, 61652 KB] Number of registered states: 741
[t=2.22712s, 61652 KB] Int hash set load factor: 741/1024 = 0.723633
[t=2.22712s, 61652 KB] Int hash set resizes: 10
[t=2.22712s, 61652 KB] Search time: 0.819994s
[t=2.22712s, 61652 KB] Total time: 2.22712s
Solution found.
Peak memory: 61652 KB
search exit code: 0

INFO     Planner time: 7.8s
