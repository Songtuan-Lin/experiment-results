INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tidybot-sat11-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tidybot-sat11-strips/p14.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p14/output.sas
Parsing...
Parsing: [0.010s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.013s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 400 rules.
Computing model... [0.550s CPU, 0.535s wall-clock]
45496 relevant atoms
39738 auxiliary atoms
85234 final queue length
235974 total queue pushes
Completing instantiation... [2.510s CPU, 2.514s wall-clock]
Instantiating: [3.090s CPU, 3.095s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.050s CPU, 0.053s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
467 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.060s CPU, 0.056s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.090s CPU, 0.094s wall-clock]
Translating task: [2.830s CPU, 2.829s wall-clock]
124757 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [1.420s CPU, 1.419s wall-clock]
Reordering and filtering variables...
469 of 469 variables necessary.
1 of 3 mutex groups necessary.
44826 of 44826 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.610s CPU, 0.614s wall-clock]
Translator variables: 469
Translator derived variables: 0
Translator facts: 941
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 44826
Translator axioms: 0
Translator task size: 547428
Translator peak memory: 322876 KB
Writing output... [0.350s CPU, 0.348s wall-clock]
Done! [8.470s CPU, 8.473s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p14/output.sas
INFO     search time limit: 291.43s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p14/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p14/output.sas
[t=0s, 9880 KB] reading input...
[t=0.176s, 30320 KB] done reading input!
[t=0.183973s, 30716 KB] Initializing landmark count heuristic...
[t=0.183973s, 30716 KB] Generating landmark graph...
[t=0.187974s, 32568 KB] Building a landmark graph with reasonable orders.
[t=0.191972s, 34284 KB] Initializing Exploration...
[t=0.243973s, 91820 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.963923s, 92224 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.96792s, 92224 KB] Landmarks generation time: 0.783944s
[t=0.971918s, 92224 KB] Discovered 21 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.971918s, 92224 KB] 30 edges
[t=0.971918s, 92224 KB] approx. reasonable orders
[t=0.971918s, 92224 KB] approx. obedient reasonable orders
[t=0.971918s, 92224 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.971918s, 92224 KB] Landmarks generation time: 0.787945s
[t=0.971918s, 92224 KB] Discovered 21 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.971918s, 92224 KB] 30 edges
[t=0.971918s, 92224 KB] Landmark graph generation time: 0.787945s
[t=0.971918s, 92224 KB] Landmark graph contains 21 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.971918s, 92224 KB] Landmark graph contains 30 orderings.
[t=0.987919s, 92224 KB] Simplifying 274983 unary operators... done! [273831 unary operators]
[t=3.24779s, 92224 KB] time to simplify: 2.25987s
[t=3.25579s, 92224 KB] Initializing additive heuristic...
[t=3.25579s, 92224 KB] Initializing FF heuristic...
[t=3.25579s, 92224 KB] Building successor generator...done!
[t=3.27579s, 92224 KB] peak memory difference for successor generator creation: 0 KB
[t=3.27579s, 92224 KB] time for successor generation creation: 0.0199989s
[t=3.27579s, 92224 KB] Variables: 469
[t=3.27579s, 92224 KB] FactPairs: 941
[t=3.27579s, 92224 KB] Bytes per state: 60
[t=3.27579s, 92224 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=3.27579s, 92224 KB] 11 initial landmarks, 4 goal landmarks
[t=3.28379s, 92224 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=3.28379s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=3.28379s, 92224 KB] g=0, 1 evaluated, 0 expanded
[t=3.28379s, 92224 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=3.28379s, 92224 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 32
[t=3.29179s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=3.29179s, 92224 KB] g=1, 3 evaluated, 2 expanded
[t=3.30379s, 92224 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=3.30379s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=3.30379s, 92224 KB] g=2, 5 evaluated, 4 expanded
[t=3.37179s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=3.37579s, 92224 KB] g=5, 21 evaluated, 20 expanded
[t=3.40379s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=3.40379s, 92224 KB] g=7, 28 evaluated, 27 expanded
[t=3.43579s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=3.43579s, 92224 KB] g=8, 35 evaluated, 34 expanded
[t=3.58778s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=3.58778s, 92224 KB] g=10, 71 evaluated, 70 expanded
[t=3.59978s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=3.59978s, 92224 KB] g=11, 74 evaluated, 73 expanded
[t=3.82374s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=3.82374s, 92224 KB] g=13, 128 evaluated, 127 expanded
[t=3.97974s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=3.97974s, 92224 KB] g=18, 170 evaluated, 169 expanded
[t=3.98373s, 92224 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=3.98373s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=3.98373s, 92224 KB] g=19, 171 evaluated, 170 expanded
[t=3.99574s, 92224 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=3.99574s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=3.99574s, 92224 KB] g=20, 174 evaluated, 173 expanded
[t=4.3277s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=4.3277s, 92224 KB] g=32, 264 evaluated, 263 expanded
[t=4.91162s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=4.91162s, 92224 KB] g=40, 424 evaluated, 423 expanded
[t=4.91962s, 92224 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=4.91962s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=4.91962s, 92224 KB] g=41, 426 evaluated, 425 expanded
[t=4.92361s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=4.92361s, 92224 KB] g=42, 427 evaluated, 426 expanded
[t=4.93161s, 92224 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=4.93161s, 92224 KB] g=42, 429 evaluated, 428 expanded
[t=4.93561s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=4.93561s, 92224 KB] g=43, 430 evaluated, 429 expanded
[t=4.97962s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=4.97962s, 92224 KB] g=47, 440 evaluated, 439 expanded
[t=5.09561s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=5.09561s, 92224 KB] g=53, 471 evaluated, 470 expanded
[t=5.11162s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=5.11162s, 92224 KB] g=54, 475 evaluated, 474 expanded
[t=5.12361s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=5.12361s, 92224 KB] g=55, 478 evaluated, 477 expanded
[t=5.13562s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=5.13562s, 92224 KB] g=56, 481 evaluated, 480 expanded
[t=5.14762s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=5.14762s, 92224 KB] g=57, 485 evaluated, 484 expanded
[t=5.15962s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=5.15962s, 92224 KB] g=58, 488 evaluated, 487 expanded
[t=5.16361s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=5.16361s, 92224 KB] g=59, 490 evaluated, 489 expanded
[t=5.17162s, 92224 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=5.17162s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=5.17162s, 92224 KB] g=60, 492 evaluated, 491 expanded
[t=5.17561s, 92224 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=5.17561s, 92224 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=5.17561s, 92224 KB] g=61, 493 evaluated, 492 expanded
[t=5.17561s, 92224 KB] Solution found!
[t=5.17561s, 92224 KB] Actual search time: 1.89983s
gripper-right pr2 x0 y0 xrel0 xrel1 x0 x1 yrel0 y0 (1)
finish-object object0 x2 y2 (1)
gripper-left pr2 x0 y0 xrel1 xrel0 x1 x0 yrel0 y0 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-right pr2 x1 x2 y0 (1)
base-right pr2 x2 x3 y0 (1)
base-right pr2 x3 x4 y0 (1)
base-right pr2 x4 x5 y0 (1)
base-down pr2 x5 y0 y1 (1)
base-down pr2 x5 y1 y2 (1)
base-right pr2 x5 x6 y2 (1)
base-down pr2 x6 y2 y3 (1)
park pr2 (1)
gripper-up pr2 x6 y3 xrel0 x6 yrel0 yrel-1 y3 y2 (1)
get-up pr2 x6 y3 xrel0 x6 yrel-1 y2 object3 y1 (1)
gripper-right pr2 x6 y3 xrel0 xrel1 x6 x7 yrel-1 y2 (1)
gripper-down pr2 x6 y3 xrel1 x7 yrel-1 yrel0 y2 y3 (1)
put-down pr2 x6 y3 xrel1 x7 yrel0 y3 object3 y4 (1)
finish-object object3 x7 y4 (1)
gripper-left pr2 x6 y3 xrel1 xrel0 x7 x6 yrel0 y3 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x6 y3 y4 (1)
base-left pr2 x6 x5 y4 (1)
park pr2 (1)
gripper-down pr2 x5 y4 xrel0 x5 yrel0 yrel1 y4 y5 (1)
gripper-up pr2 x5 y4 xrel0 x5 yrel1 yrel0 y5 y4 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x5 y4 y5 (1)
park pr2 (1)
gripper-down pr2 x5 y5 xrel0 x5 yrel0 yrel1 y5 y6 (1)
get-down pr2 x5 y5 xrel0 x5 yrel1 y6 object1 y7 (1)
gripper-up pr2 x5 y5 xrel0 x5 yrel1 yrel0 y6 y5 (1)
unpark pr2 xrel0 yrel0 (1)
base-up pr2 x5 y5 y4 (1)
base-up pr2 x5 y4 y3 (1)
base-up pr2 x5 y3 y2 (1)
park pr2 (1)
gripper-up pr2 x5 y2 xrel0 x5 yrel0 yrel-1 y2 y1 (1)
gripper-right pr2 x5 y2 xrel0 xrel1 x5 x6 yrel-1 y1 (1)
put-right pr2 x5 y2 xrel1 x6 yrel-1 y1 object1 x7 (1)
gripper-left pr2 x5 y2 xrel1 xrel0 x6 x5 yrel-1 y1 (1)
finish-object object1 x7 y1 (1)
gripper-down pr2 x5 y2 xrel0 x5 yrel-1 yrel0 y1 y2 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x5 y2 y3 (1)
base-down pr2 x5 y3 y4 (1)
base-down pr2 x5 y4 y5 (1)
base-left pr2 x5 x4 y5 (1)
base-left pr2 x4 x3 y5 (1)
base-left pr2 x3 x2 y5 (1)
base-left pr2 x2 x1 y5 (1)
base-left pr2 x1 x0 y5 (1)
base-up pr2 x0 y5 y4 (1)
base-up pr2 x0 y4 y3 (1)
base-right pr2 x0 x1 y3 (1)
base-up pr2 x1 y3 y2 (1)
base-right pr2 x1 x2 y2 (1)
park pr2 (1)
get-down pr2 x2 y2 xrel0 x2 yrel0 y2 object2 y3 (1)
put-right pr2 x2 y2 xrel0 x2 yrel0 y2 object2 x3 (1)
finish-object object2 x3 y2 (1)
[t=5.17561s, 92224 KB] Plan length: 62 step(s).
[t=5.17561s, 92224 KB] Plan cost: 62
[t=5.17561s, 92224 KB] Expanded 493 state(s).
[t=5.17561s, 92224 KB] Reopened 0 state(s).
[t=5.17561s, 92224 KB] Evaluated 494 state(s).
[t=5.17561s, 92224 KB] Evaluations: 988
[t=5.17561s, 92224 KB] Generated 1526 state(s).
[t=5.17561s, 92224 KB] Dead ends: 0 state(s).
[t=5.17561s, 92224 KB] Number of registered states: 494
[t=5.17561s, 92224 KB] Int hash set load factor: 494/512 = 0.964844
[t=5.17561s, 92224 KB] Int hash set resizes: 9
[t=5.17561s, 92224 KB] Search time: 1.89983s
[t=5.17561s, 92224 KB] Total time: 5.17561s
Solution found.
Peak memory: 92224 KB
search exit code: 0

INFO     Planner time: 1.4e+01s
