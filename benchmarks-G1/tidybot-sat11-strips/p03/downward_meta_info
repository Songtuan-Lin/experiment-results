INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tidybot-sat11-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tidybot-sat11-strips/p03.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p03/output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.020s CPU, 0.013s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 400 rules.
Computing model... [0.340s CPU, 0.333s wall-clock]
30397 relevant atoms
31998 auxiliary atoms
62395 final queue length
160558 total queue pushes
Completing instantiation... [1.280s CPU, 1.282s wall-clock]
Instantiating: [1.660s CPU, 1.651s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.030s CPU, 0.038s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
371 uncovered facts
Choosing groups: [0.010s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.040s CPU, 0.041s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.060s CPU, 0.063s wall-clock]
Translating task: [1.660s CPU, 1.670s wall-clock]
80827 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [0.970s CPU, 0.965s wall-clock]
Reordering and filtering variables...
373 of 373 variables necessary.
1 of 3 mutex groups necessary.
29842 of 29842 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.370s CPU, 0.367s wall-clock]
Translator variables: 373
Translator derived variables: 0
Translator facts: 749
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 29842
Translator axioms: 0
Translator task size: 360042
Translator peak memory: 222216 KB
Writing output... [0.230s CPU, 0.225s wall-clock]
Done! [4.980s CPU, 4.979s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p03/output.sas
INFO     search time limit: 294.96s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p03/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p03/output.sas
[t=0s, 9880 KB] reading input...
[t=0.12219s, 23364 KB] done reading input!
[t=0.126191s, 23760 KB] Initializing landmark count heuristic...
[t=0.126191s, 23760 KB] Generating landmark graph...
[t=0.126191s, 24952 KB] Building a landmark graph with reasonable orders.
[t=0.130191s, 26008 KB] Initializing Exploration...
[t=0.154192s, 60364 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.634195s, 60908 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.638193s, 60908 KB] Landmarks generation time: 0.516001s
[t=0.642192s, 60908 KB] Discovered 26 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.642192s, 60908 KB] 48 edges
[t=0.642192s, 60908 KB] approx. reasonable orders
[t=0.642192s, 60908 KB] approx. obedient reasonable orders
[t=0.642192s, 60908 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.642192s, 60908 KB] Landmarks generation time: 0.516001s
[t=0.642192s, 60908 KB] Discovered 26 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.642192s, 60908 KB] 48 edges
[t=0.642192s, 60908 KB] Landmark graph generation time: 0.516001s
[t=0.642192s, 60908 KB] Landmark graph contains 26 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.642192s, 60908 KB] Landmark graph contains 48 orderings.
[t=0.65419s, 60908 KB] Simplifying 178609 unary operators... done! [177937 unary operators]
[t=1.46219s, 60908 KB] time to simplify: 0.808s
[t=1.46619s, 60908 KB] Initializing additive heuristic...
[t=1.46619s, 60908 KB] Initializing FF heuristic...
[t=1.46619s, 60908 KB] Building successor generator...done!
[t=1.47819s, 60908 KB] peak memory difference for successor generator creation: 0 KB
[t=1.47819s, 60908 KB] time for successor generation creation: 0.0120005s
[t=1.47819s, 60908 KB] Variables: 373
[t=1.47819s, 60908 KB] FactPairs: 749
[t=1.47819s, 60908 KB] Bytes per state: 48
[t=1.47819s, 60908 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=1.47819s, 60908 KB] 12 initial landmarks, 4 goal landmarks
[t=1.48219s, 60908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=1.48219s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=1.48219s, 60908 KB] g=0, 1 evaluated, 0 expanded
[t=1.48219s, 60908 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=1.48219s, 60908 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 21
[t=1.49019s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=1.49019s, 60908 KB] g=3, 9 evaluated, 8 expanded
[t=1.49819s, 60908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=1.49819s, 60908 KB] g=6, 14 evaluated, 13 expanded
[t=1.51419s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=1.51419s, 60908 KB] g=11, 28 evaluated, 27 expanded
[t=1.54619s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=1.54619s, 60908 KB] g=12, 57 evaluated, 56 expanded
[t=1.61019s, 60908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=1.61019s, 60908 KB] g=19, 117 evaluated, 116 expanded
[t=1.61819s, 60908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=1.61819s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=1.61819s, 60908 KB] g=22, 128 evaluated, 127 expanded
[t=1.62219s, 60908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=1.62219s, 60908 KB] g=23, 129 evaluated, 128 expanded
[t=1.62219s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=1.62219s, 60908 KB] g=23, 132 evaluated, 131 expanded
[t=1.62219s, 60908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=1.62219s, 60908 KB] g=24, 133 evaluated, 132 expanded
[t=1.63019s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=1.63019s, 60908 KB] g=25, 138 evaluated, 137 expanded
[t=1.64219s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=1.64219s, 60908 KB] g=27, 151 evaluated, 150 expanded
[t=1.64619s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=1.64619s, 60908 KB] g=28, 155 evaluated, 154 expanded
[t=1.65019s, 60908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=1.65019s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=1.65019s, 60908 KB] g=29, 159 evaluated, 158 expanded
[t=1.65019s, 60908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=1.65019s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=1.65019s, 60908 KB] g=30, 162 evaluated, 161 expanded
[t=1.65819s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=1.65819s, 60908 KB] g=33, 168 evaluated, 167 expanded
[t=1.65819s, 60908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=1.65819s, 60908 KB] g=35, 171 evaluated, 170 expanded
[t=1.65819s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=1.65819s, 60908 KB] g=36, 172 evaluated, 171 expanded
[t=1.66219s, 60908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=1.66219s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=1.66219s, 60908 KB] g=37, 175 evaluated, 174 expanded
[t=1.66619s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=1.66619s, 60908 KB] g=40, 180 evaluated, 179 expanded
[t=1.67019s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=1.67019s, 60908 KB] g=41, 183 evaluated, 182 expanded
[t=1.67019s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=1.67019s, 60908 KB] g=42, 184 evaluated, 183 expanded
[t=1.67419s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=1.67419s, 60908 KB] g=44, 188 evaluated, 187 expanded
[t=1.67419s, 60908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=1.67419s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=1.67419s, 60908 KB] g=45, 190 evaluated, 189 expanded
[t=1.67819s, 60908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=1.67819s, 60908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=1.67819s, 60908 KB] g=46, 191 evaluated, 190 expanded
[t=1.67819s, 60908 KB] Solution found!
[t=1.67819s, 60908 KB] Actual search time: 0.2s
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
park pr2 (1)
gripper-right pr2 x1 y0 xrel0 xrel1 x1 x2 yrel0 y0 (1)
gripper-down pr2 x1 y0 xrel1 x2 yrel0 yrel1 y0 y1 (1)
get-right pr2 x1 y0 xrel1 x2 yrel1 y1 object0 x3 (1)
gripper-up pr2 x1 y0 xrel1 x2 yrel1 yrel0 y1 y0 (1)
gripper-left pr2 x1 y0 xrel1 xrel0 x2 x1 yrel0 y0 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x1 x2 y0 (1)
base-down pr2 x2 y0 y1 (1)
park pr2 (1)
put-left pr2 x2 y1 xrel0 x2 yrel0 y1 object0 x1 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x2 y1 y2 (1)
base-right pr2 x2 x3 y2 (1)
park pr2 (1)
gripper-down pr2 x3 y2 xrel0 x3 yrel0 yrel1 y2 y3 (1)
get-down pr2 x3 y2 xrel0 x3 yrel1 y3 object1 y4 (1)
gripper-up pr2 x3 y2 xrel0 x3 yrel1 yrel0 y3 y2 (1)
gripper-up pr2 x3 y2 xrel0 x3 yrel0 yrel-1 y2 y1 (1)
put-right pr2 x3 y2 xrel0 x3 yrel-1 y1 object1 x4 (1)
gripper-left pr2 x3 y2 xrel0 xrel-1 x3 x2 yrel-1 y1 (1)
finish-object object1 x4 y1 (1)
get-left pr2 x3 y2 xrel-1 x2 yrel-1 y1 object0 x1 (1)
gripper-right pr2 x3 y2 xrel-1 xrel0 x2 x3 yrel-1 y1 (1)
gripper-down pr2 x3 y2 xrel0 x3 yrel-1 yrel0 y1 y2 (1)
gripper-down pr2 x3 y2 xrel0 x3 yrel0 yrel1 y2 y3 (1)
put-down pr2 x3 y2 xrel0 x3 yrel1 y3 object0 y4 (1)
finish-object object0 x3 y4 (1)
gripper-right pr2 x3 y2 xrel0 xrel1 x3 x4 yrel1 y3 (1)
get-down pr2 x3 y2 xrel1 x4 yrel1 y3 object3 y4 (1)
gripper-up pr2 x3 y2 xrel1 x4 yrel1 yrel0 y3 y2 (1)
gripper-left pr2 x3 y2 xrel1 xrel0 x4 x3 yrel0 y2 (1)
put-up pr2 x3 y2 xrel0 x3 yrel0 y2 object3 y1 (1)
gripper-right pr2 x3 y2 xrel0 xrel1 x3 x4 yrel0 y2 (1)
finish-object object3 x3 y1 (1)
gripper-left pr2 x3 y2 xrel1 xrel0 x4 x3 yrel0 y2 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x3 x4 y2 (1)
base-down pr2 x4 y2 y3 (1)
park pr2 (1)
gripper-down pr2 x4 y3 xrel0 x4 yrel0 yrel1 y3 y4 (1)
get-down pr2 x4 y3 xrel0 x4 yrel1 y4 object2 y5 (1)
gripper-up pr2 x4 y3 xrel0 x4 yrel1 yrel0 y4 y3 (1)
put-down pr2 x4 y3 xrel0 x4 yrel0 y3 object2 y4 (1)
finish-object object2 x4 y4 (1)
[t=1.67819s, 60908 KB] Plan length: 47 step(s).
[t=1.67819s, 60908 KB] Plan cost: 47
[t=1.67819s, 60908 KB] Expanded 191 state(s).
[t=1.67819s, 60908 KB] Reopened 0 state(s).
[t=1.67819s, 60908 KB] Evaluated 192 state(s).
[t=1.67819s, 60908 KB] Evaluations: 384
[t=1.67819s, 60908 KB] Generated 648 state(s).
[t=1.67819s, 60908 KB] Dead ends: 0 state(s).
[t=1.67819s, 60908 KB] Number of registered states: 192
[t=1.67819s, 60908 KB] Int hash set load factor: 192/256 = 0.75
[t=1.67819s, 60908 KB] Int hash set resizes: 8
[t=1.67819s, 60908 KB] Search time: 0.2s
[t=1.67819s, 60908 KB] Total time: 1.67819s
Solution found.
Peak memory: 60908 KB
search exit code: 0

INFO     Planner time: 6.7s
