INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tidybot-sat11-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tidybot-sat11-strips/p10.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p10/output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.013s wall-clock]
Preparing model... [0.010s CPU, 0.004s wall-clock]
Generated 400 rules.
Computing model... [0.550s CPU, 0.552s wall-clock]
45717 relevant atoms
39821 auxiliary atoms
85538 final queue length
236723 total queue pushes
Completing instantiation... [2.610s CPU, 2.620s wall-clock]
Instantiating: [3.220s CPU, 3.218s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.060s CPU, 0.053s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
471 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.060s CPU, 0.057s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.090s CPU, 0.093s wall-clock]
Translating task: [3.000s CPU, 2.999s wall-clock]
124973 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [1.440s CPU, 1.442s wall-clock]
Reordering and filtering variables...
473 of 473 variables necessary.
1 of 3 mutex groups necessary.
45042 of 45042 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.610s CPU, 0.609s wall-clock]
Translator variables: 473
Translator derived variables: 0
Translator facts: 949
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 45042
Translator axioms: 0
Translator task size: 549492
Translator peak memory: 323616 KB
Writing output... [0.340s CPU, 0.346s wall-clock]
Done! [8.770s CPU, 8.781s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p10/output.sas
INFO     search time limit: 291.13s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p10/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p10/output.sas
[t=0s, 9880 KB] reading input...
[t=0.179697s, 30472 KB] done reading input!
[t=0.1837s, 30868 KB] Initializing landmark count heuristic...
[t=0.1837s, 30868 KB] Generating landmark graph...
[t=0.187699s, 32584 KB] Building a landmark graph with reasonable orders.
[t=0.191698s, 34300 KB] Initializing Exploration...
[t=0.239699s, 91988 KB] Generating landmarks using the RPG/SAS+ approach
[t=1.09566s, 92520 KB] Removed 0 reasonable or obedient reasonable orders
[t=1.09966s, 92520 KB] Landmarks generation time: 0.915964s
[t=1.10366s, 92520 KB] Discovered 24 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=1.10366s, 92520 KB] 38 edges
[t=1.10366s, 92520 KB] approx. reasonable orders
[t=1.10366s, 92520 KB] approx. obedient reasonable orders
[t=1.10366s, 92520 KB] Removed 0 reasonable or obedient reasonable orders
[t=1.10366s, 92520 KB] Landmarks generation time: 0.919963s
[t=1.10366s, 92520 KB] Discovered 24 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=1.10366s, 92520 KB] 38 edges
[t=1.10366s, 92520 KB] Landmark graph generation time: 0.919963s
[t=1.10366s, 92520 KB] Landmark graph contains 24 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=1.10366s, 92520 KB] Landmark graph contains 38 orderings.
[t=1.11966s, 92520 KB] Simplifying 275631 unary operators... done! [274383 unary operators]
[t=3.42757s, 92520 KB] time to simplify: 2.30791s
[t=3.43557s, 92520 KB] Initializing additive heuristic...
[t=3.43557s, 92520 KB] Initializing FF heuristic...
[t=3.43557s, 92520 KB] Building successor generator...done!
[t=3.45557s, 92520 KB] peak memory difference for successor generator creation: 0 KB
[t=3.45557s, 92520 KB] time for successor generation creation: 0.0199995s
[t=3.45557s, 92520 KB] Variables: 473
[t=3.45557s, 92520 KB] FactPairs: 949
[t=3.45557s, 92520 KB] Bytes per state: 60
[t=3.45557s, 92520 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=3.45557s, 92520 KB] 12 initial landmarks, 4 goal landmarks
[t=3.46357s, 92520 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=3.46357s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=3.46357s, 92520 KB] g=0, 1 evaluated, 0 expanded
[t=3.46357s, 92520 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=3.46357s, 92520 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 31
[t=3.49957s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=3.49957s, 92520 KB] g=4, 12 evaluated, 11 expanded
[t=3.55958s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=3.55958s, 92520 KB] g=5, 28 evaluated, 27 expanded
[t=3.71156s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=3.71156s, 92520 KB] g=7, 80 evaluated, 79 expanded
[t=4.21951s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=4.22351s, 92520 KB] g=11, 174 evaluated, 173 expanded
[t=4.23951s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=4.23951s, 92520 KB] g=12, 177 evaluated, 176 expanded
[t=4.55551s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=4.55551s, 92520 KB] g=20, 248 evaluated, 247 expanded
[t=4.58347s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=4.58347s, 92520 KB] g=23, 259 evaluated, 258 expanded
[t=4.58747s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=4.58747s, 92520 KB] g=24, 260 evaluated, 259 expanded
[t=4.63147s, 92520 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=4.63147s, 92520 KB] g=13, 280 evaluated, 279 expanded
[t=4.63947s, 92520 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=4.63947s, 92520 KB] g=14, 283 evaluated, 282 expanded
[t=4.68747s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=4.68747s, 92520 KB] g=33, 301 evaluated, 300 expanded
[t=4.69147s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=4.69147s, 92520 KB] g=35, 304 evaluated, 303 expanded
[t=4.70347s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=4.70347s, 92520 KB] g=36, 308 evaluated, 307 expanded
[t=4.95139s, 92520 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=4.95139s, 92520 KB] g=50, 411 evaluated, 410 expanded
[t=4.95139s, 92520 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=4.95139s, 92520 KB] g=51, 412 evaluated, 411 expanded
[t=4.95538s, 92520 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=4.95538s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=4.95538s, 92520 KB] g=52, 413 evaluated, 412 expanded
[t=5.04338s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=5.04338s, 92520 KB] g=62, 448 evaluated, 447 expanded
[t=5.06338s, 92520 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=5.06338s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=5.06338s, 92520 KB] g=66, 458 evaluated, 457 expanded
[t=5.07138s, 92520 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=5.07138s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=5.07138s, 92520 KB] g=67, 460 evaluated, 459 expanded
[t=5.07538s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=5.07538s, 92520 KB] g=69, 462 evaluated, 461 expanded
[t=5.07938s, 92520 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=5.07938s, 92520 KB] g=71, 464 evaluated, 463 expanded
[t=5.09137s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=5.09137s, 92520 KB] g=72, 468 evaluated, 467 expanded
[t=5.12337s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=5.12337s, 92520 KB] g=78, 482 evaluated, 481 expanded
[t=5.13137s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=5.13137s, 92520 KB] g=81, 486 evaluated, 485 expanded
[t=5.13937s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=5.13937s, 92520 KB] g=82, 488 evaluated, 487 expanded
[t=5.14337s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=5.14337s, 92520 KB] g=83, 491 evaluated, 490 expanded
[t=5.15137s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=5.15137s, 92520 KB] g=85, 495 evaluated, 494 expanded
[t=5.15537s, 92520 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=5.15537s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=5.15537s, 92520 KB] g=86, 496 evaluated, 495 expanded
[t=5.15537s, 92520 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=5.15537s, 92520 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=5.15537s, 92520 KB] g=87, 497 evaluated, 496 expanded
[t=5.15537s, 92520 KB] Solution found!
[t=5.15537s, 92520 KB] Actual search time: 1.69979s
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-right pr2 x1 x2 y0 (1)
base-down pr2 x2 y0 y1 (1)
base-down pr2 x2 y1 y2 (1)
base-right pr2 x2 x3 y2 (1)
base-down pr2 x3 y2 y3 (1)
base-right pr2 x3 x4 y3 (1)
base-right pr2 x4 x5 y3 (1)
base-right pr2 x5 x6 y3 (1)
park pr2 (1)
gripper-left pr2 x6 y3 xrel0 xrel-1 x6 x5 yrel0 y3 (1)
gripper-up pr2 x6 y3 xrel-1 x5 yrel0 yrel-1 y3 y2 (1)
get-up pr2 x6 y3 xrel-1 x5 yrel-1 y2 object3 y1 (1)
gripper-down pr2 x6 y3 xrel-1 x5 yrel-1 yrel0 y2 y3 (1)
gripper-right pr2 x6 y3 xrel-1 xrel0 x5 x6 yrel0 y3 (1)
gripper-down pr2 x6 y3 xrel0 x6 yrel0 yrel1 y3 y4 (1)
put-right pr2 x6 y3 xrel0 x6 yrel1 y4 object3 x7 (1)
gripper-up pr2 x6 y3 xrel0 x6 yrel1 yrel0 y4 y3 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x6 y3 y4 (1)
base-down pr2 x6 y4 y5 (1)
park pr2 (1)
gripper-right pr2 x6 y5 xrel0 xrel1 x6 x7 yrel0 y5 (1)
get-down pr2 x6 y5 xrel1 x7 yrel0 y5 object1 y6 (1)
gripper-left pr2 x6 y5 xrel1 xrel0 x7 x6 yrel0 y5 (1)
gripper-left pr2 x6 y5 xrel0 xrel-1 x6 x5 yrel0 y5 (1)
put-left pr2 x6 y5 xrel-1 x5 yrel0 y5 object1 x4 (1)
gripper-right pr2 x6 y5 xrel-1 xrel0 x5 x6 yrel0 y5 (1)
gripper-up pr2 x6 y5 xrel0 x6 yrel0 yrel-1 y5 y4 (1)
get-right pr2 x6 y5 xrel0 x6 yrel-1 y4 object3 x7 (1)
gripper-down pr2 x6 y5 xrel0 x6 yrel-1 yrel0 y4 y5 (1)
gripper-left pr2 x6 y5 xrel0 xrel-1 x6 x5 yrel0 y5 (1)
gripper-down pr2 x6 y5 xrel-1 x5 yrel0 yrel1 y5 y6 (1)
put-left pr2 x6 y5 xrel-1 x5 yrel1 y6 object3 x4 (1)
finish-object object3 x4 y6 (1)
gripper-up pr2 x6 y5 xrel-1 x5 yrel1 yrel0 y6 y5 (1)
get-left pr2 x6 y5 xrel-1 x5 yrel0 y5 object1 x4 (1)
gripper-right pr2 x6 y5 xrel-1 xrel0 x5 x6 yrel0 y5 (1)
gripper-up pr2 x6 y5 xrel0 x6 yrel0 yrel-1 y5 y4 (1)
put-right pr2 x6 y5 xrel0 x6 yrel-1 y4 object1 x7 (1)
gripper-down pr2 x6 y5 xrel0 x6 yrel-1 yrel0 y4 y5 (1)
unpark pr2 xrel0 yrel0 (1)
base-left pr2 x6 x5 y5 (1)
base-left pr2 x5 x4 y5 (1)
park pr2 (1)
gripper-left pr2 x4 y5 xrel0 xrel-1 x4 x3 yrel0 y5 (1)
get-down pr2 x4 y5 xrel-1 x3 yrel0 y5 object0 y6 (1)
gripper-right pr2 x4 y5 xrel-1 xrel0 x3 x4 yrel0 y5 (1)
put-left pr2 x4 y5 xrel0 x4 yrel0 y5 object0 x3 (1)
gripper-right pr2 x4 y5 xrel0 xrel1 x4 x5 yrel0 y5 (1)
finish-object object0 x3 y5 (1)
gripper-left pr2 x4 y5 xrel1 xrel0 x5 x4 yrel0 y5 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x4 x5 y5 (1)
base-right pr2 x5 x6 y5 (1)
park pr2 (1)
gripper-up pr2 x6 y5 xrel0 x6 yrel0 yrel-1 y5 y4 (1)
get-right pr2 x6 y5 xrel0 x6 yrel-1 y4 object1 x7 (1)
gripper-down pr2 x6 y5 xrel0 x6 yrel-1 yrel0 y4 y5 (1)
unpark pr2 xrel0 yrel0 (1)
base-left pr2 x6 x5 y5 (1)
base-left pr2 x5 x4 y5 (1)
base-left pr2 x4 x3 y5 (1)
park pr2 (1)
put-down pr2 x3 y5 xrel0 x3 yrel0 y5 object1 y6 (1)
finish-object object1 x3 y6 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x3 x4 y5 (1)
base-right pr2 x4 x5 y5 (1)
base-right pr2 x5 x6 y5 (1)
base-up pr2 x6 y5 y4 (1)
base-up pr2 x6 y4 y3 (1)
park pr2 (1)
gripper-left pr2 x6 y3 xrel0 xrel-1 x6 x5 yrel0 y3 (1)
gripper-up pr2 x6 y3 xrel-1 x5 yrel0 yrel-1 y3 y2 (1)
get-left pr2 x6 y3 xrel-1 x5 yrel-1 y2 object2 x4 (1)
gripper-down pr2 x6 y3 xrel-1 x5 yrel-1 yrel0 y2 y3 (1)
gripper-right pr2 x6 y3 xrel-1 xrel0 x5 x6 yrel0 y3 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x6 y3 y4 (1)
base-down pr2 x6 y4 y5 (1)
base-left pr2 x6 x5 y5 (1)
base-left pr2 x5 x4 y5 (1)
park pr2 (1)
gripper-right pr2 x4 y5 xrel0 xrel1 x4 x5 yrel0 y5 (1)
put-left pr2 x4 y5 xrel1 x5 yrel0 y5 object2 x4 (1)
finish-object object2 x4 y5 (1)
[t=5.15537s, 92520 KB] Plan length: 88 step(s).
[t=5.15537s, 92520 KB] Plan cost: 88
[t=5.15537s, 92520 KB] Expanded 497 state(s).
[t=5.15537s, 92520 KB] Reopened 0 state(s).
[t=5.15537s, 92520 KB] Evaluated 498 state(s).
[t=5.15537s, 92520 KB] Evaluations: 996
[t=5.15537s, 92520 KB] Generated 1675 state(s).
[t=5.15537s, 92520 KB] Dead ends: 0 state(s).
[t=5.15537s, 92520 KB] Number of registered states: 498
[t=5.15537s, 92520 KB] Int hash set load factor: 498/512 = 0.972656
[t=5.15537s, 92520 KB] Int hash set resizes: 9
[t=5.15537s, 92520 KB] Search time: 1.69979s
[t=5.15537s, 92520 KB] Total time: 5.15537s
Solution found.
Peak memory: 92520 KB
search exit code: 0

INFO     Planner time: 1.4e+01s
