INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tidybot-sat11-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tidybot-sat11-strips/p11.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p11/output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.014s wall-clock]
Preparing model... [0.010s CPU, 0.004s wall-clock]
Generated 400 rules.
Computing model... [0.600s CPU, 0.602s wall-clock]
44031 relevant atoms
39275 auxiliary atoms
83306 final queue length
231101 total queue pushes
Completing instantiation... [2.890s CPU, 2.885s wall-clock]
Instantiating: [3.550s CPU, 3.543s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.060s CPU, 0.057s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
447 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.060s CPU, 0.060s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.110s CPU, 0.112s wall-clock]
Translating task: [3.110s CPU, 3.117s wall-clock]
123317 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [2.590s CPU, 2.592s wall-clock]
Reordering and filtering variables...
449 of 449 variables necessary.
1 of 3 mutex groups necessary.
43386 of 43386 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.640s CPU, 0.639s wall-clock]
Translator variables: 449
Translator derived variables: 0
Translator facts: 901
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 43386
Translator axioms: 0
Translator task size: 533688
Translator peak memory: 315256 KB
Writing output... [0.350s CPU, 0.352s wall-clock]
Done! [10.450s CPU, 10.449s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p11/output.sas
INFO     search time limit: 289.44s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p11/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-sat11-strips/p11/output.sas
[t=0s, 9880 KB] reading input...
[t=0.178416s, 29912 KB] done reading input!
[t=0.186415s, 30176 KB] Initializing landmark count heuristic...
[t=0.186415s, 30176 KB] Generating landmark graph...
[t=0.190416s, 32028 KB] Building a landmark graph with reasonable orders.
[t=0.198416s, 33744 KB] Initializing Exploration...
[t=0.258416s, 90820 KB] Generating landmarks using the RPG/SAS+ approach
[t=1.39841s, 91352 KB] Removed 0 reasonable or obedient reasonable orders
[t=1.40641s, 91352 KB] Landmarks generation time: 1.22399s
[t=1.41441s, 91352 KB] Discovered 22 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=1.41441s, 91352 KB] 36 edges
[t=1.41441s, 91352 KB] approx. reasonable orders
[t=1.41441s, 91352 KB] approx. obedient reasonable orders
[t=1.41441s, 91352 KB] Removed 0 reasonable or obedient reasonable orders
[t=1.41441s, 91352 KB] Landmarks generation time: 1.22799s
[t=1.41441s, 91352 KB] Discovered 22 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=1.41441s, 91352 KB] 36 edges
[t=1.41441s, 91352 KB] Landmark graph generation time: 1.22799s
[t=1.41441s, 91352 KB] Landmark graph contains 22 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=1.41441s, 91352 KB] Landmark graph contains 36 orderings.
[t=1.43441s, 91352 KB] Simplifying 270663 unary operators... done! [269991 unary operators]
[t=4.84629s, 91352 KB] time to simplify: 3.41188s
[t=4.85828s, 91352 KB] Initializing additive heuristic...
[t=4.85828s, 91352 KB] Initializing FF heuristic...
[t=4.85828s, 91352 KB] Building successor generator...done!
[t=4.88229s, 91352 KB] peak memory difference for successor generator creation: 0 KB
[t=4.88229s, 91352 KB] time for successor generation creation: 0.0240007s
[t=4.88229s, 91352 KB] Variables: 449
[t=4.88229s, 91352 KB] FactPairs: 901
[t=4.88229s, 91352 KB] Bytes per state: 60
[t=4.88229s, 91352 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=4.88229s, 91352 KB] 11 initial landmarks, 4 goal landmarks
[t=4.89429s, 91352 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=4.89429s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=4.89429s, 91352 KB] g=0, 1 evaluated, 0 expanded
[t=4.89429s, 91352 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=4.89429s, 91352 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 33
[t=4.90229s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=4.90229s, 91352 KB] g=1, 2 evaluated, 1 expanded
[t=4.93429s, 91352 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=4.93429s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=4.93429s, 91352 KB] g=2, 6 evaluated, 5 expanded
[t=5.20229s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=5.20229s, 91352 KB] g=8, 39 evaluated, 38 expanded
[t=5.36629s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=5.36629s, 91352 KB] g=10, 62 evaluated, 61 expanded
[t=5.42229s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=5.42229s, 91352 KB] g=8, 69 evaluated, 68 expanded
[t=5.43827s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=5.43827s, 91352 KB] g=9, 71 evaluated, 70 expanded
[t=5.57027s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=5.57027s, 91352 KB] g=13, 90 evaluated, 89 expanded
[t=9.70589s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=9.70589s, 91352 KB] g=18, 650 evaluated, 649 expanded
[t=11.2018s, 91352 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=11.2018s, 91352 KB] g=27, 856 evaluated, 855 expanded
[t=11.3098s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=11.3098s, 91352 KB] g=29, 873 evaluated, 872 expanded
[t=11.3458s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=11.3458s, 91352 KB] g=33, 879 evaluated, 878 expanded
[t=11.3578s, 91352 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=11.3578s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=11.3578s, 91352 KB] g=34, 881 evaluated, 880 expanded
[t=11.3738s, 91352 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=11.3738s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=11.3738s, 91352 KB] g=35, 884 evaluated, 883 expanded
[t=11.4257s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=11.4257s, 91352 KB] g=39, 892 evaluated, 891 expanded
[t=11.4937s, 91352 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=11.4937s, 91352 KB] g=42, 903 evaluated, 902 expanded
[t=11.5337s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=11.5337s, 91352 KB] g=46, 909 evaluated, 908 expanded
[t=11.5817s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=11.5817s, 91352 KB] g=48, 917 evaluated, 916 expanded
[t=11.8537s, 91352 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=11.8537s, 91352 KB] g=50, 961 evaluated, 960 expanded
[t=11.8617s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=11.8617s, 91352 KB] g=51, 962 evaluated, 961 expanded
[t=11.8657s, 91352 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=11.8657s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=11.8657s, 91352 KB] g=51, 963 evaluated, 962 expanded
[t=11.8977s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=11.8977s, 91352 KB] g=54, 968 evaluated, 967 expanded
[t=11.9337s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=11.9337s, 91352 KB] g=56, 974 evaluated, 973 expanded
[t=12.0777s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=12.0777s, 91352 KB] g=58, 997 evaluated, 996 expanded
[t=12.1337s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=12.1337s, 91352 KB] g=59, 1006 evaluated, 1005 expanded
[t=12.2017s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=12.2017s, 91352 KB] g=61, 1017 evaluated, 1016 expanded
[t=12.2977s, 91352 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=12.2977s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=12.2977s, 91352 KB] g=65, 1032 evaluated, 1031 expanded
[t=12.3017s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=12.3017s, 91352 KB] g=66, 1033 evaluated, 1032 expanded
[t=12.3377s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=12.3377s, 91352 KB] g=69, 1039 evaluated, 1038 expanded
[t=12.3657s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=12.3657s, 91352 KB] g=70, 1045 evaluated, 1044 expanded
[t=33.8772s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=33.8772s, 91352 KB] g=82, 4985 evaluated, 4984 expanded
[t=33.8852s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=33.8852s, 91352 KB] g=83, 4987 evaluated, 4986 expanded
[t=33.8932s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=33.8932s, 91352 KB] g=84, 4988 evaluated, 4987 expanded
[t=33.8972s, 91352 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=33.8972s, 91352 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=33.8972s, 91352 KB] g=85, 4989 evaluated, 4988 expanded
[t=33.8972s, 91352 KB] Solution found!
[t=33.8972s, 91352 KB] Actual search time: 29.0149s
gripper-down pr2 x0 y0 xrel0 x0 yrel0 yrel1 y0 y1 (1)
finish-object object0 x3 y5 (1)
gripper-up pr2 x0 y0 xrel0 x0 yrel1 yrel0 y1 y0 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-right pr2 x1 x2 y0 (1)
base-down pr2 x2 y0 y1 (1)
park pr2 (1)
get-left pr2 x2 y1 xrel0 x2 yrel0 y1 object1 x1 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x2 y1 y2 (1)
park pr2 (1)
gripper-left pr2 x2 y2 xrel0 xrel-1 x2 x1 yrel0 y2 (1)
put-up pr2 x2 y2 xrel-1 x1 yrel0 y2 object1 y1 (1)
gripper-right pr2 x2 y2 xrel-1 xrel0 x1 x2 yrel0 y2 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x2 x3 y2 (1)
base-right pr2 x3 x4 y2 (1)
base-right pr2 x4 x5 y2 (1)
base-right pr2 x5 x6 y2 (1)
base-down pr2 x6 y2 y3 (1)
base-down pr2 x6 y3 y4 (1)
base-down pr2 x6 y4 y5 (1)
base-down pr2 x6 y5 y6 (1)
base-down pr2 x6 y6 y7 (1)
base-down pr2 x6 y7 y8 (1)
base-left pr2 x6 x5 y8 (1)
base-left pr2 x5 x4 y8 (1)
park pr2 (1)
gripper-up pr2 x4 y8 xrel0 x4 yrel0 yrel-1 y8 y7 (1)
gripper-left pr2 x4 y8 xrel0 xrel-1 x4 x3 yrel-1 y7 (1)
get-up pr2 x4 y8 xrel-1 x3 yrel-1 y7 object3 y6 (1)
gripper-right pr2 x4 y8 xrel-1 xrel0 x3 x4 yrel-1 y7 (1)
put-up pr2 x4 y8 xrel0 x4 yrel-1 y7 object3 y6 (1)
finish-object object3 x4 y6 (1)
gripper-down pr2 x4 y8 xrel0 x4 yrel-1 yrel0 y7 y8 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x4 x5 y8 (1)
park pr2 (1)
gripper-right pr2 x5 y8 xrel0 xrel1 x5 x6 yrel0 y8 (1)
gripper-up pr2 x5 y8 xrel1 x6 yrel0 yrel-1 y8 y7 (1)
get-right pr2 x5 y8 xrel1 x6 yrel-1 y7 object2 x7 (1)
gripper-down pr2 x5 y8 xrel1 x6 yrel-1 yrel0 y7 y8 (1)
gripper-left pr2 x5 y8 xrel1 xrel0 x6 x5 yrel0 y8 (1)
unpark pr2 xrel0 yrel0 (1)
base-left pr2 x5 x4 y8 (1)
base-up pr2 x4 y8 y7 (1)
base-up pr2 x4 y7 y6 (1)
park pr2 (1)
put-up pr2 x4 y6 xrel0 x4 yrel0 y6 object2 y5 (1)
finish-object object2 x4 y5 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x4 y6 y7 (1)
base-left pr2 x4 x3 y7 (1)
base-down pr2 x3 y7 y8 (1)
base-left pr2 x3 x2 y8 (1)
base-left pr2 x2 x1 y8 (1)
base-up pr2 x1 y8 y7 (1)
park pr2 (1)
gripper-up pr2 x1 y7 xrel0 x1 yrel0 yrel-1 y7 y6 (1)
gripper-down pr2 x1 y7 xrel0 x1 yrel-1 yrel0 y6 y7 (1)
unpark pr2 xrel0 yrel0 (1)
base-up pr2 x1 y7 y6 (1)
park pr2 (1)
gripper-up pr2 x1 y6 xrel0 x1 yrel0 yrel-1 y6 y5 (1)
gripper-down pr2 x1 y6 xrel0 x1 yrel-1 yrel0 y5 y6 (1)
unpark pr2 xrel0 yrel0 (1)
base-up pr2 x1 y6 y5 (1)
base-up pr2 x1 y5 y4 (1)
base-up pr2 x1 y4 y3 (1)
park pr2 (1)
gripper-up pr2 x1 y3 xrel0 x1 yrel0 yrel-1 y3 y2 (1)
get-up pr2 x1 y3 xrel0 x1 yrel-1 y2 object1 y1 (1)
gripper-down pr2 x1 y3 xrel0 x1 yrel-1 yrel0 y2 y3 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x1 y3 y4 (1)
base-down pr2 x1 y4 y5 (1)
base-down pr2 x1 y5 y6 (1)
base-down pr2 x1 y6 y7 (1)
base-down pr2 x1 y7 y8 (1)
base-right pr2 x1 x2 y8 (1)
park pr2 (1)
gripper-right pr2 x2 y8 xrel0 xrel1 x2 x3 yrel0 y8 (1)
gripper-up pr2 x2 y8 xrel1 x3 yrel0 yrel-1 y8 y7 (1)
put-up pr2 x2 y8 xrel1 x3 yrel-1 y7 object1 y6 (1)
finish-object object1 x3 y6 (1)
[t=33.8972s, 91352 KB] Plan length: 86 step(s).
[t=33.8972s, 91352 KB] Plan cost: 86
[t=33.8972s, 91352 KB] Expanded 4989 state(s).
[t=33.8972s, 91352 KB] Reopened 0 state(s).
[t=33.8972s, 91352 KB] Evaluated 4990 state(s).
[t=33.8972s, 91352 KB] Evaluations: 9980
[t=33.8972s, 91352 KB] Generated 16487 state(s).
[t=33.8972s, 91352 KB] Dead ends: 0 state(s).
[t=33.8972s, 91352 KB] Number of registered states: 4990
[t=33.8972s, 91352 KB] Int hash set load factor: 4990/8192 = 0.609131
[t=33.8972s, 91352 KB] Int hash set resizes: 13
[t=33.8972s, 91352 KB] Search time: 29.0149s
[t=33.8972s, 91352 KB] Total time: 33.8972s
Solution found.
Peak memory: 91352 KB
search exit code: 0

INFO     Planner time: 4.4e+01s
