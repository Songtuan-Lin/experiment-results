INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/snake-opt18-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/snake-opt18-strips/p11.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p11/output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.090s CPU, 0.094s wall-clock]
15606 relevant atoms
1049 auxiliary atoms
16655 final queue length
77599 total queue pushes
Completing instantiation... [0.660s CPU, 0.659s wall-clock]
Instantiating: [0.750s CPU, 0.756s wall-clock]
Computing fact groups...
Finding invariants...
13 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
173 uncovered facts
Choosing groups: [0.010s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.030s CPU, 0.029s wall-clock]
Translating task: [0.820s CPU, 0.824s wall-clock]
28963 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.370s CPU, 0.373s wall-clock]
Reordering and filtering variables...
176 of 176 variables necessary.
0 of 3 mutex groups necessary.
15141 of 15141 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.170s CPU, 0.174s wall-clock]
Translator variables: 176
Translator derived variables: 0
Translator facts: 431
Translator goal facts: 17
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 15141
Translator axioms: 0
Translator task size: 173161
Translator peak memory: 127776 KB
Writing output... [0.110s CPU, 0.106s wall-clock]
Done! [2.270s CPU, 2.269s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p11/output.sas
INFO     search time limit: 297.68s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p11/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p11/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0547776s, 16440 KB] done reading input!
[t=0.0547776s, 16836 KB] Initializing landmark count heuristic...
[t=0.0547776s, 16836 KB] Generating landmark graph...
[t=0.0547776s, 17364 KB] Building a landmark graph with reasonable orders.
[t=0.0547776s, 17892 KB] Initializing Exploration...
[t=0.0707802s, 34288 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.226751s, 34960 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.226751s, 34960 KB] Landmarks generation time: 0.171973s
[t=0.226751s, 34960 KB] Discovered 32 landmarks, of which 5 are disjunctive and 0 are conjunctive.
[t=0.226751s, 34960 KB] 19 edges
[t=0.226751s, 34960 KB] approx. reasonable orders
[t=0.226751s, 34960 KB] approx. obedient reasonable orders
[t=0.226751s, 34960 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.226751s, 34960 KB] Landmarks generation time: 0.171973s
[t=0.226751s, 34960 KB] Discovered 32 landmarks, of which 5 are disjunctive and 0 are conjunctive.
[t=0.226751s, 34960 KB] 19 edges
[t=0.226751s, 34960 KB] Landmark graph generation time: 0.171973s
[t=0.226751s, 34960 KB] Landmark graph contains 32 landmarks, of which 5 are disjunctive and 0 are conjunctive.
[t=0.226751s, 34960 KB] Landmark graph contains 19 orderings.
[t=0.23475s, 34960 KB] Simplifying 89992 unary operators... done! [89992 unary operators]
[t=0.470752s, 34960 KB] time to simplify: 0.236002s
[t=0.470752s, 34960 KB] Initializing additive heuristic...
[t=0.470752s, 34960 KB] Initializing FF heuristic...
[t=0.470752s, 34960 KB] Building successor generator...done!
[t=0.47875s, 34960 KB] peak memory difference for successor generator creation: 0 KB
[t=0.47875s, 34960 KB] time for successor generation creation: 0.00799847s
[t=0.47875s, 34960 KB] Variables: 176
[t=0.47875s, 34960 KB] FactPairs: 431
[t=0.47875s, 34960 KB] Bytes per state: 24
[t=0.47875s, 34960 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.47875s, 34960 KB] 22 initial landmarks, 17 goal landmarks
[t=0.47875s, 34960 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.47875s, 34960 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.47875s, 34960 KB] g=0, 1 evaluated, 0 expanded
[t=0.47875s, 34960 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.47875s, 34960 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.482751s, 34960 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.482751s, 34960 KB] g=2, 6 evaluated, 5 expanded
[t=0.482751s, 34960 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.482751s, 34960 KB] g=3, 7 evaluated, 6 expanded
[t=0.482751s, 34960 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.482751s, 34960 KB] g=4, 8 evaluated, 7 expanded
[t=0.482751s, 34960 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.482751s, 34960 KB] g=5, 9 evaluated, 8 expanded
[t=0.48675s, 34960 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.48675s, 34960 KB] g=6, 11 evaluated, 10 expanded
[t=0.48675s, 34960 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.48675s, 34960 KB] g=9, 18 evaluated, 17 expanded
[t=0.490749s, 34960 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.490749s, 34960 KB] g=10, 19 evaluated, 18 expanded
[t=0.490749s, 34960 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.490749s, 34960 KB] g=12, 24 evaluated, 23 expanded
[t=0.57875s, 34960 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.57875s, 34960 KB] g=21, 188 evaluated, 187 expanded
[t=0.59475s, 34960 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.59475s, 34960 KB] g=19, 218 evaluated, 217 expanded
[t=0.66275s, 34960 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.66275s, 34960 KB] g=31, 365 evaluated, 360 expanded
[t=0.71075s, 34960 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.71075s, 34960 KB] g=40, 464 evaluated, 459 expanded
[t=1.32271s, 34960 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=1.32271s, 34960 KB] g=50, 1754 evaluated, 1740 expanded
[t=1.32271s, 34960 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=1.32271s, 34960 KB] g=52, 1756 evaluated, 1742 expanded
[t=1.32271s, 34960 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=1.32271s, 34960 KB] g=53, 1758 evaluated, 1744 expanded
[t=1.32271s, 34960 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=1.32671s, 34960 KB] g=54, 1759 evaluated, 1745 expanded
[t=1.32671s, 34960 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=1.32671s, 34960 KB] g=54, 1761 evaluated, 1747 expanded
[t=1.32671s, 34960 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=1.32671s, 34960 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=1.32671s, 34960 KB] g=55, 1763 evaluated, 1749 expanded
[t=1.32671s, 34960 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=1.32671s, 34960 KB] g=56, 1764 evaluated, 1750 expanded
[t=1.32671s, 34960 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=1.32671s, 34960 KB] g=57, 1765 evaluated, 1751 expanded
[t=1.32671s, 34960 KB] Solution found!
[t=1.32671s, 34960 KB] Actual search time: 0.847964s
move pos5-2 pos4-2 pos5-1 pos5-2 (1)
move pos4-2 pos3-2 pos5-2 pos4-2 (1)
move pos3-2 pos2-2 pos4-2 pos3-2 (1)
move pos2-2 pos2-1 pos3-2 pos2-2 (1)
move pos2-1 pos2-0 pos2-2 pos2-1 (1)
move pos2-0 pos1-0 pos2-1 pos2-0 (1)
move-and-eat-spawn pos1-0 pos0-0 pos1-2 pos4-1 (1)
move pos0-0 pos0-1 pos2-0 pos1-0 (1)
move-and-eat-spawn pos0-1 pos1-1 pos4-1 pos3-5 (1)
move pos1-1 pos2-1 pos1-0 pos0-0 (1)
move pos2-1 pos2-2 pos0-0 pos0-1 (1)
move pos2-2 pos2-3 pos0-1 pos1-1 (1)
move-and-eat-spawn pos2-3 pos2-4 pos3-5 pos3-0 (1)
move pos2-4 pos3-4 pos1-1 pos2-1 (1)
move pos3-4 pos3-3 pos2-1 pos2-2 (1)
move pos3-3 pos4-3 pos2-2 pos2-3 (1)
move pos4-3 pos4-2 pos2-3 pos2-4 (1)
move pos4-2 pos5-2 pos2-4 pos3-4 (1)
move pos5-2 pos5-1 pos3-4 pos3-3 (1)
move-and-eat-spawn pos5-1 pos5-0 pos3-0 pos1-4 (1)
move pos5-0 pos4-0 pos3-3 pos4-3 (1)
move-and-eat-spawn pos4-0 pos3-0 pos1-4 pos4-4 (1)
move pos3-0 pos2-0 pos4-3 pos4-2 (1)
move pos2-0 pos2-1 pos4-2 pos5-2 (1)
move pos2-1 pos3-1 pos5-2 pos5-1 (1)
move-and-eat-spawn pos3-1 pos4-1 pos4-4 pos5-5 (1)
move pos4-1 pos4-2 pos5-1 pos5-0 (1)
move pos4-2 pos4-3 pos5-0 pos4-0 (1)
move pos4-3 pos3-3 pos4-0 pos3-0 (1)
move pos3-3 pos3-4 pos3-0 pos2-0 (1)
move pos3-4 pos2-4 pos2-0 pos2-1 (1)
move pos2-4 pos2-3 pos2-1 pos3-1 (1)
move pos2-3 pos1-3 pos3-1 pos4-1 (1)
move-and-eat-spawn pos1-3 pos1-4 pos5-5 pos3-2 (1)
move pos1-4 pos1-5 pos4-1 pos4-2 (1)
move pos1-5 pos2-5 pos4-2 pos4-3 (1)
move-and-eat-spawn pos2-5 pos3-5 pos3-2 pos4-2 (1)
move pos3-5 pos4-5 pos4-3 pos3-3 (1)
move-and-eat-spawn pos4-5 pos5-5 pos4-2 pos1-3 (1)
move pos5-5 pos5-4 pos3-3 pos3-4 (1)
move pos5-4 pos5-3 pos3-4 pos2-4 (1)
move pos5-3 pos5-2 pos2-4 pos2-3 (1)
move-and-eat-spawn pos5-2 pos4-2 pos1-3 pos3-4 (1)
move-and-eat-spawn pos4-2 pos3-2 pos3-4 pos0-5 (1)
move pos3-2 pos2-2 pos2-3 pos1-3 (1)
move pos2-2 pos2-3 pos1-3 pos1-4 (1)
move pos2-3 pos3-3 pos1-4 pos1-5 (1)
move pos3-3 pos4-3 pos1-5 pos2-5 (1)
move-and-eat-spawn pos4-3 pos4-4 pos0-5 dummypoint (1)
move-and-eat-no-spawn pos4-4 pos3-4 (1)
move pos3-4 pos2-4 pos2-5 pos3-5 (1)
move pos2-4 pos1-4 pos3-5 pos4-5 (1)
move-and-eat-no-spawn pos1-4 pos1-3 (1)
move-and-eat-no-spawn pos1-3 pos1-2 (1)
move-and-eat-no-spawn pos1-2 pos0-2 (1)
move pos0-2 pos0-3 pos4-5 pos5-5 (1)
move pos0-3 pos0-4 pos5-5 pos5-4 (1)
move-and-eat-no-spawn pos0-4 pos0-5 (1)
[t=1.32671s, 34960 KB] Plan length: 58 step(s).
[t=1.32671s, 34960 KB] Plan cost: 58
[t=1.32671s, 34960 KB] Expanded 1752 state(s).
[t=1.32671s, 34960 KB] Reopened 0 state(s).
[t=1.32671s, 34960 KB] Evaluated 1766 state(s).
[t=1.32671s, 34960 KB] Evaluations: 3519
[t=1.32671s, 34960 KB] Generated 3850 state(s).
[t=1.32671s, 34960 KB] Dead ends: 13 state(s).
[t=1.32671s, 34960 KB] Number of registered states: 1766
[t=1.32671s, 34960 KB] Int hash set load factor: 1766/2048 = 0.862305
[t=1.32671s, 34960 KB] Int hash set resizes: 11
[t=1.32671s, 34960 KB] Search time: 0.847964s
[t=1.32671s, 34960 KB] Total time: 1.32671s
Solution found.
Peak memory: 34960 KB
search exit code: 0

INFO     Planner time: 3.7s
