INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/snake-opt18-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/snake-opt18-strips/p03.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p03/output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.050s CPU, 0.050s wall-clock]
8023 relevant atoms
818 auxiliary atoms
8841 final queue length
40505 total queue pushes
Completing instantiation... [0.290s CPU, 0.285s wall-clock]
Instantiating: [0.340s CPU, 0.337s wall-clock]
Computing fact groups...
Finding invariants...
13 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
127 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.020s CPU, 0.015s wall-clock]
Translating task: [0.390s CPU, 0.384s wall-clock]
13677 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.230s CPU, 0.229s wall-clock]
Reordering and filtering variables...
130 of 130 variables necessary.
0 of 3 mutex groups necessary.
7678 of 7678 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.090s CPU, 0.087s wall-clock]
Translator variables: 130
Translator derived variables: 0
Translator facts: 322
Translator goal facts: 22
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 7678
Translator axioms: 0
Translator task size: 89936
Translator peak memory: 81392 KB
Writing output... [0.060s CPU, 0.054s wall-clock]
Done! [1.120s CPU, 1.111s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p03/output.sas
INFO     search time limit: 298.83s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p03/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p03/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0260386s, 13232 KB] done reading input!
[t=0.0260386s, 13628 KB] Initializing landmark count heuristic...
[t=0.0260386s, 13628 KB] Generating landmark graph...
[t=0.0260386s, 13892 KB] Building a landmark graph with reasonable orders.
[t=0.0300395s, 14288 KB] Initializing Exploration...
[t=0.0340412s, 22352 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.102041s, 22900 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.102041s, 22900 KB] Landmarks generation time: 0.0760022s
[t=0.102041s, 22900 KB] Discovered 39 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.102041s, 22900 KB] 22 edges
[t=0.102041s, 22900 KB] approx. reasonable orders
[t=0.106041s, 22900 KB] approx. obedient reasonable orders
[t=0.106041s, 22900 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.106041s, 22900 KB] Landmarks generation time: 0.0800021s
[t=0.106041s, 22900 KB] Discovered 39 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.106041s, 22900 KB] 22 edges
[t=0.106041s, 22900 KB] Landmark graph generation time: 0.0800021s
[t=0.106041s, 22900 KB] Landmark graph contains 39 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.106041s, 22900 KB] Landmark graph contains 22 orderings.
[t=0.110041s, 22900 KB] Simplifying 45392 unary operators... done! [45392 unary operators]
[t=0.194039s, 22900 KB] time to simplify: 0.0839986s
[t=0.194039s, 22900 KB] Initializing additive heuristic...
[t=0.194039s, 22900 KB] Initializing FF heuristic...
[t=0.194039s, 22900 KB] Building successor generator...done!
[t=0.198041s, 22900 KB] peak memory difference for successor generator creation: 0 KB
[t=0.198041s, 22900 KB] time for successor generation creation: 0.00400123s
[t=0.198041s, 22900 KB] Variables: 130
[t=0.198041s, 22900 KB] FactPairs: 322
[t=0.198041s, 22900 KB] Bytes per state: 20
[t=0.198041s, 22900 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.198041s, 22900 KB] 31 initial landmarks, 22 goal landmarks
[t=0.198041s, 22900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.198041s, 22900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.198041s, 22900 KB] g=0, 1 evaluated, 0 expanded
[t=0.198041s, 22900 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.198041s, 22900 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.198041s, 22900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.198041s, 22900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.198041s, 22900 KB] g=1, 2 evaluated, 1 expanded
[t=0.198041s, 22900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.198041s, 22900 KB] g=2, 3 evaluated, 2 expanded
[t=0.198041s, 22900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.198041s, 22900 KB] g=2, 5 evaluated, 4 expanded
[t=0.198041s, 22900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.198041s, 22900 KB] g=4, 7 evaluated, 6 expanded
[t=0.198041s, 22900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.198041s, 22900 KB] g=4, 9 evaluated, 8 expanded
[t=0.20204s, 22900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.20204s, 22900 KB] g=5, 18 evaluated, 17 expanded
[t=0.20204s, 22900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.20204s, 22900 KB] g=6, 29 evaluated, 28 expanded
[t=5.86601s, 22900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=5.86601s, 22900 KB] g=33, 23894 evaluated, 23152 expanded
[t=5.86601s, 22900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=5.86601s, 22900 KB] g=34, 23896 evaluated, 23154 expanded
[t=12.9579s, 23984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=12.9579s, 23984 KB] g=38, 53996 evaluated, 52092 expanded
[t=12.9619s, 23984 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=12.9619s, 23984 KB] g=45, 54007 evaluated, 52103 expanded
[t=12.9619s, 23984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=12.9619s, 23984 KB] g=50, 54014 evaluated, 52110 expanded
[t=12.9619s, 23984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=12.9619s, 23984 KB] g=51, 54015 evaluated, 52111 expanded
[t=12.9619s, 23984 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=12.9619s, 23984 KB] g=52, 54016 evaluated, 52112 expanded
[t=12.9619s, 23984 KB] Solution found!
[t=12.9619s, 23984 KB] Actual search time: 12.7639s
move pos0-4 pos1-4 pos0-3 pos0-4 (1)
move-and-eat-spawn pos1-4 pos2-4 pos3-0 pos0-1 (1)
move pos2-4 pos2-3 pos0-4 pos1-4 (1)
move pos2-3 pos2-2 pos1-4 pos2-4 (1)
move-and-eat-spawn pos2-2 pos2-1 pos0-1 pos1-2 (1)
move-and-eat-spawn pos2-1 pos1-1 pos1-2 pos4-0 (1)
move-and-eat-spawn pos1-1 pos0-1 pos4-0 pos4-1 (1)
move pos0-1 pos0-2 pos2-4 pos2-3 (1)
move pos0-2 pos0-3 pos2-3 pos2-2 (1)
move pos0-3 pos1-3 pos2-2 pos2-1 (1)
move pos1-3 pos2-3 pos2-1 pos1-1 (1)
move pos2-3 pos3-3 pos1-1 pos0-1 (1)
move-and-eat-spawn pos3-3 pos3-2 pos4-1 pos1-3 (1)
move pos3-2 pos2-2 pos0-1 pos0-2 (1)
move pos2-2 pos2-1 pos0-2 pos0-3 (1)
move pos2-1 pos3-1 pos0-3 pos1-3 (1)
move-and-eat-spawn pos3-1 pos4-1 pos1-3 pos0-0 (1)
move-and-eat-spawn pos4-1 pos4-0 pos0-0 pos4-4 (1)
move-and-eat-spawn pos4-0 pos3-0 pos4-4 pos0-2 (1)
move-and-eat-spawn pos3-0 pos2-0 pos0-2 pos2-3 (1)
move pos2-0 pos1-0 pos1-3 pos2-3 (1)
move-and-eat-spawn pos1-0 pos0-0 pos2-3 pos3-4 (1)
move pos0-0 pos0-1 pos2-3 pos3-3 (1)
move pos0-1 pos1-1 pos3-3 pos3-2 (1)
move-and-eat-spawn pos1-1 pos1-2 pos3-4 pos3-3 (1)
move-and-eat-spawn pos1-2 pos0-2 pos3-3 pos2-2 (1)
move pos0-2 pos0-3 pos3-2 pos2-2 (1)
move-and-eat-spawn pos0-3 pos1-3 pos2-2 pos4-2 (1)
move pos1-3 pos1-4 pos2-2 pos2-1 (1)
move pos1-4 pos2-4 pos2-1 pos3-1 (1)
move-and-eat-spawn pos2-4 pos2-3 pos4-2 pos1-4 (1)
move-and-eat-spawn pos2-3 pos3-3 pos1-4 pos1-0 (1)
move-and-eat-spawn pos3-3 pos3-4 pos1-0 pos4-3 (1)
move-and-eat-spawn pos3-4 pos4-4 pos4-3 dummypoint (1)
move-and-eat-no-spawn pos4-4 pos4-3 (1)
move-and-eat-no-spawn pos4-3 pos4-2 (1)
move pos4-2 pos3-2 pos3-1 pos4-1 (1)
move-and-eat-no-spawn pos3-2 pos2-2 (1)
move pos2-2 pos2-1 pos4-1 pos4-0 (1)
move pos2-1 pos3-1 pos4-0 pos3-0 (1)
move pos3-1 pos4-1 pos3-0 pos2-0 (1)
move pos4-1 pos4-0 pos2-0 pos1-0 (1)
move pos4-0 pos3-0 pos1-0 pos0-0 (1)
move pos3-0 pos2-0 pos0-0 pos0-1 (1)
move-and-eat-no-spawn pos2-0 pos1-0 (1)
move pos1-0 pos0-0 pos0-1 pos1-1 (1)
move pos0-0 pos0-1 pos1-1 pos1-2 (1)
move pos0-1 pos1-1 pos1-2 pos0-2 (1)
move pos1-1 pos1-2 pos0-2 pos0-3 (1)
move pos1-2 pos0-2 pos0-3 pos1-3 (1)
move pos0-2 pos0-3 pos1-3 pos1-4 (1)
move pos0-3 pos0-4 pos1-4 pos2-4 (1)
move-and-eat-no-spawn pos0-4 pos1-4 (1)
[t=12.9619s, 23984 KB] Plan length: 53 step(s).
[t=12.9619s, 23984 KB] Plan cost: 53
[t=12.9619s, 23984 KB] Expanded 52113 state(s).
[t=12.9619s, 23984 KB] Reopened 0 state(s).
[t=12.9619s, 23984 KB] Evaluated 54017 state(s).
[t=12.9619s, 23984 KB] Evaluations: 106131
[t=12.9619s, 23984 KB] Generated 95536 state(s).
[t=12.9619s, 23984 KB] Dead ends: 1903 state(s).
[t=12.9619s, 23984 KB] Number of registered states: 54017
[t=12.9619s, 23984 KB] Int hash set load factor: 54017/65536 = 0.824234
[t=12.9619s, 23984 KB] Int hash set resizes: 16
[t=12.9619s, 23984 KB] Search time: 12.7639s
[t=12.9619s, 23984 KB] Total time: 12.9619s
Solution found.
Peak memory: 23984 KB
search exit code: 0

INFO     Planner time: 1.4e+01s
