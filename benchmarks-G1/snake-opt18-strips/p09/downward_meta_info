INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/snake-opt18-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/snake-opt18-strips/p09.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p09/output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.070s CPU, 0.060s wall-clock]
10160 relevant atoms
806 auxiliary atoms
10966 final queue length
50057 total queue pushes
Completing instantiation... [0.370s CPU, 0.374s wall-clock]
Instantiating: [0.440s CPU, 0.437s wall-clock]
Computing fact groups...
Finding invariants...
13 initial candidates
Finding invariants: [0.000s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
138 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.020s CPU, 0.018s wall-clock]
Translating task: [0.520s CPU, 0.506s wall-clock]
18945 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.210s CPU, 0.223s wall-clock]
Reordering and filtering variables...
141 of 141 variables necessary.
0 of 3 mutex groups necessary.
9790 of 9790 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.110s CPU, 0.107s wall-clock]
Translator variables: 141
Translator derived variables: 0
Translator facts: 342
Translator goal facts: 10
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 9790
Translator axioms: 0
Translator task size: 110595
Translator peak memory: 94116 KB
Writing output... [0.070s CPU, 0.068s wall-clock]
Done! [1.370s CPU, 1.364s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p09/output.sas
INFO     search time limit: 298.58s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p09/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p09/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0335709s, 14092 KB] done reading input!
[t=0.0335709s, 14488 KB] Initializing landmark count heuristic...
[t=0.0335709s, 14488 KB] Generating landmark graph...
[t=0.0335709s, 14884 KB] Building a landmark graph with reasonable orders.
[t=0.0375725s, 15148 KB] Initializing Exploration...
[t=0.0415738s, 24592 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.113569s, 25120 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.113569s, 25120 KB] Landmarks generation time: 0.0839985s
[t=0.117569s, 25120 KB] Discovered 26 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.117569s, 25120 KB] 17 edges
[t=0.117569s, 25120 KB] approx. reasonable orders
[t=0.117569s, 25120 KB] approx. obedient reasonable orders
[t=0.117569s, 25120 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.117569s, 25120 KB] Landmarks generation time: 0.0839985s
[t=0.117569s, 25120 KB] Discovered 26 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.117569s, 25120 KB] 17 edges
[t=0.117569s, 25120 KB] Landmark graph generation time: 0.0839985s
[t=0.117569s, 25120 KB] Landmark graph contains 26 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.117569s, 25120 KB] Landmark graph contains 17 orderings.
[t=0.117569s, 25120 KB] Simplifying 58114 unary operators... done! [58114 unary operators]
[t=0.213568s, 25120 KB] time to simplify: 0.0959983s
[t=0.213568s, 25120 KB] Initializing additive heuristic...
[t=0.213568s, 25120 KB] Initializing FF heuristic...
[t=0.217569s, 25120 KB] Building successor generator...done!
[t=0.217569s, 25120 KB] peak memory difference for successor generator creation: 0 KB
[t=0.217569s, 25120 KB] time for successor generation creation: 0s
[t=0.217569s, 25120 KB] Variables: 141
[t=0.217569s, 25120 KB] FactPairs: 342
[t=0.217569s, 25120 KB] Bytes per state: 20
[t=0.217569s, 25120 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.217569s, 25120 KB] 15 initial landmarks, 10 goal landmarks
[t=0.217569s, 25120 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.217569s, 25120 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.217569s, 25120 KB] g=0, 1 evaluated, 0 expanded
[t=0.217569s, 25120 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.217569s, 25120 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.221568s, 25120 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.221568s, 25120 KB] g=1, 2 evaluated, 1 expanded
[t=0.221568s, 25120 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.221568s, 25120 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.221568s, 25120 KB] g=2, 4 evaluated, 3 expanded
[t=0.221568s, 25120 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.221568s, 25120 KB] g=3, 5 evaluated, 4 expanded
[t=0.221568s, 25120 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.221568s, 25120 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.221568s, 25120 KB] g=6, 10 evaluated, 9 expanded
[t=0.221568s, 25120 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.221568s, 25120 KB] g=7, 11 evaluated, 10 expanded
[t=0.221568s, 25120 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.221568s, 25120 KB] g=8, 12 evaluated, 11 expanded
[t=0.221568s, 25120 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.221568s, 25120 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.221568s, 25120 KB] g=9, 14 evaluated, 13 expanded
[t=0.225568s, 25120 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.225568s, 25120 KB] g=11, 20 evaluated, 19 expanded
[t=0.225568s, 25120 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.225568s, 25120 KB] g=13, 24 evaluated, 23 expanded
[t=0.225568s, 25120 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.225568s, 25120 KB] g=15, 27 evaluated, 26 expanded
[t=0.229567s, 25120 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.229567s, 25120 KB] g=15, 34 evaluated, 33 expanded
[t=0.229567s, 25120 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.229567s, 25120 KB] g=16, 35 evaluated, 34 expanded
[t=0.237567s, 25120 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.237567s, 25120 KB] g=15, 65 evaluated, 62 expanded
[t=0.237567s, 25120 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.237567s, 25120 KB] g=16, 67 evaluated, 64 expanded
[t=0.237567s, 25120 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.237567s, 25120 KB] g=17, 69 evaluated, 66 expanded
[t=0.237567s, 25120 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.237567s, 25120 KB] g=18, 70 evaluated, 67 expanded
[t=0.237567s, 25120 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.237567s, 25120 KB] g=19, 71 evaluated, 68 expanded
[t=0.237567s, 25120 KB] Solution found!
[t=0.237567s, 25120 KB] Actual search time: 0.0199981s
move pos3-1 pos3-0 pos2-1 pos3-1 (1)
move pos3-0 pos2-0 pos3-1 pos3-0 (1)
move-and-eat-spawn pos2-0 pos1-0 pos3-2 pos3-4 (1)
move-and-eat-spawn pos1-0 pos0-0 pos3-4 pos3-3 (1)
move pos0-0 pos0-1 pos3-0 pos2-0 (1)
move pos0-1 pos0-2 pos2-0 pos1-0 (1)
move-and-eat-spawn pos0-2 pos0-3 pos3-3 pos2-0 (1)
move pos0-3 pos1-3 pos1-0 pos0-0 (1)
move pos1-3 pos2-3 pos0-0 pos0-1 (1)
move-and-eat-spawn pos2-3 pos2-4 pos2-0 pos5-2 (1)
move-and-eat-spawn pos2-4 pos3-4 pos5-2 dummypoint (1)
move-and-eat-no-spawn pos3-4 pos3-3 (1)
move pos3-3 pos4-3 pos0-1 pos0-2 (1)
move-and-eat-no-spawn pos4-3 pos5-3 (1)
move-and-eat-no-spawn pos5-3 pos5-2 (1)
move pos5-2 pos4-2 pos0-2 pos0-3 (1)
move-and-eat-no-spawn pos4-2 pos3-2 (1)
move pos3-2 pos3-1 pos0-3 pos1-3 (1)
move pos3-1 pos3-0 pos1-3 pos2-3 (1)
move-and-eat-no-spawn pos3-0 pos2-0 (1)
[t=0.237567s, 25120 KB] Plan length: 20 step(s).
[t=0.237567s, 25120 KB] Plan cost: 20
[t=0.237567s, 25120 KB] Expanded 69 state(s).
[t=0.237567s, 25120 KB] Reopened 0 state(s).
[t=0.237567s, 25120 KB] Evaluated 72 state(s).
[t=0.237567s, 25120 KB] Evaluations: 142
[t=0.237567s, 25120 KB] Generated 153 state(s).
[t=0.237567s, 25120 KB] Dead ends: 2 state(s).
[t=0.237567s, 25120 KB] Number of registered states: 72
[t=0.237567s, 25120 KB] Int hash set load factor: 72/128 = 0.5625
[t=0.237567s, 25120 KB] Int hash set resizes: 7
[t=0.237567s, 25120 KB] Search time: 0.0199981s
[t=0.237567s, 25120 KB] Total time: 0.237567s
Solution found.
Peak memory: 25120 KB
search exit code: 0

INFO     Planner time: 1.7s
