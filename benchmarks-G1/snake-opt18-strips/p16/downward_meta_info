INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.99s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/snake-opt18-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/snake-opt18-strips/p16.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p16/output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 32 rules.
Computing model... [0.140s CPU, 0.140s wall-clock]
21956 relevant atoms
1257 auxiliary atoms
23213 final queue length
109633 total queue pushes
Completing instantiation... [0.890s CPU, 0.894s wall-clock]
Instantiating: [1.040s CPU, 1.038s wall-clock]
Computing fact groups...
Finding invariants...
13 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
205 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.040s CPU, 0.041s wall-clock]
Translating task: [1.110s CPU, 1.110s wall-clock]
40873 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.490s CPU, 0.487s wall-clock]
Reordering and filtering variables...
208 of 208 variables necessary.
0 of 3 mutex groups necessary.
21405 of 21405 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.240s CPU, 0.243s wall-clock]
Translator variables: 208
Translator derived variables: 0
Translator facts: 511
Translator goal facts: 21
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 21405
Translator axioms: 0
Translator task size: 245521
Translator peak memory: 169140 KB
Writing output... [0.150s CPU, 0.150s wall-clock]
Done! [3.080s CPU, 3.076s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p16/output.sas
INFO     search time limit: 296.88s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p16/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/snake-opt18-strips/p16/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0771001s, 19272 KB] done reading input!
[t=0.0771001s, 19536 KB] Initializing landmark count heuristic...
[t=0.0771001s, 19536 KB] Generating landmark graph...
[t=0.0771001s, 20460 KB] Building a landmark graph with reasonable orders.
[t=0.0811016s, 21252 KB] Initializing Exploration...
[t=0.0971031s, 40468 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.297104s, 41280 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.301104s, 41280 KB] Landmarks generation time: 0.224004s
[t=0.301104s, 41280 KB] Discovered 35 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.301104s, 41280 KB] 14 edges
[t=0.301104s, 41280 KB] approx. reasonable orders
[t=0.301104s, 41280 KB] approx. obedient reasonable orders
[t=0.301104s, 41280 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.301104s, 41280 KB] Landmarks generation time: 0.224004s
[t=0.301104s, 41280 KB] Discovered 35 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.301104s, 41280 KB] 14 edges
[t=0.301104s, 41280 KB] Landmark graph generation time: 0.224004s
[t=0.301104s, 41280 KB] Landmark graph contains 35 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.301104s, 41280 KB] Landmark graph contains 14 orderings.
[t=0.309103s, 41280 KB] Simplifying 127390 unary operators... done! [127390 unary operators]
[t=0.601105s, 41280 KB] time to simplify: 0.292002s
[t=0.601105s, 41280 KB] Initializing additive heuristic...
[t=0.601105s, 41280 KB] Initializing FF heuristic...
[t=0.601105s, 41280 KB] Building successor generator...done!
[t=0.609103s, 41280 KB] peak memory difference for successor generator creation: 0 KB
[t=0.609103s, 41280 KB] time for successor generation creation: 0.00799774s
[t=0.609103s, 41280 KB] Variables: 208
[t=0.609103s, 41280 KB] FactPairs: 511
[t=0.609103s, 41280 KB] Bytes per state: 28
[t=0.609103s, 41280 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.609103s, 41280 KB] 26 initial landmarks, 21 goal landmarks
[t=0.609103s, 41280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.609103s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.609103s, 41280 KB] g=0, 1 evaluated, 0 expanded
[t=0.609103s, 41280 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.609103s, 41280 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.613102s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.613102s, 41280 KB] g=1, 2 evaluated, 1 expanded
[t=0.613102s, 41280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.613102s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.613102s, 41280 KB] g=2, 3 evaluated, 2 expanded
[t=0.613102s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.613102s, 41280 KB] g=3, 5 evaluated, 4 expanded
[t=0.613102s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.613102s, 41280 KB] g=5, 7 evaluated, 6 expanded
[t=0.617101s, 41280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.617101s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.617101s, 41280 KB] g=7, 10 evaluated, 9 expanded
[t=0.621102s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.621102s, 41280 KB] g=9, 15 evaluated, 14 expanded
[t=0.625102s, 41280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.625102s, 41280 KB] g=10, 24 evaluated, 23 expanded
[t=0.661101s, 41280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.661101s, 41280 KB] g=16, 85 evaluated, 84 expanded
[t=0.697102s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.697102s, 41280 KB] g=25, 142 evaluated, 141 expanded
[t=0.705101s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.705101s, 41280 KB] g=28, 156 evaluated, 155 expanded
[t=6.71706s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=6.71706s, 41280 KB] g=44, 9773 evaluated, 9679 expanded
[t=29.8609s, 41280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=29.8609s, 41280 KB] g=66, 47482 evaluated, 46862 expanded
[t=29.8649s, 41280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=29.8649s, 41280 KB] g=67, 47489 evaluated, 46868 expanded
[t=29.8769s, 41280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=29.8769s, 41280 KB] g=70, 47511 evaluated, 46889 expanded
[t=29.8849s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=29.8849s, 41280 KB] g=77, 47528 evaluated, 46905 expanded
[t=29.8849s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=29.8849s, 41280 KB] g=78, 47529 evaluated, 46906 expanded
[t=29.8849s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=29.8849s, 41280 KB] g=80, 47531 evaluated, 46908 expanded
[t=29.8889s, 41280 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=29.8889s, 41280 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=29.8889s, 41280 KB] g=81, 47532 evaluated, 46909 expanded
[t=29.8889s, 41280 KB] Solution found!
[t=29.8889s, 41280 KB] Actual search time: 29.2798s
move pos0-6 pos0-5 pos1-6 pos0-6 (1)
move pos0-5 pos1-5 pos0-6 pos0-5 (1)
move-and-eat-spawn pos1-5 pos1-4 pos4-2 pos2-4 (1)
move pos1-4 pos2-4 pos0-5 pos1-5 (1)
move pos2-4 pos2-3 pos1-5 pos1-4 (1)
move pos2-3 pos3-3 pos1-4 pos2-4 (1)
move pos3-3 pos4-3 pos2-4 pos2-3 (1)
move-and-eat-spawn pos4-3 pos5-3 pos2-4 pos2-0 (1)
move pos5-3 pos5-2 pos2-3 pos3-3 (1)
move pos5-2 pos5-1 pos3-3 pos4-3 (1)
move-and-eat-spawn pos5-1 pos4-1 pos2-0 pos3-2 (1)
move pos4-1 pos3-1 pos4-3 pos5-3 (1)
move pos3-1 pos3-2 pos5-3 pos5-2 (1)
move pos3-2 pos3-3 pos5-2 pos5-1 (1)
move pos3-3 pos3-4 pos5-1 pos4-1 (1)
move pos3-4 pos3-5 pos4-1 pos3-1 (1)
move-and-eat-spawn pos3-5 pos3-6 pos3-2 pos3-4 (1)
move pos3-6 pos4-6 pos3-1 pos3-2 (1)
move pos4-6 pos5-6 pos3-2 pos3-3 (1)
move-and-eat-spawn pos5-6 pos5-5 pos3-4 pos1-1 (1)
move pos5-5 pos4-5 pos3-3 pos3-4 (1)
move pos4-5 pos4-4 pos3-4 pos3-5 (1)
move-and-eat-spawn pos4-4 pos3-4 pos1-1 pos3-0 (1)
move pos3-4 pos3-3 pos3-5 pos3-6 (1)
move pos3-3 pos2-3 pos3-6 pos4-6 (1)
move pos2-3 pos2-2 pos4-6 pos5-6 (1)
move pos2-2 pos1-2 pos5-6 pos5-5 (1)
move pos1-2 pos1-3 pos5-5 pos4-5 (1)
move pos1-3 pos0-3 pos4-5 pos4-4 (1)
move pos0-3 pos0-2 pos4-4 pos3-4 (1)
move pos0-2 pos0-1 pos3-4 pos3-3 (1)
move pos0-1 pos0-0 pos3-3 pos2-3 (1)
move pos0-0 pos1-0 pos2-3 pos2-2 (1)
move-and-eat-spawn pos1-0 pos2-0 pos3-0 pos2-3 (1)
move-and-eat-spawn pos2-0 pos3-0 pos2-3 pos0-5 (1)
move pos3-0 pos3-1 pos2-2 pos1-2 (1)
move pos3-1 pos2-1 pos1-2 pos1-3 (1)
move-and-eat-spawn pos2-1 pos1-1 pos0-5 pos5-0 (1)
move pos1-1 pos1-2 pos1-3 pos0-3 (1)
move pos1-2 pos1-3 pos0-3 pos0-2 (1)
move pos1-3 pos1-4 pos0-2 pos0-1 (1)
move pos1-4 pos0-4 pos0-1 pos0-0 (1)
move-and-eat-spawn pos0-4 pos0-5 pos5-0 pos2-1 (1)
move pos0-5 pos1-5 pos0-0 pos1-0 (1)
move pos1-5 pos2-5 pos1-0 pos2-0 (1)
move pos2-5 pos3-5 pos2-0 pos3-0 (1)
move pos3-5 pos3-4 pos3-0 pos3-1 (1)
move pos3-4 pos3-3 pos3-1 pos2-1 (1)
move pos3-3 pos4-3 pos2-1 pos1-1 (1)
move-and-eat-spawn pos4-3 pos4-2 pos2-1 pos5-1 (1)
move-and-eat-spawn pos4-2 pos3-2 pos5-1 pos0-2 (1)
move pos3-2 pos3-1 pos1-1 pos1-2 (1)
move pos3-1 pos4-1 pos1-2 pos1-3 (1)
move-and-eat-spawn pos4-1 pos5-1 pos0-2 pos2-2 (1)
move-and-eat-spawn pos5-1 pos5-0 pos2-2 pos2-5 (1)
move pos5-0 pos4-0 pos1-3 pos1-4 (1)
move pos4-0 pos3-0 pos1-4 pos0-4 (1)
move pos3-0 pos2-0 pos0-4 pos0-5 (1)
move pos2-0 pos1-0 pos0-5 pos1-5 (1)
move pos1-0 pos1-1 pos1-5 pos2-5 (1)
move pos1-1 pos1-2 pos2-5 pos3-5 (1)
move-and-eat-spawn pos1-2 pos0-2 pos2-5 pos0-4 (1)
move pos0-2 pos0-3 pos3-5 pos3-4 (1)
move pos0-3 pos1-3 pos3-4 pos3-3 (1)
move-and-eat-spawn pos1-3 pos2-3 pos0-4 dummypoint (1)
move-and-eat-no-spawn pos2-3 pos2-4 (1)
move-and-eat-no-spawn pos2-4 pos2-5 (1)
move pos2-5 pos1-5 pos3-3 pos4-3 (1)
move pos1-5 pos1-4 pos4-3 pos4-2 (1)
move-and-eat-no-spawn pos1-4 pos0-4 (1)
move pos0-4 pos0-5 pos4-2 pos3-2 (1)
move pos0-5 pos0-6 pos3-2 pos3-1 (1)
move pos0-6 pos1-6 pos3-1 pos4-1 (1)
move pos1-6 pos2-6 pos4-1 pos5-1 (1)
move pos2-6 pos3-6 pos5-1 pos5-0 (1)
move pos3-6 pos3-5 pos5-0 pos4-0 (1)
move pos3-5 pos3-4 pos4-0 pos3-0 (1)
move pos3-4 pos3-3 pos3-0 pos2-0 (1)
move pos3-3 pos3-2 pos2-0 pos1-0 (1)
move pos3-2 pos3-1 pos1-0 pos1-1 (1)
move-and-eat-no-spawn pos3-1 pos2-1 (1)
move-and-eat-no-spawn pos2-1 pos2-2 (1)
[t=29.8889s, 41280 KB] Plan length: 82 step(s).
[t=29.8889s, 41280 KB] Plan cost: 82
[t=29.8889s, 41280 KB] Expanded 46910 state(s).
[t=29.8889s, 41280 KB] Reopened 0 state(s).
[t=29.8889s, 41280 KB] Evaluated 47533 state(s).
[t=29.8889s, 41280 KB] Evaluations: 94444
[t=29.8889s, 41280 KB] Generated 104584 state(s).
[t=29.8889s, 41280 KB] Dead ends: 622 state(s).
[t=29.8889s, 41280 KB] Number of registered states: 47533
[t=29.8889s, 41280 KB] Int hash set load factor: 47533/65536 = 0.725296
[t=29.8889s, 41280 KB] Int hash set resizes: 16
[t=29.8889s, 41280 KB] Search time: 29.2798s
[t=29.8889s, 41280 KB] Total time: 29.8889s
Solution found.
Peak memory: 41280 KB
search exit code: 0

INFO     Planner time: 3.3e+01s
