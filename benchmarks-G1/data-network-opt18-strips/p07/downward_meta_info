INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/data-network-opt18-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/data-network-opt18-strips/p07.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-opt18-strips/p07/output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 61 rules.
Computing model... [0.030s CPU, 0.030s wall-clock]
2197 relevant atoms
5336 auxiliary atoms
7533 final queue length
10679 total queue pushes
Completing instantiation... [0.040s CPU, 0.040s wall-clock]
Instantiating: [0.070s CPU, 0.076s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.010s CPU, 0.003s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
66 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.003s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translating task: [0.040s CPU, 0.046s wall-clock]
292 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
5 operators removed
0 axioms removed
13 propositions removed
Detecting unreachable propositions: [0.020s CPU, 0.015s wall-clock]
Reordering and filtering variables...
64 of 64 variables necessary.
0 of 3 mutex groups necessary.
1777 of 1777 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.005s wall-clock]
Translator variables: 64
Translator derived variables: 0
Translator facts: 157
Translator goal facts: 3
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 1777
Translator axioms: 0
Translator task size: 11195
Translator peak memory: 36012 KB
Writing output... [0.010s CPU, 0.007s wall-clock]
Done! [0.150s CPU, 0.158s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-opt18-strips/p07/output.sas
INFO     search time limit: 299.79s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-opt18-strips/p07/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-opt18-strips/p07/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0052649s, 10436 KB] done reading input!
[t=0.0052649s, 10832 KB] Initializing landmark count heuristic...
[t=0.0052649s, 10832 KB] Generating landmark graph...
[t=0.0052649s, 10832 KB] Building a landmark graph with reasonable orders.
[t=0.0052649s, 10832 KB] Initializing Exploration...
[t=0.0052649s, 11380 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00926609s, 11380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00926609s, 11380 KB] Landmarks generation time: 0.00400119s
[t=0.00926609s, 11380 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00926609s, 11380 KB] 9 edges
[t=0.00926609s, 11380 KB] approx. reasonable orders
[t=0.00926609s, 11380 KB] approx. obedient reasonable orders
[t=0.00926609s, 11380 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00926609s, 11380 KB] Landmarks generation time: 0.00400119s
[t=0.00926609s, 11380 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00926609s, 11380 KB] 9 edges
[t=0.00926609s, 11380 KB] Landmark graph generation time: 0.00400119s
[t=0.00926609s, 11380 KB] Landmark graph contains 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.00926609s, 11380 KB] Landmark graph contains 9 orderings.
[t=0.00926609s, 11380 KB] Simplifying 3526 unary operators... done! [3300 unary operators]
[t=0.00926609s, 11380 KB] time to simplify: 0s
[t=0.00926609s, 11380 KB] Initializing additive heuristic...
[t=0.00926609s, 11380 KB] Initializing FF heuristic...
[t=0.00926609s, 11380 KB] Building successor generator...done!
[t=0.00926609s, 11444 KB] peak memory difference for successor generator creation: 64 KB
[t=0.00926609s, 11444 KB] time for successor generation creation: 0s
[t=0.00926609s, 11444 KB] Variables: 64
[t=0.00926609s, 11444 KB] FactPairs: 157
[t=0.00926609s, 11444 KB] Bytes per state: 12
[t=0.00926609s, 11444 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00926609s, 11444 KB] 6 initial landmarks, 3 goal landmarks
[t=0.00926609s, 11444 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.00926609s, 11444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.00926609s, 11444 KB] g=0, 1 evaluated, 0 expanded
[t=0.00926609s, 11444 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.00926609s, 11444 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.00926609s, 11444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.00926609s, 11444 KB] g=1, 5 evaluated, 4 expanded
[t=0.00926609s, 11444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.00926609s, 11444 KB] g=2, 8 evaluated, 7 expanded
[t=0.00926609s, 11444 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.00926609s, 11444 KB] g=5, 14 evaluated, 13 expanded
[t=0.00926609s, 11444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.00926609s, 11444 KB] g=6, 15 evaluated, 14 expanded
[t=0.00926609s, 11444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.00926609s, 11444 KB] g=7, 16 evaluated, 15 expanded
[t=0.00926609s, 11444 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.00926609s, 11444 KB] g=6, 17 evaluated, 16 expanded
[t=0.00926609s, 11444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.00926609s, 11444 KB] g=8, 18 evaluated, 17 expanded
[t=0.00926609s, 11444 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.00926609s, 11444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.00926609s, 11444 KB] g=9, 20 evaluated, 19 expanded
[t=0.00926609s, 11444 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.00926609s, 11444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.00926609s, 11444 KB] g=10, 21 evaluated, 20 expanded
[t=0.00926609s, 11444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.00926609s, 11444 KB] g=11, 22 evaluated, 21 expanded
[t=0.00926609s, 11444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.00926609s, 11444 KB] g=12, 23 evaluated, 22 expanded
[t=0.0132648s, 11444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0132648s, 11444 KB] g=24, 146 evaluated, 145 expanded
[t=0.0172643s, 11444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0172643s, 11444 KB] g=25, 147 evaluated, 146 expanded
[t=0.0172643s, 11444 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0172643s, 11444 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0172643s, 11444 KB] g=26, 148 evaluated, 147 expanded
[t=0.0172643s, 11444 KB] Solution found!
[t=0.0172643s, 11444 KB] Actual search time: 0.00799825s
load data-0-2 server3 number2 number8 number0 number2 (2)
load data-0-6 server3 number1 number8 number2 number3 (1)
process data-0-6 data-0-2 data-1-9 script1 server3 number2 number8 number3 number5 (13)
process data-1-9 data-0-6 data-2-4 script15 server3 number3 number8 number5 number8 (6)
save data-2-4 number3 server3 (3)
release data-2-4 server3 number3 number8 number5 (0)
release data-1-9 server3 number2 number5 number3 (0)
load data-0-5 server3 number5 number8 number3 number8 (5)
send data-0-5 server3 server1 number5 number16 number0 number5 (30)
release data-0-5 server3 number5 number8 number3 (0)
process data-0-6 data-0-2 data-1-9 script1 server3 number2 number8 number3 number5 (13)
send data-0-2 server3 server1 number2 number16 number5 number7 (12)
process data-0-5 data-0-2 data-1-3 script21 server1 number4 number16 number7 number11 (19)
send data-1-9 server3 server1 number2 number16 number11 number13 (12)
send data-0-2 server1 server2 number2 number8 number0 number2 (8)
send data-1-9 server1 server2 number2 number8 number2 number4 (8)
process data-1-9 data-0-2 data-2-8 script13 server2 number4 number8 number4 number8 (7)
save data-2-8 number4 server2 (4)
release data-0-6 server3 number1 number5 number4 (0)
send data-1-3 server1 server3 number4 number8 number4 number8 (24)
process data-0-2 data-0-5 data-1-7 script19 server1 number3 number16 number13 number16 (13)
release data-1-3 server3 number4 number8 number4 (0)
load data-0-6 server3 number1 number8 number4 number5 (1)
release data-0-5 server1 number5 number16 number11 (0)
process data-1-3 data-1-7 data-2-1 script6 server1 number2 number16 number11 number13 (21)
send data-2-1 server1 server3 number2 number8 number5 number7 (12)
save data-2-1 number2 server3 (2)
[t=0.0172643s, 11444 KB] Plan length: 27 step(s).
[t=0.0172643s, 11444 KB] Plan cost: 216
[t=0.0172643s, 11444 KB] Expanded 148 state(s).
[t=0.0172643s, 11444 KB] Reopened 0 state(s).
[t=0.0172643s, 11444 KB] Evaluated 149 state(s).
[t=0.0172643s, 11444 KB] Evaluations: 298
[t=0.0172643s, 11444 KB] Generated 2618 state(s).
[t=0.0172643s, 11444 KB] Dead ends: 0 state(s).
[t=0.0172643s, 11444 KB] Number of registered states: 149
[t=0.0172643s, 11444 KB] Int hash set load factor: 149/256 = 0.582031
[t=0.0172643s, 11444 KB] Int hash set resizes: 8
[t=0.0172643s, 11444 KB] Search time: 0.00799825s
[t=0.0172643s, 11444 KB] Total time: 0.0172643s
Solution found.
Peak memory: 11444 KB
search exit code: 0

INFO     Planner time: 0.22s
