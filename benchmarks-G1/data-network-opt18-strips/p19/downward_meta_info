INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/data-network-opt18-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/data-network-opt18-strips/p19.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-opt18-strips/p19/output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 61 rules.
Computing model... [0.050s CPU, 0.049s wall-clock]
4286 relevant atoms
7777 auxiliary atoms
12063 final queue length
18926 total queue pushes
Completing instantiation... [0.090s CPU, 0.090s wall-clock]
Instantiating: [0.150s CPU, 0.145s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
126 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.005s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.005s wall-clock]
Translating task: [0.100s CPU, 0.099s wall-clock]
492 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
2 operators removed
0 axioms removed
11 propositions removed
Detecting unreachable propositions: [0.030s CPU, 0.033s wall-clock]
Reordering and filtering variables...
131 of 131 variables necessary.
0 of 7 mutex groups necessary.
3801 of 3801 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.012s wall-clock]
Translator variables: 131
Translator derived variables: 0
Translator facts: 319
Translator goal facts: 3
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 3801
Translator axioms: 0
Translator task size: 23447
Translator peak memory: 43960 KB
Writing output... [0.010s CPU, 0.015s wall-clock]
Done! [0.310s CPU, 0.317s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-opt18-strips/p19/output.sas
INFO     search time limit: 299.63s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-opt18-strips/p19/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-opt18-strips/p19/output.sas
[t=0s, 9880 KB] reading input...
[t=0.00661035s, 11156 KB] done reading input!
[t=0.0106104s, 11552 KB] Initializing landmark count heuristic...
[t=0.0106104s, 11552 KB] Generating landmark graph...
[t=0.0106104s, 11552 KB] Building a landmark graph with reasonable orders.
[t=0.0106104s, 11684 KB] Initializing Exploration...
[t=0.0106104s, 12644 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0146119s, 12776 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0146119s, 12776 KB] Landmarks generation time: 0.0040015s
[t=0.0146119s, 12776 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0146119s, 12776 KB] 9 edges
[t=0.0146119s, 12776 KB] approx. reasonable orders
[t=0.0146119s, 12776 KB] approx. obedient reasonable orders
[t=0.0146119s, 12776 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0146119s, 12776 KB] Landmarks generation time: 0.0040015s
[t=0.0146119s, 12776 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0146119s, 12776 KB] 9 edges
[t=0.0146119s, 12776 KB] Landmark graph generation time: 0.0040015s
[t=0.0146119s, 12776 KB] Landmark graph contains 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0146119s, 12776 KB] Landmark graph contains 9 orderings.
[t=0.0146119s, 12776 KB] Simplifying 7541 unary operators... done! [6755 unary operators]
[t=0.0186109s, 12776 KB] time to simplify: 0.00399905s
[t=0.0186109s, 12776 KB] Initializing additive heuristic...
[t=0.0186109s, 12776 KB] Initializing FF heuristic...
[t=0.0186109s, 12776 KB] Building successor generator...done!
[t=0.0186109s, 12816 KB] peak memory difference for successor generator creation: 40 KB
[t=0.0186109s, 12816 KB] time for successor generation creation: 0s
[t=0.0186109s, 12816 KB] Variables: 131
[t=0.0186109s, 12816 KB] FactPairs: 319
[t=0.0186109s, 12816 KB] Bytes per state: 20
[t=0.0226112s, 12816 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0226112s, 12816 KB] 6 initial landmarks, 3 goal landmarks
[t=0.0226112s, 12816 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0226112s, 12816 KB] g=0, 1 evaluated, 0 expanded
[t=0.0226112s, 12816 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0226112s, 12816 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0226112s, 12816 KB] g=1, 2 evaluated, 1 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0226112s, 12816 KB] g=2, 3 evaluated, 2 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0226112s, 12816 KB] g=3, 4 evaluated, 3 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0226112s, 12816 KB] g=4, 6 evaluated, 5 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0226112s, 12816 KB] g=5, 7 evaluated, 6 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0226112s, 12816 KB] g=6, 9 evaluated, 8 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0226112s, 12816 KB] g=7, 10 evaluated, 9 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0226112s, 12816 KB] g=8, 11 evaluated, 10 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0226112s, 12816 KB] g=9, 13 evaluated, 12 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0226112s, 12816 KB] g=10, 15 evaluated, 14 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0226112s, 12816 KB] g=10, 16 evaluated, 15 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0226112s, 12816 KB] g=12, 20 evaluated, 19 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0226112s, 12816 KB] g=13, 21 evaluated, 20 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.0226112s, 12816 KB] g=14, 28 evaluated, 27 expanded
[t=0.0226112s, 12816 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.0226112s, 12816 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.0226112s, 12816 KB] g=15, 30 evaluated, 29 expanded
[t=0.0226112s, 12816 KB] Solution found!
[t=0.0226112s, 12816 KB] Actual search time: 0s
load data-0-9 server6 number3 number8 number0 number3 (6)
send data-0-9 server6 server1 number3 number16 number0 number3 (60)
load data-0-4 server1 number2 number16 number3 number5 (2)
process data-0-9 data-0-4 data-1-6 script3 server1 number3 number16 number5 number8 (9)
process data-0-4 data-0-9 data-1-7 script2 server1 number3 number16 number8 number11 (12)
send data-1-7 server1 server6 number3 number8 number3 number6 (60)
process data-1-7 data-0-9 data-2-3 script6 server6 number1 number8 number6 number7 (15)
save data-2-3 number1 server6 (2)
process data-0-9 data-0-4 data-1-8 script1 server1 number4 number16 number11 number15 (8)
release data-0-4 server1 number2 number15 number13 (0)
process data-1-7 data-1-8 data-2-2 script11 server1 number3 number16 number13 number16 (11)
send data-1-8 server1 server5 number4 number8 number0 number4 (80)
send data-1-6 server1 server5 number3 number8 number4 number7 (60)
process data-1-6 data-1-8 data-2-5 script5 server5 number1 number8 number7 number8 (24)
save data-2-5 number1 server5 (2)
save data-2-2 number3 server1 (3)
[t=0.0226112s, 12816 KB] Plan length: 16 step(s).
[t=0.0226112s, 12816 KB] Plan cost: 354
[t=0.0226112s, 12816 KB] Expanded 30 state(s).
[t=0.0226112s, 12816 KB] Reopened 0 state(s).
[t=0.0226112s, 12816 KB] Evaluated 31 state(s).
[t=0.0226112s, 12816 KB] Evaluations: 62
[t=0.0226112s, 12816 KB] Generated 1188 state(s).
[t=0.0226112s, 12816 KB] Dead ends: 0 state(s).
[t=0.0226112s, 12816 KB] Number of registered states: 31
[t=0.0226112s, 12816 KB] Int hash set load factor: 31/32 = 0.96875
[t=0.0226112s, 12816 KB] Int hash set resizes: 5
[t=0.0226112s, 12816 KB] Search time: 0s
[t=0.0226112s, 12816 KB] Total time: 0.0226112s
Solution found.
Peak memory: 12816 KB
search exit code: 0

INFO     Planner time: 0.39s
