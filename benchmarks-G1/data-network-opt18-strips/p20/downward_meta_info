INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/data-network-opt18-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/data-network-opt18-strips/p20.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-opt18-strips/p20/output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 61 rules.
Computing model... [0.050s CPU, 0.054s wall-clock]
4651 relevant atoms
8846 auxiliary atoms
13497 final queue length
20957 total queue pushes
Completing instantiation... [0.110s CPU, 0.098s wall-clock]
Instantiating: [0.160s CPU, 0.159s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
140 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.006s wall-clock]
Translating task: [0.110s CPU, 0.106s wall-clock]
514 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
4 operators removed
0 axioms removed
15 propositions removed
Detecting unreachable propositions: [0.040s CPU, 0.036s wall-clock]
Reordering and filtering variables...
143 of 143 variables necessary.
0 of 7 mutex groups necessary.
4118 of 4118 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.013s wall-clock]
Translator variables: 143
Translator derived variables: 0
Translator facts: 343
Translator goal facts: 3
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 4118
Translator axioms: 0
Translator task size: 25509
Translator peak memory: 45264 KB
Writing output... [0.020s CPU, 0.017s wall-clock]
Done! [0.340s CPU, 0.344s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-opt18-strips/p20/output.sas
INFO     search time limit: 299.6s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-opt18-strips/p20/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-opt18-strips/p20/output.sas
[t=0s, 9880 KB] reading input...
[t=0.00799858s, 11316 KB] done reading input!
[t=0.0119995s, 11712 KB] Initializing landmark count heuristic...
[t=0.0119995s, 11712 KB] Generating landmark graph...
[t=0.0119995s, 11712 KB] Building a landmark graph with reasonable orders.
[t=0.0119995s, 11840 KB] Initializing Exploration...
[t=0.0119995s, 12908 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0160009s, 12908 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0160009s, 12908 KB] Landmarks generation time: 0.00400133s
[t=0.0160009s, 12908 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0160009s, 12908 KB] 9 edges
[t=0.0160009s, 12908 KB] approx. reasonable orders
[t=0.0160009s, 12908 KB] approx. obedient reasonable orders
[t=0.0160009s, 12908 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0160009s, 12908 KB] Landmarks generation time: 0.00400133s
[t=0.0160009s, 12908 KB] Discovered 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0160009s, 12908 KB] 9 edges
[t=0.0160009s, 12908 KB] Landmark graph generation time: 0.00400133s
[t=0.0160009s, 12908 KB] Landmark graph contains 12 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0160009s, 12908 KB] Landmark graph contains 9 orderings.
[t=0.0160009s, 12908 KB] Simplifying 8170 unary operators... done! [7794 unary operators]
[t=0.0239988s, 12908 KB] time to simplify: 0.00799797s
[t=0.0239988s, 12908 KB] Initializing additive heuristic...
[t=0.0239988s, 12908 KB] Initializing FF heuristic...
[t=0.0239988s, 12908 KB] Building successor generator...done!
[t=0.0239988s, 12908 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0239988s, 12908 KB] time for successor generation creation: 0s
[t=0.0239988s, 12908 KB] Variables: 143
[t=0.0239988s, 12908 KB] FactPairs: 343
[t=0.0239988s, 12908 KB] Bytes per state: 24
[t=0.0239988s, 12908 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0239988s, 12908 KB] 6 initial landmarks, 3 goal landmarks
[t=0.0239988s, 12908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0239988s, 12908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0239988s, 12908 KB] g=0, 1 evaluated, 0 expanded
[t=0.0239988s, 12908 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0239988s, 12908 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0239988s, 12908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0239988s, 12908 KB] g=1, 2 evaluated, 1 expanded
[t=0.0239988s, 12908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0239988s, 12908 KB] g=2, 3 evaluated, 2 expanded
[t=0.0239988s, 12908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0239988s, 12908 KB] g=3, 4 evaluated, 3 expanded
[t=0.0239988s, 12908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0239988s, 12908 KB] g=4, 6 evaluated, 5 expanded
[t=0.0239988s, 12908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0239988s, 12908 KB] g=5, 8 evaluated, 7 expanded
[t=0.0239988s, 12908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0239988s, 12908 KB] g=6, 10 evaluated, 9 expanded
[t=0.0239988s, 12908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0239988s, 12908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0239988s, 12908 KB] g=7, 11 evaluated, 10 expanded
[t=0.0239988s, 12908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0239988s, 12908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0239988s, 12908 KB] g=8, 12 evaluated, 11 expanded
[t=0.0239988s, 12908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0239988s, 12908 KB] g=9, 13 evaluated, 12 expanded
[t=0.0239988s, 12908 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0239988s, 12908 KB] g=10, 19 evaluated, 18 expanded
[t=0.0239988s, 12908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0239988s, 12908 KB] g=12, 23 evaluated, 22 expanded
[t=0.0239988s, 12908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0239988s, 12908 KB] g=13, 26 evaluated, 25 expanded
[t=0.0239988s, 12908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.0239988s, 12908 KB] g=14, 29 evaluated, 28 expanded
[t=0.0279996s, 12908 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.0279996s, 12908 KB] g=17, 38 evaluated, 37 expanded
[t=0.13999s, 13684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.13999s, 13684 KB] g=15, 1528 evaluated, 1527 expanded
[t=0.13999s, 13684 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.13999s, 13684 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.13999s, 13684 KB] g=16, 1529 evaluated, 1528 expanded
[t=0.13999s, 13684 KB] Solution found!
[t=0.13999s, 13684 KB] Actual search time: 0.115992s
load data-0-4 server2 number5 number8 number0 number5 (10)
send data-0-4 server2 server1 number5 number16 number0 number5 (100)
load data-0-10 server1 number3 number16 number5 number8 (3)
load data-0-1 server2 number1 number8 number5 number6 (2)
send data-0-1 server2 server1 number1 number16 number8 number9 (20)
process data-0-4 data-0-10 data-1-3 script2 server1 number2 number16 number9 number11 (8)
process data-0-1 data-0-10 data-1-8 script15 server1 number1 number16 number11 number12 (5)
process data-1-3 data-0-4 data-2-5 script4 server1 number4 number16 number12 number16 (9)
send data-2-5 server1 server4 number4 number8 number0 number4 (80)
save data-2-5 number4 server4 (8)
release data-0-4 server1 number5 number16 number11 (0)
process data-1-8 data-1-3 data-2-6 script6 server1 number3 number16 number11 number14 (11)
send data-2-6 server1 server7 number3 number8 number0 number3 (60)
save data-2-6 number3 server7 (6)
release data-2-5 server1 number4 number14 number10 (0)
process data-1-3 data-1-8 data-2-7 script5 server1 number3 number16 number10 number13 (9)
save data-2-7 number3 server1 (3)
[t=0.13999s, 13684 KB] Plan length: 17 step(s).
[t=0.13999s, 13684 KB] Plan cost: 334
[t=0.13999s, 13684 KB] Expanded 1529 state(s).
[t=0.13999s, 13684 KB] Reopened 0 state(s).
[t=0.13999s, 13684 KB] Evaluated 1530 state(s).
[t=0.13999s, 13684 KB] Evaluations: 3060
[t=0.13999s, 13684 KB] Generated 75853 state(s).
[t=0.13999s, 13684 KB] Dead ends: 0 state(s).
[t=0.13999s, 13684 KB] Number of registered states: 1530
[t=0.13999s, 13684 KB] Int hash set load factor: 1530/2048 = 0.74707
[t=0.13999s, 13684 KB] Int hash set resizes: 11
[t=0.13999s, 13684 KB] Search time: 0.115992s
[t=0.13999s, 13684 KB] Total time: 0.13999s
Solution found.
Peak memory: 13684 KB
search exit code: 0

INFO     Planner time: 0.54s
