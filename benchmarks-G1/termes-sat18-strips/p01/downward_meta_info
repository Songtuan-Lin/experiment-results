INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/termes-sat18-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/termes-sat18-strips/p01.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-sat18-strips/p01/output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.001s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 52 rules.
Computing model... [0.020s CPU, 0.020s wall-clock]
1224 relevant atoms
3942 auxiliary atoms
5166 final queue length
6287 total queue pushes
Completing instantiation... [0.020s CPU, 0.016s wall-clock]
Instantiating: [0.040s CPU, 0.038s wall-clock]
Computing fact groups...
Finding invariants...
6 initial candidates
Finding invariants: [0.000s CPU, 0.001s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.002s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.018s wall-clock]
181 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
96 operators removed
0 axioms removed
22 propositions removed
Detecting unreachable propositions: [0.000s CPU, 0.007s wall-clock]
Reordering and filtering variables...
17 of 17 variables necessary.
0 of 16 mutex groups necessary.
902 of 902 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.002s wall-clock]
Translator variables: 17
Translator derived variables: 0
Translator facts: 93
Translator goal facts: 16
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 902
Translator axioms: 0
Translator task size: 5300
Translator peak memory: 32436 KB
Writing output... [0.000s CPU, 0.004s wall-clock]
Done! [0.070s CPU, 0.073s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-sat18-strips/p01/output.sas
INFO     search time limit: 299.89s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-sat18-strips/p01/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/termes-sat18-strips/p01/output.sas
[t=0s, 9880 KB] reading input...
[t=0s, 10004 KB] done reading input!
[t=0s, 10400 KB] Initializing landmark count heuristic...
[t=0s, 10400 KB] Generating landmark graph...
[t=0s, 10400 KB] Building a landmark graph with reasonable orders.
[t=0s, 10400 KB] Initializing Exploration...
[t=0s, 10736 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.00399973s, 10736 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00399973s, 10736 KB] Landmarks generation time: 0.00399973s
[t=0.00399973s, 10736 KB] Discovered 30 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.00399973s, 10736 KB] 37 edges
[t=0.00399973s, 10736 KB] approx. reasonable orders
[t=0.00399973s, 10736 KB] approx. obedient reasonable orders
[t=0.00399973s, 10736 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.00399973s, 10736 KB] Landmarks generation time: 0.00399973s
[t=0.00399973s, 10736 KB] Discovered 30 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.00399973s, 10736 KB] 37 edges
[t=0.00399973s, 10736 KB] Landmark graph generation time: 0.00399973s
[t=0.00399973s, 10736 KB] Landmark graph contains 30 landmarks, of which 6 are disjunctive and 0 are conjunctive.
[t=0.00399973s, 10736 KB] Landmark graph contains 37 orderings.
[t=0.00399973s, 10736 KB] Simplifying 1244 unary operators... done! [1238 unary operators]
[t=0.00399973s, 10736 KB] time to simplify: 0s
[t=0.00399973s, 10736 KB] Initializing additive heuristic...
[t=0.00399973s, 10736 KB] Initializing FF heuristic...
[t=0.00399973s, 10736 KB] Building successor generator...done!
[t=0.00399973s, 10736 KB] peak memory difference for successor generator creation: 0 KB
[t=0.00399973s, 10736 KB] time for successor generation creation: 0s
[t=0.00399973s, 10736 KB] Variables: 17
[t=0.00399973s, 10736 KB] FactPairs: 93
[t=0.00399973s, 10736 KB] Bytes per state: 8
[t=0.00399973s, 10736 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.00399973s, 10736 KB] 17 initial landmarks, 16 goal landmarks
[t=0.00399973s, 10736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.00399973s, 10736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.00399973s, 10736 KB] g=0, 1 evaluated, 0 expanded
[t=0.00399973s, 10736 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.00399973s, 10736 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.00399973s, 10736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.00399973s, 10736 KB] g=1, 3 evaluated, 2 expanded
[t=0.00399973s, 10736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.00399973s, 10736 KB] g=2, 9 evaluated, 8 expanded
[t=0.00399973s, 10736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.00399973s, 10736 KB] g=2, 10 evaluated, 9 expanded
[t=0.00399973s, 10736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.00399973s, 10736 KB] g=4, 18 evaluated, 17 expanded
[t=0.00799946s, 10736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.00799946s, 10736 KB] g=5, 33 evaluated, 32 expanded
[t=0.00799946s, 10736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.00799946s, 10736 KB] g=7, 42 evaluated, 41 expanded
[t=0.00799946s, 10736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.00799946s, 10736 KB] g=8, 56 evaluated, 55 expanded
[t=0.00799946s, 10736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.00799946s, 10736 KB] g=26, 209 evaluated, 208 expanded
[t=0.00799946s, 10736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.00799946s, 10736 KB] g=27, 211 evaluated, 210 expanded
[t=0.00799946s, 10736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.00799946s, 10736 KB] g=28, 213 evaluated, 212 expanded
[t=0.012s, 10736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.012s, 10736 KB] g=41, 449 evaluated, 448 expanded
[t=0.012s, 10736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.012s, 10736 KB] g=43, 451 evaluated, 450 expanded
[t=0.012s, 10736 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.012s, 10736 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.012s, 10736 KB] g=45, 453 evaluated, 452 expanded
[t=0.047999s, 10868 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.047999s, 10868 KB] g=83, 2537 evaluated, 2536 expanded
[t=0.0519993s, 10868 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0519993s, 10868 KB] g=103, 2761 evaluated, 2760 expanded
[t=0.0519993s, 10868 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0519993s, 10868 KB] g=107, 2785 evaluated, 2784 expanded
[t=0.795978s, 16420 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.795978s, 16420 KB] g=114, 47676 evaluated, 47675 expanded
[t=0.795978s, 16420 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.795978s, 16420 KB] g=126, 47691 evaluated, 47690 expanded
[t=0.815978s, 16552 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.815978s, 16552 KB] g=126, 49121 evaluated, 49120 expanded
[t=0.831977s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.831977s, 16820 KB] g=131, 50361 evaluated, 50360 expanded
[t=0.831977s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.831977s, 16820 KB] g=137, 50409 evaluated, 50408 expanded
[t=0.839977s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.839977s, 16820 KB] g=158, 50994 evaluated, 50993 expanded
[t=0.839977s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.839977s, 16820 KB] g=158, 51180 evaluated, 51179 expanded
[t=0.839977s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.839977s, 16820 KB] g=159, 51186 evaluated, 51185 expanded
[t=0.839977s, 16820 KB] Solution found!
[t=0.839977s, 16820 KB] Actual search time: 0.835978s
create-block pos-1-0 (1)
place-block pos-1-0 pos-2-0 n0 n1 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-2-1 n0 (1)
move pos-2-1 pos-2-2 n0 (1)
place-block pos-2-2 pos-2-3 n0 n1 (1)
move pos-2-2 pos-2-1 n0 (1)
move-up pos-2-1 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-3-0 n0 (1)
remove-block pos-3-0 pos-2-0 n1 n0 (1)
move pos-3-0 pos-2-0 n0 (1)
move pos-2-0 pos-1-0 n0 (1)
place-block pos-1-0 pos-2-0 n0 n1 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-2-1 n0 (1)
move pos-2-1 pos-2-2 n0 (1)
place-block pos-2-2 pos-2-1 n0 n1 (1)
move-up pos-2-2 n0 pos-2-1 n1 (1)
move pos-2-1 pos-2-0 n1 (1)
move-down pos-2-0 n1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-2-0 n1 (1)
move pos-2-0 pos-2-1 n1 (1)
place-block pos-2-1 pos-2-0 n1 n2 (1)
move-down pos-2-1 n1 pos-2-2 n0 (1)
remove-block pos-2-2 pos-2-1 n1 n0 (1)
move pos-2-2 pos-3-2 n0 (1)
place-block pos-3-2 pos-3-3 n0 n1 (1)
move pos-3-2 pos-2-2 n0 (1)
move pos-2-2 pos-2-1 n0 (1)
move pos-2-1 pos-1-1 n0 (1)
move pos-1-1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move pos-1-0 pos-1-1 n0 (1)
move pos-1-1 pos-2-1 n0 (1)
move pos-2-1 pos-2-2 n0 (1)
move pos-2-2 pos-3-2 n0 (1)
move-up pos-3-2 n0 pos-3-3 n1 (1)
place-block pos-3-3 pos-2-3 n1 n2 (1)
move-down pos-3-3 n1 pos-3-2 n0 (1)
remove-block pos-3-2 pos-3-3 n1 n0 (1)
move pos-3-2 pos-3-1 n0 (1)
move pos-3-1 pos-2-1 n0 (1)
move pos-2-1 pos-1-1 n0 (1)
place-block pos-1-1 pos-2-1 n0 n1 (1)
move pos-1-1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
place-block pos-1-0 pos-1-1 n0 n1 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-1-1 n1 (1)
place-block pos-1-1 pos-2-1 n1 n2 (1)
move-down pos-1-1 n1 pos-1-2 n0 (1)
remove-block pos-1-2 pos-1-1 n1 n0 (1)
place-block pos-1-2 pos-2-2 n0 n1 (1)
move-up pos-1-2 n0 pos-2-2 n1 (1)
move-down pos-2-2 n1 pos-3-2 n0 (1)
remove-block pos-3-2 pos-2-2 n1 n0 (1)
move pos-3-2 pos-3-1 n0 (1)
place-block pos-3-1 pos-3-0 n0 n1 (1)
move pos-3-1 pos-3-2 n0 (1)
move pos-3-2 pos-2-2 n0 (1)
move pos-2-2 pos-1-2 n0 (1)
move pos-1-2 pos-1-1 n0 (1)
move pos-1-1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move pos-1-0 pos-1-1 n0 (1)
move pos-1-1 pos-1-2 n0 (1)
move pos-1-2 pos-2-2 n0 (1)
move pos-2-2 pos-3-2 n0 (1)
place-block pos-3-2 pos-2-2 n0 n1 (1)
move pos-3-2 pos-3-1 n0 (1)
remove-block pos-3-1 pos-3-0 n1 n0 (1)
move pos-3-1 pos-3-2 n0 (1)
move-up pos-3-2 n0 pos-2-2 n1 (1)
move-up pos-2-2 n1 pos-2-1 n2 (1)
place-block pos-2-1 pos-2-0 n2 n3 (1)
move-down pos-2-1 n2 pos-2-2 n1 (1)
remove-block pos-2-2 pos-2-1 n2 n1 (1)
move pos-2-2 pos-2-1 n1 (1)
place-block pos-2-1 pos-2-2 n1 n2 (1)
move-down pos-2-1 n1 pos-1-1 n0 (1)
move pos-1-1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
place-block pos-1-0 pos-1-1 n0 n1 (1)
create-block pos-1-0 (1)
move-up pos-1-0 n0 pos-1-1 n1 (1)
place-block pos-1-1 pos-2-1 n1 n2 (1)
move-down pos-1-1 n1 pos-1-2 n0 (1)
remove-block pos-1-2 pos-1-1 n1 n0 (1)
move pos-1-2 pos-1-1 n0 (1)
place-block pos-1-1 pos-1-2 n0 n1 (1)
move pos-1-1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move pos-1-0 pos-1-1 n0 (1)
move-up pos-1-1 n0 pos-1-2 n1 (1)
move-up pos-1-2 n1 pos-2-2 n2 (1)
place-block pos-2-2 pos-2-1 n2 n3 (1)
move-down pos-2-2 n2 pos-1-2 n1 (1)
move-down pos-1-2 n1 pos-1-1 n0 (1)
move pos-1-1 pos-1-0 n0 (1)
create-block pos-1-0 (1)
move pos-1-0 pos-1-1 n0 (1)
move-up pos-1-1 n0 pos-1-2 n1 (1)
move-up pos-1-2 n1 pos-2-2 n2 (1)
move-up pos-2-2 n2 pos-2-1 n3 (1)
place-block pos-2-1 pos-2-0 n3 n4 (1)
move-down pos-2-1 n3 pos-2-2 n2 (1)
remove-block pos-2-2 pos-2-1 n3 n2 (1)
move-down pos-2-2 n2 pos-1-2 n1 (1)
move-down pos-1-2 n1 pos-1-1 n0 (1)
move pos-1-1 pos-1-0 n0 (1)
destroy-block pos-1-0 (1)
move pos-1-0 pos-1-1 n0 (1)
remove-block pos-1-1 pos-1-2 n1 n0 (1)
move pos-1-1 pos-1-2 n0 (1)
place-block pos-1-2 pos-1-1 n0 n1 (1)
move-up pos-1-2 n0 pos-1-1 n1 (1)
remove-block pos-1-1 pos-2-1 n2 n1 (1)
move-down pos-1-1 n1 pos-1-2 n0 (1)
place-block pos-1-2 pos-1-3 n0 n1 (1)
remove-block pos-1-2 pos-1-1 n1 n0 (1)
move pos-1-2 pos-1-1 n0 (1)
place-block pos-1-1 pos-0-1 n0 n1 (1)
move-up pos-1-1 n0 pos-2-1 n1 (1)
remove-block pos-2-1 pos-2-2 n2 n1 (1)
move-down pos-2-1 n1 pos-1-1 n0 (1)
move pos-1-1 pos-1-0 n0 (1)
destroy-block pos-1-0 (1)
move pos-1-0 pos-1-1 n0 (1)
remove-block pos-1-1 pos-2-1 n1 n0 (1)
move pos-1-1 pos-1-2 n0 (1)
place-block pos-1-2 pos-1-1 n0 n1 (1)
remove-block pos-1-2 pos-2-2 n1 n0 (1)
move pos-1-2 pos-0-2 n0 (1)
place-block pos-0-2 pos-0-3 n0 n1 (1)
move pos-0-2 pos-1-2 n0 (1)
remove-block pos-1-2 pos-1-3 n1 n0 (1)
move pos-1-2 pos-0-2 n0 (1)
place-block pos-0-2 pos-1-2 n0 n1 (1)
remove-block pos-0-2 pos-0-3 n1 n0 (1)
move-up pos-0-2 n0 pos-1-2 n1 (1)
place-block pos-1-2 pos-1-1 n1 n2 (1)
move-down pos-1-2 n1 pos-0-2 n0 (1)
remove-block pos-0-2 pos-1-2 n1 n0 (1)
move-up pos-0-2 n0 pos-0-1 n1 (1)
move-down pos-0-1 n1 pos-0-0 n0 (1)
move pos-0-0 pos-1-0 n0 (1)
destroy-block pos-1-0 (1)
move pos-1-0 pos-0-0 n0 (1)
move-up pos-0-0 n0 pos-0-1 n1 (1)
remove-block pos-0-1 pos-1-1 n2 n1 (1)
move pos-0-1 pos-1-1 n1 (1)
move-down pos-1-1 n1 pos-1-0 n0 (1)
destroy-block pos-1-0 (1)
move pos-1-0 pos-0-0 n0 (1)
remove-block pos-0-0 pos-0-1 n1 n0 (1)
move pos-0-0 pos-1-0 n0 (1)
destroy-block pos-1-0 (1)
remove-block pos-1-0 pos-1-1 n1 n0 (1)
destroy-block pos-1-0 (1)
[t=0.839977s, 16820 KB] Plan length: 162 step(s).
[t=0.839977s, 16820 KB] Plan cost: 162
[t=0.839977s, 16820 KB] Expanded 51190 state(s).
[t=0.839977s, 16820 KB] Reopened 0 state(s).
[t=0.839977s, 16820 KB] Evaluated 51191 state(s).
[t=0.839977s, 16820 KB] Evaluations: 102382
[t=0.839977s, 16820 KB] Generated 196885 state(s).
[t=0.839977s, 16820 KB] Dead ends: 0 state(s).
[t=0.839977s, 16820 KB] Number of registered states: 51191
[t=0.839977s, 16820 KB] Int hash set load factor: 51191/65536 = 0.781113
[t=0.839977s, 16820 KB] Int hash set resizes: 16
[t=0.839977s, 16820 KB] Search time: 0.835978s
[t=0.839977s, 16820 KB] Total time: 0.839977s
Solution found.
Peak memory: 16820 KB
search exit code: 0

INFO     Planner time: 0.96s
