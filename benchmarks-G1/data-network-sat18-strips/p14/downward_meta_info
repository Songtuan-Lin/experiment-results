INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/data-network-sat18-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/data-network-sat18-strips/p14.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-sat18-strips/p14/output.sas
Parsing...
Parsing: [0.000s CPU, 0.003s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 61 rules.
Computing model... [0.110s CPU, 0.110s wall-clock]
9538 relevant atoms
16337 auxiliary atoms
25875 final queue length
41682 total queue pushes
Completing instantiation... [0.220s CPU, 0.220s wall-clock]
Instantiating: [0.340s CPU, 0.338s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.000s CPU, 0.007s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
308 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.010s CPU, 0.010s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.011s wall-clock]
Translating task: [0.210s CPU, 0.212s wall-clock]
1093 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
8 operators removed
0 axioms removed
23 propositions removed
Detecting unreachable propositions: [0.110s CPU, 0.108s wall-clock]
Reordering and filtering variables...
307 of 307 variables necessary.
0 of 7 mutex groups necessary.
8701 of 8701 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.020s CPU, 0.028s wall-clock]
Translator variables: 307
Translator derived variables: 0
Translator facts: 671
Translator goal facts: 8
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 8701
Translator axioms: 0
Translator task size: 53776
Translator peak memory: 63628 KB
Writing output... [0.040s CPU, 0.035s wall-clock]
Done! [0.740s CPU, 0.745s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-sat18-strips/p14/output.sas
INFO     search time limit: 299.2s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-sat18-strips/p14/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-sat18-strips/p14/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0223601s, 12932 KB] done reading input!
[t=0.0223601s, 13332 KB] Initializing landmark count heuristic...
[t=0.0223601s, 13332 KB] Generating landmark graph...
[t=0.0223601s, 13456 KB] Building a landmark graph with reasonable orders.
[t=0.0223601s, 13588 KB] Initializing Exploration...
[t=0.0263615s, 16796 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0503611s, 16820 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0503611s, 16820 KB] Landmarks generation time: 0.028001s
[t=0.0503611s, 16820 KB] Discovered 32 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0503611s, 16820 KB] 24 edges
[t=0.0503611s, 16820 KB] approx. reasonable orders
[t=0.0503611s, 16820 KB] approx. obedient reasonable orders
[t=0.0503611s, 16820 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0503611s, 16820 KB] Landmarks generation time: 0.028001s
[t=0.0503611s, 16820 KB] Discovered 32 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0503611s, 16820 KB] 24 edges
[t=0.0503611s, 16820 KB] Landmark graph generation time: 0.028001s
[t=0.0503611s, 16820 KB] Landmark graph contains 32 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0503611s, 16820 KB] Landmark graph contains 24 orderings.
[t=0.0503611s, 16820 KB] Simplifying 17256 unary operators... done! [16380 unary operators]
[t=0.0583605s, 16820 KB] time to simplify: 0.00799946s
[t=0.0623604s, 16820 KB] Initializing additive heuristic...
[t=0.0623604s, 16820 KB] Initializing FF heuristic...
[t=0.0623604s, 16820 KB] Building successor generator...done!
[t=0.0623604s, 16820 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0623604s, 16820 KB] time for successor generation creation: 0s
[t=0.0623604s, 16820 KB] Variables: 307
[t=0.0623604s, 16820 KB] FactPairs: 671
[t=0.0623604s, 16820 KB] Bytes per state: 44
[t=0.0623604s, 16820 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0623604s, 16820 KB] 16 initial landmarks, 8 goal landmarks
[t=0.0623604s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0623604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0623604s, 16820 KB] g=0, 1 evaluated, 0 expanded
[t=0.0623604s, 16820 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.0623604s, 16820 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 47
[t=0.0623604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 46
[t=0.0623604s, 16820 KB] g=1, 2 evaluated, 1 expanded
[t=0.0623604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0623604s, 16820 KB] g=2, 4 evaluated, 3 expanded
[t=0.0623604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0623604s, 16820 KB] g=3, 8 evaluated, 7 expanded
[t=0.066361s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.066361s, 16820 KB] g=4, 16 evaluated, 15 expanded
[t=0.066361s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.066361s, 16820 KB] g=5, 27 evaluated, 26 expanded
[t=0.066361s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 35
[t=0.066361s, 16820 KB] g=6, 31 evaluated, 30 expanded
[t=0.066361s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.066361s, 16820 KB] g=7, 33 evaluated, 32 expanded
[t=0.066361s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.066361s, 16820 KB] g=8, 35 evaluated, 34 expanded
[t=0.0703605s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0703605s, 16820 KB] g=9, 40 evaluated, 39 expanded
[t=0.0703605s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.0703605s, 16820 KB] g=11, 63 evaluated, 62 expanded
[t=0.0743604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.0743604s, 16820 KB] g=12, 77 evaluated, 76 expanded
[t=0.0743604s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0743604s, 16820 KB] g=13, 79 evaluated, 78 expanded
[t=0.0743604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.0743604s, 16820 KB] g=14, 80 evaluated, 79 expanded
[t=0.0743604s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0743604s, 16820 KB] g=14, 82 evaluated, 81 expanded
[t=0.0743604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.0743604s, 16820 KB] g=15, 83 evaluated, 82 expanded
[t=0.0743604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.0783603s, 16820 KB] g=16, 88 evaluated, 87 expanded
[t=0.0783603s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0783603s, 16820 KB] g=17, 92 evaluated, 91 expanded
[t=0.0783603s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0783603s, 16820 KB] g=18, 100 evaluated, 99 expanded
[t=0.0783603s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0783603s, 16820 KB] g=19, 103 evaluated, 102 expanded
[t=0.0783603s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0783603s, 16820 KB] g=20, 109 evaluated, 108 expanded
[t=0.0863603s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0863603s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0863603s, 16820 KB] g=23, 142 evaluated, 141 expanded
[t=0.0863603s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0863603s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0863603s, 16820 KB] g=24, 144 evaluated, 143 expanded
[t=0.0863603s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0863603s, 16820 KB] g=25, 147 evaluated, 146 expanded
[t=0.0863603s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0863603s, 16820 KB] g=26, 156 evaluated, 155 expanded
[t=0.0903604s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0903604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0903604s, 16820 KB] g=27, 161 evaluated, 160 expanded
[t=0.0903604s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0903604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0903604s, 16820 KB] g=28, 164 evaluated, 163 expanded
[t=0.0903604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0903604s, 16820 KB] g=32, 180 evaluated, 179 expanded
[t=0.0943604s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0943604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0943604s, 16820 KB] g=33, 184 evaluated, 183 expanded
[t=0.0943604s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0943604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0943604s, 16820 KB] g=34, 188 evaluated, 187 expanded
[t=0.0943604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0943604s, 16820 KB] g=36, 194 evaluated, 193 expanded
[t=0.0943604s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0943604s, 16820 KB] g=39, 199 evaluated, 198 expanded
[t=0.0943604s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0943604s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0943604s, 16820 KB] g=40, 202 evaluated, 201 expanded
[t=0.0983603s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0983603s, 16820 KB] g=43, 212 evaluated, 211 expanded
[t=0.130361s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.130361s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.130361s, 16820 KB] g=47, 406 evaluated, 405 expanded
[t=0.130361s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.130361s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.130361s, 16820 KB] g=48, 410 evaluated, 409 expanded
[t=0.15436s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.15436s, 16820 KB] g=53, 561 evaluated, 560 expanded
[t=0.15436s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.15436s, 16820 KB] g=55, 568 evaluated, 567 expanded
[t=0.15436s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.15436s, 16820 KB] g=56, 569 evaluated, 568 expanded
[t=0.15436s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.15436s, 16820 KB] g=56, 571 evaluated, 570 expanded
[t=0.15436s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.15436s, 16820 KB] g=57, 572 evaluated, 571 expanded
[t=0.15836s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.15836s, 16820 KB] g=58, 575 evaluated, 574 expanded
[t=0.15836s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.15836s, 16820 KB] g=59, 576 evaluated, 575 expanded
[t=0.15836s, 16820 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.15836s, 16820 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.15836s, 16820 KB] g=60, 577 evaluated, 576 expanded
[t=0.15836s, 16820 KB] Solution found!
[t=0.15836s, 16820 KB] Actual search time: 0.0959999s
load data-0-15 server3 number5 number8 number0 number5 (10)
send data-0-15 server3 server1 number5 number16 number0 number5 (100)
load data-0-20 server7 number5 number8 number0 number5 (10)
load data-0-18 server2 number3 number8 number0 number3 (6)
load data-0-17 server1 number1 number16 number5 number6 (1)
send data-0-20 server7 server1 number5 number16 number6 number11 (100)
release data-0-15 server3 number5 number5 number0 (0)
load data-0-1 server5 number3 number8 number0 number3 (6)
load data-0-8 server7 number2 number8 number5 number7 (4)
send data-0-18 server2 server3 number3 number8 number0 number3 (6)
process data-0-15 data-0-20 data-1-16 script39 server1 number1 number16 number11 number12 (9)
send data-1-16 server1 server3 number1 number8 number3 number4 (20)
process data-1-16 data-0-18 data-2-4 script8 server3 number4 number8 number4 number8 (14)
send data-0-1 server5 server1 number3 number16 number12 number15 (60)
save data-2-4 number4 server3 (8)
send data-0-8 server7 server2 number2 number8 number3 number5 (4)
process data-0-8 data-0-18 data-1-21 script40 server2 number1 number8 number5 number6 (16)
release data-0-20 server1 number5 number15 number10 (0)
release data-2-4 server3 number4 number8 number4 (0)
send data-1-21 server2 server1 number1 number16 number10 number11 (20)
process data-0-17 data-0-1 data-1-12 script22 server1 number1 number16 number11 number12 (7)
process data-1-12 data-0-1 data-2-3 script15 server1 number4 number16 number12 number16 (9)
send data-2-3 server1 server3 number4 number8 number4 number8 (80)
save data-2-3 number4 server3 (8)
send data-1-21 server1 server4 number1 number8 number0 number1 (20)
send data-1-16 server1 server4 number1 number8 number1 number2 (20)
process data-1-21 data-1-16 data-2-22 script17 server4 number3 number8 number2 number5 (15)
save data-2-22 number3 server4 (6)
release data-0-15 server1 number5 number16 number11 (0)
process data-1-21 data-1-12 data-2-19 script11 server1 number5 number16 number11 number16 (9)
save data-2-19 number5 server1 (5)
release data-0-18 server2 number3 number6 number3 (0)
send data-0-1 server1 server2 number3 number8 number3 number6 (60)
process data-0-1 data-0-8 data-1-5 script24 server2 number2 number8 number6 number8 (20)
release data-0-1 server2 number3 number8 number5 (0)
send data-0-17 server1 server2 number1 number8 number5 number6 (20)
release data-1-21 server2 number1 number6 number5 (0)
process data-1-5 data-0-17 data-2-11 script27 server2 number3 number8 number5 number8 (18)
save data-2-11 number3 server2 (6)
release data-2-11 server2 number3 number8 number5 (0)
release data-1-5 server2 number2 number5 number3 (0)
load data-0-18 server2 number3 number8 number3 number6 (6)
process data-0-17 data-0-18 data-1-2 script23 server2 number2 number8 number6 number8 (23)
release data-0-18 server2 number3 number8 number5 (0)
release data-0-17 server2 number1 number5 number4 (0)
send data-1-12 server1 server2 number1 number8 number4 number5 (20)
release data-1-2 server2 number2 number5 number3 (0)
process data-1-12 data-0-8 data-2-13 script25 server2 number5 number8 number3 number8 (21)
save data-2-13 number5 server2 (10)
release data-2-19 server1 number5 number16 number11 (0)
send data-0-18 server3 server1 number3 number16 number11 number14 (60)
release data-2-13 server2 number5 number8 number3 (0)
process data-0-17 data-0-18 data-1-2 script23 server1 number2 number16 number14 number16 (11)
send data-1-2 server1 server2 number2 number8 number3 number5 (40)
process data-1-2 data-1-12 data-2-10 script41 server2 number1 number8 number5 number6 (25)
save data-2-10 number1 server2 (2)
release data-2-3 server1 number4 number16 number12 (0)
release data-1-2 server2 number2 number6 number4 (0)
process data-1-2 data-0-1 data-2-7 script16 server1 number4 number16 number12 number16 (8)
send data-2-7 server1 server2 number4 number8 number4 number8 (80)
save data-2-7 number4 server2 (8)
[t=0.15836s, 16820 KB] Plan length: 61 step(s).
[t=0.15836s, 16820 KB] Plan cost: 1011
[t=0.15836s, 16820 KB] Expanded 577 state(s).
[t=0.15836s, 16820 KB] Reopened 0 state(s).
[t=0.15836s, 16820 KB] Evaluated 578 state(s).
[t=0.15836s, 16820 KB] Evaluations: 1156
[t=0.15836s, 16820 KB] Generated 37271 state(s).
[t=0.15836s, 16820 KB] Dead ends: 0 state(s).
[t=0.15836s, 16820 KB] Number of registered states: 578
[t=0.15836s, 16820 KB] Int hash set load factor: 578/1024 = 0.564453
[t=0.15836s, 16820 KB] Int hash set resizes: 10
[t=0.15836s, 16820 KB] Search time: 0.0959999s
[t=0.15836s, 16820 KB] Total time: 0.15836s
Solution found.
Peak memory: 16820 KB
search exit code: 0

INFO     Planner time: 0.95s
