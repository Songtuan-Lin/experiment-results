INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/data-network-sat18-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/data-network-sat18-strips/p03.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-sat18-strips/p03/output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 61 rules.
Computing model... [0.060s CPU, 0.066s wall-clock]
5566 relevant atoms
11364 auxiliary atoms
16930 final queue length
25447 total queue pushes
Completing instantiation... [0.110s CPU, 0.116s wall-clock]
Instantiating: [0.180s CPU, 0.188s wall-clock]
Computing fact groups...
Finding invariants...
9 initial candidates
Finding invariants: [0.010s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
224 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.006s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.006s wall-clock]
Translating task: [0.100s CPU, 0.104s wall-clock]
868 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
9 operators removed
0 axioms removed
22 propositions removed
Detecting unreachable propositions: [0.060s CPU, 0.053s wall-clock]
Reordering and filtering variables...
219 of 219 variables necessary.
0 of 4 mutex groups necessary.
4867 of 4867 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.010s CPU, 0.015s wall-clock]
Translator variables: 219
Translator derived variables: 0
Translator facts: 474
Translator goal facts: 9
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 4867
Translator axioms: 0
Translator task size: 29735
Translator peak memory: 47992 KB
Writing output... [0.020s CPU, 0.019s wall-clock]
Done! [0.390s CPU, 0.394s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-sat18-strips/p03/output.sas
INFO     search time limit: 299.56s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-sat18-strips/p03/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/data-network-sat18-strips/p03/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0114558s, 11520 KB] done reading input!
[t=0.0114558s, 11916 KB] Initializing landmark count heuristic...
[t=0.0114558s, 11916 KB] Generating landmark graph...
[t=0.0114558s, 11916 KB] Building a landmark graph with reasonable orders.
[t=0.0114558s, 12048 KB] Initializing Exploration...
[t=0.0154564s, 13688 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0274557s, 13896 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0274557s, 13896 KB] Landmarks generation time: 0.016s
[t=0.0274557s, 13896 KB] Discovered 37 landmarks, of which 1 are disjunctive and 0 are conjunctive.
[t=0.0274557s, 13896 KB] 29 edges
[t=0.0274557s, 13896 KB] approx. reasonable orders
[t=0.0274557s, 13896 KB] approx. obedient reasonable orders
[t=0.0274557s, 13896 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0274557s, 13896 KB] Landmarks generation time: 0.016s
[t=0.0274557s, 13896 KB] Discovered 37 landmarks, of which 1 are disjunctive and 0 are conjunctive.
[t=0.0274557s, 13896 KB] 29 edges
[t=0.0274557s, 13896 KB] Landmark graph generation time: 0.016s
[t=0.0274557s, 13896 KB] Landmark graph contains 37 landmarks, of which 1 are disjunctive and 0 are conjunctive.
[t=0.0274557s, 13896 KB] Landmark graph contains 29 orderings.
[t=0.0274557s, 13896 KB] Simplifying 9631 unary operators... done! [9377 unary operators]
[t=0.0354557s, 13896 KB] time to simplify: 0.00799996s
[t=0.0354557s, 13896 KB] Initializing additive heuristic...
[t=0.0354557s, 13896 KB] Initializing FF heuristic...
[t=0.0354557s, 13896 KB] Building successor generator...done!
[t=0.0354557s, 13896 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0354557s, 13896 KB] time for successor generation creation: 0s
[t=0.0354557s, 13896 KB] Variables: 219
[t=0.0354557s, 13896 KB] FactPairs: 474
[t=0.0354557s, 13896 KB] Bytes per state: 32
[t=0.0354557s, 13896 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0354557s, 13896 KB] 18 initial landmarks, 9 goal landmarks
[t=0.0354557s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0354557s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0354557s, 13896 KB] g=0, 1 evaluated, 0 expanded
[t=0.0354557s, 13896 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0354557s, 13896 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 42
[t=0.0354557s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 40
[t=0.0354557s, 13896 KB] g=1, 2 evaluated, 1 expanded
[t=0.0354557s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 39
[t=0.0354557s, 13896 KB] g=2, 3 evaluated, 2 expanded
[t=0.0354557s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 38
[t=0.0354557s, 13896 KB] g=3, 6 evaluated, 5 expanded
[t=0.0354557s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 37
[t=0.0354557s, 13896 KB] g=4, 8 evaluated, 7 expanded
[t=0.0354557s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 36
[t=0.0354557s, 13896 KB] g=5, 13 evaluated, 12 expanded
[t=0.0354557s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 34
[t=0.0354557s, 13896 KB] g=6, 15 evaluated, 14 expanded
[t=0.0354557s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 33
[t=0.0354557s, 13896 KB] g=7, 20 evaluated, 19 expanded
[t=0.0354557s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.0354557s, 13896 KB] g=8, 22 evaluated, 21 expanded
[t=0.039456s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.039456s, 13896 KB] g=9, 28 evaluated, 27 expanded
[t=0.039456s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=0.039456s, 13896 KB] g=10, 33 evaluated, 32 expanded
[t=0.039456s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.039456s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.039456s, 13896 KB] g=11, 40 evaluated, 39 expanded
[t=0.039456s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.039456s, 13896 KB] g=12, 44 evaluated, 43 expanded
[t=0.039456s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.039456s, 13896 KB] g=13, 53 evaluated, 52 expanded
[t=0.039456s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.039456s, 13896 KB] g=14, 57 evaluated, 56 expanded
[t=0.039456s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.039456s, 13896 KB] g=15, 58 evaluated, 57 expanded
[t=0.039456s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.039456s, 13896 KB] g=15, 63 evaluated, 62 expanded
[t=0.039456s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=0.039456s, 13896 KB] g=16, 65 evaluated, 64 expanded
[t=0.0434559s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.0434559s, 13896 KB] g=17, 71 evaluated, 70 expanded
[t=0.0434559s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.0434559s, 13896 KB] g=18, 81 evaluated, 80 expanded
[t=0.0434559s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.0434559s, 13896 KB] g=18, 90 evaluated, 89 expanded
[t=0.0434559s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.0434559s, 13896 KB] g=20, 106 evaluated, 105 expanded
[t=0.0474559s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.0474559s, 13896 KB] g=21, 111 evaluated, 110 expanded
[t=0.0474559s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0474559s, 13896 KB] g=22, 117 evaluated, 116 expanded
[t=0.0474559s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0474559s, 13896 KB] g=26, 145 evaluated, 144 expanded
[t=0.0514561s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.0514561s, 13896 KB] g=29, 183 evaluated, 182 expanded
[t=0.0514561s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.0514561s, 13896 KB] g=32, 192 evaluated, 191 expanded
[t=0.0514561s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.0514561s, 13896 KB] g=33, 195 evaluated, 194 expanded
[t=0.0514561s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.0514561s, 13896 KB] g=33, 197 evaluated, 196 expanded
[t=0.0554559s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0554559s, 13896 KB] g=34, 200 evaluated, 199 expanded
[t=0.0554559s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0554559s, 13896 KB] g=35, 205 evaluated, 204 expanded
[t=0.0554559s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.0554559s, 13896 KB] g=35, 215 evaluated, 214 expanded
[t=0.0554559s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.0554559s, 13896 KB] g=36, 225 evaluated, 224 expanded
[t=0.0674558s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0674558s, 13896 KB] g=41, 342 evaluated, 341 expanded
[t=0.0714559s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.0714559s, 13896 KB] g=46, 411 evaluated, 410 expanded
[t=0.0754559s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0754559s, 13896 KB] g=48, 443 evaluated, 442 expanded
[t=0.0754559s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0754559s, 13896 KB] g=49, 461 evaluated, 460 expanded
[t=0.0794559s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.0794559s, 13896 KB] g=51, 473 evaluated, 472 expanded
[t=0.0794559s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.0794559s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0794559s, 13896 KB] g=52, 475 evaluated, 474 expanded
[t=0.0794559s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.0794559s, 13896 KB] g=53, 477 evaluated, 476 expanded
[t=0.0794559s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.0794559s, 13896 KB] g=57, 498 evaluated, 497 expanded
[t=0.0834561s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.0834561s, 13896 KB] g=59, 527 evaluated, 526 expanded
[t=0.0834561s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.0834561s, 13896 KB] g=60, 534 evaluated, 533 expanded
[t=0.0834561s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.0834561s, 13896 KB] g=61, 540 evaluated, 539 expanded
[t=0.0874561s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.0874561s, 13896 KB] g=63, 555 evaluated, 554 expanded
[t=0.0874561s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.0874561s, 13896 KB] g=67, 588 evaluated, 587 expanded
[t=0.0874561s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.0874561s, 13896 KB] g=68, 591 evaluated, 590 expanded
[t=0.0874561s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.0874561s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.0874561s, 13896 KB] g=69, 594 evaluated, 593 expanded
[t=0.0874561s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.0874561s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.0874561s, 13896 KB] g=70, 596 evaluated, 595 expanded
[t=0.115456s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.115456s, 13896 KB] g=77, 913 evaluated, 912 expanded
[t=0.115456s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.115456s, 13896 KB] g=78, 915 evaluated, 914 expanded
[t=0.123456s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.123456s, 13896 KB] g=83, 977 evaluated, 976 expanded
[t=0.123456s, 13896 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.123456s, 13896 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.123456s, 13896 KB] g=84, 978 evaluated, 977 expanded
[t=0.123456s, 13896 KB] Solution found!
[t=0.123456s, 13896 KB] Actual search time: 0.088s
load data-0-22 server4 number5 number8 number0 number5 (5)
send data-0-22 server4 server1 number5 number16 number0 number5 (30)
send data-0-22 server1 server2 number5 number8 number0 number5 (20)
load data-0-26 server3 number5 number8 number0 number5 (5)
load data-0-12 server2 number3 number8 number5 number8 (3)
send data-0-26 server3 server1 number5 number16 number5 number10 (30)
load data-0-14 server3 number2 number8 number5 number7 (2)
release data-0-26 server3 number5 number7 number2 (0)
send data-0-14 server3 server1 number2 number16 number10 number12 (12)
load data-0-1 server3 number1 number8 number2 number3 (1)
process data-0-1 data-0-14 data-1-15 script12 server3 number2 number8 number3 number5 (5)
process data-0-14 data-0-1 data-1-25 script23 server3 number1 number8 number5 number6 (7)
process data-0-22 data-0-26 data-1-16 script14 server1 number4 number16 number12 number16 (11)
save data-1-25 number1 server3 (1)
save data-1-16 number4 server1 (20)
release data-0-22 server1 number5 number16 number11 (0)
send data-0-1 server3 server1 number1 number16 number11 number12 (6)
release data-1-15 server3 number2 number6 number4 (0)
process data-0-14 data-0-1 data-1-19 script10 server3 number3 number8 number4 number7 (7)
release data-0-14 server3 number2 number7 number5 (0)
process data-1-19 data-0-1 data-2-4 script19 server3 number3 number8 number5 number8 (12)
save data-2-4 number3 server3 (3)
send data-0-12 server2 server1 number3 number16 number12 number15 (12)
send data-0-12 server1 server4 number3 number8 number5 number8 (18)
release data-0-22 server4 number5 number8 number3 (0)
release data-0-26 server1 number5 number15 number10 (0)
send data-0-1 server1 server4 number1 number8 number3 number4 (6)
load data-0-10 server4 number4 number8 number4 number8 (4)
process data-0-1 data-0-14 data-1-15 script12 server1 number2 number16 number10 number12 (16)
process data-0-1 data-0-14 data-1-23 script22 server1 number4 number16 number12 number16 (22)
release data-0-10 server4 number4 number8 number4 (0)
process data-0-1 data-0-12 data-1-5 script6 server4 number3 number8 number4 number7 (10)
save data-1-5 number3 server4 (3)
release data-0-22 server2 number5 number8 number3 (0)
send data-1-15 server1 server2 number2 number8 number3 number5 (8)
save data-1-15 number2 server2 (2)
release data-1-5 server4 number3 number7 number4 (0)
release data-0-12 server1 number3 number16 number13 (0)
send data-0-1 server1 server2 number1 number8 number5 number6 (4)
send data-0-14 server1 server4 number2 number8 number4 number6 (12)
release data-0-12 server4 number3 number6 number3 (0)
load data-0-10 server4 number4 number8 number3 number7 (4)
release data-0-12 server2 number3 number6 number3 (0)
load data-0-27 server2 number3 number8 number3 number6 (3)
send data-0-27 server2 server1 number3 number16 number13 number16 (12)
release data-1-23 server1 number4 number16 number12 (0)
send data-0-10 server4 server1 number4 number16 number12 number16 (24)
release data-1-16 server1 number4 number16 number12 (0)
process data-0-1 data-0-10 data-1-13 script16 server1 number4 number16 number12 number16 (20)
release data-0-27 server2 number3 number6 number3 (0)
send data-1-13 server1 server2 number4 number8 number3 number7 (16)
save data-1-13 number4 server2 (4)
release data-1-13 server2 number4 number7 number3 (0)
release data-0-10 server4 number4 number7 number3 (0)
process data-0-1 data-0-14 data-1-23 script22 server4 number4 number8 number3 number7 (12)
release data-0-14 server4 number2 number7 number5 (0)
release data-0-27 server1 number3 number16 number13 (0)
process data-0-14 data-0-10 data-1-18 script24 server1 number3 number16 number13 number16 (18)
send data-1-18 server1 server4 number3 number8 number5 number8 (18)
save data-1-18 number3 server4 (3)
release data-1-23 server4 number4 number8 number4 (0)
send data-0-14 server1 server4 number2 number8 number4 number6 (12)
send data-0-14 server1 server2 number2 number8 number3 number5 (8)
release data-1-15 server2 number2 number5 number3 (0)
process data-0-1 data-0-14 data-1-23 script22 server2 number4 number8 number3 number7 (9)
release data-0-14 server2 number2 number7 number5 (0)
release data-1-13 server1 number4 number16 number12 (0)
release data-1-23 server2 number4 number5 number1 (0)
load data-0-27 server2 number3 number8 number1 number4 (3)
send data-0-27 server2 server1 number3 number16 number12 number15 (12)
release data-0-10 server1 number4 number15 number11 (0)
release data-0-27 server2 number3 number4 number1 (0)
load data-0-28 server2 number5 number8 number1 number6 (5)
process data-0-1 data-0-28 data-1-8 script5 server2 number1 number8 number6 number7 (9)
send data-1-8 server2 server1 number1 number16 number11 number12 (4)
process data-0-1 data-0-14 data-1-23 script22 server1 number4 number16 number12 number16 (22)
release data-1-15 server1 number2 number16 number14 (0)
process data-1-23 data-0-27 data-2-21 script26 server1 number1 number16 number14 number15 (25)
send data-2-21 server1 server4 number1 number8 number6 number7 (6)
save data-2-21 number1 server4 (1)
release data-1-23 server1 number4 number15 number11 (0)
process data-1-8 data-0-27 data-2-24 script20 server1 number5 number16 number11 number16 (20)
release data-0-28 server2 number5 number7 number2 (0)
send data-2-24 server1 server2 number5 number8 number2 number7 (20)
save data-2-24 number5 server2 (5)
[t=0.123456s, 13896 KB] Plan length: 85 step(s).
[t=0.123456s, 13896 KB] Plan cost: 592
[t=0.123456s, 13896 KB] Expanded 978 state(s).
[t=0.123456s, 13896 KB] Reopened 0 state(s).
[t=0.123456s, 13896 KB] Evaluated 979 state(s).
[t=0.123456s, 13896 KB] Evaluations: 1958
[t=0.123456s, 13896 KB] Generated 36797 state(s).
[t=0.123456s, 13896 KB] Dead ends: 0 state(s).
[t=0.123456s, 13896 KB] Number of registered states: 979
[t=0.123456s, 13896 KB] Int hash set load factor: 979/1024 = 0.956055
[t=0.123456s, 13896 KB] Int hash set resizes: 10
[t=0.123456s, 13896 KB] Search time: 0.088s
[t=0.123456s, 13896 KB] Total time: 0.123456s
Solution found.
Peak memory: 13896 KB
search exit code: 0

INFO     Planner time: 0.56s
