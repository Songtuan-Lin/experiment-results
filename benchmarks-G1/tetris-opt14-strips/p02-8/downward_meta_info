INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.97s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tetris-opt14-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tetris-opt14-strips/p02-8.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-opt14-strips/p02-8/output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 79 rules.
Computing model... [0.330s CPU, 0.335s wall-clock]
36161 relevant atoms
20968 auxiliary atoms
57129 final queue length
160556 total queue pushes
Completing instantiation... [0.800s CPU, 0.804s wall-clock]
Instantiating: [1.150s CPU, 1.152s wall-clock]
Computing fact groups...
Finding invariants...
14 initial candidates
Finding invariants: [0.020s CPU, 0.019s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
840 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [0.030s CPU, 0.025s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.020s CPU, 0.015s wall-clock]
Translating task: [0.510s CPU, 0.500s wall-clock]
31824 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
3 propositions removed
Detecting unreachable propositions: [0.270s CPU, 0.282s wall-clock]
Reordering and filtering variables...
843 of 843 variables necessary.
0 of 3 mutex groups necessary.
12920 of 12920 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.180s CPU, 0.177s wall-clock]
Translator variables: 843
Translator derived variables: 0
Translator facts: 1776
Translator goal facts: 16
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 12920
Translator axioms: 0
Translator task size: 111211
Translator peak memory: 103320 KB
Writing output... [0.070s CPU, 0.077s wall-clock]
Done! [2.240s CPU, 2.240s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-opt14-strips/p02-8/output.sas
INFO     search time limit: 297.69s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-opt14-strips/p02-8/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-opt14-strips/p02-8/output.sas
[t=0s, 9880 KB] reading input...
[t=0.039863s, 15060 KB] done reading input!
[t=0.0438641s, 15324 KB] Initializing landmark count heuristic...
[t=0.0438641s, 15324 KB] Generating landmark graph...
[t=0.0438641s, 15852 KB] Building a landmark graph with reasonable orders.
[t=0.0438641s, 16248 KB] Initializing Exploration...
[t=0.0518637s, 23736 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.131858s, 25340 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.131858s, 25340 KB] Landmarks generation time: 0.0879936s
[t=0.131858s, 25340 KB] Discovered 34 landmarks, of which 1 are disjunctive and 0 are conjunctive.
[t=0.131858s, 25340 KB] 19 edges
[t=0.131858s, 25340 KB] approx. reasonable orders
[t=0.135857s, 25340 KB] approx. obedient reasonable orders
[t=0.135857s, 25340 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.135857s, 25340 KB] Landmarks generation time: 0.0919933s
[t=0.135857s, 25340 KB] Discovered 34 landmarks, of which 1 are disjunctive and 0 are conjunctive.
[t=0.135857s, 25340 KB] 19 edges
[t=0.135857s, 25340 KB] Landmark graph generation time: 0.0919933s
[t=0.135857s, 25340 KB] Landmark graph contains 34 landmarks, of which 1 are disjunctive and 0 are conjunctive.
[t=0.135857s, 25340 KB] Landmark graph contains 19 orderings.
[t=0.135857s, 25340 KB] Simplifying 57560 unary operators... done! [41528 unary operators]
[t=0.155856s, 25340 KB] time to simplify: 0.019999s
[t=0.155856s, 25340 KB] Initializing additive heuristic...
[t=0.155856s, 25340 KB] Initializing FF heuristic...
[t=0.155856s, 25340 KB] Building successor generator...done!
[t=0.159861s, 25340 KB] peak memory difference for successor generator creation: 0 KB
[t=0.159861s, 25340 KB] time for successor generation creation: 0.00400443s
[t=0.159861s, 25340 KB] Variables: 843
[t=0.159861s, 25340 KB] FactPairs: 1776
[t=0.159861s, 25340 KB] Bytes per state: 108
[t=0.159861s, 25340 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.159861s, 25340 KB] 22 initial landmarks, 16 goal landmarks
[t=0.159861s, 25340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.159861s, 25340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.159861s, 25340 KB] g=0, 1 evaluated, 0 expanded
[t=0.159861s, 25340 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.159861s, 25340 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.159861s, 25340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.159861s, 25340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.159861s, 25340 KB] g=1, 2 evaluated, 1 expanded
[t=0.159861s, 25340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.159861s, 25340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.159861s, 25340 KB] g=2, 3 evaluated, 2 expanded
[t=0.167857s, 25340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.167857s, 25340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.167857s, 25340 KB] g=5, 35 evaluated, 34 expanded
[t=0.167857s, 25340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.167857s, 25340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.167857s, 25340 KB] g=6, 37 evaluated, 36 expanded
[t=0.27185s, 25340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.27185s, 25340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.27185s, 25340 KB] g=13, 667 evaluated, 666 expanded
[t=0.299851s, 25340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.299851s, 25340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.299851s, 25340 KB] g=21, 830 evaluated, 829 expanded
[t=0.515836s, 25340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.515836s, 25340 KB] g=24, 2176 evaluated, 2175 expanded
[t=0.519842s, 25340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.519842s, 25340 KB] g=25, 2177 evaluated, 2176 expanded
[t=0.519842s, 25340 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.519842s, 25340 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.519842s, 25340 KB] g=26, 2178 evaluated, 2177 expanded
[t=0.775821s, 25340 KB] Solution found!
[t=0.775821s, 25340 KB] Actual search time: 0.61596s
move_two f2-1f f3-1f f4-1f straight0 (2)
move_two f3-1f f4-1f f4-0f straight0 (2)
move_square f3-2f f3-1f square2 (1)
move_l_down f1-2f f2-2f f2-3f f3-2f f3-3f rightl0 (3)
move_l_down f2-2f f3-2f f3-3f f4-2f f4-3f rightl0 (3)
move_l_down f3-2f f4-2f f4-3f f5-2f f5-3f rightl0 (3)
move_square f2-0f f2-1f square0 (1)
move_l_right f0-0f f1-0f f1-1f f0-1f f1-2f f0-2f rightl1 (3)
move_l_right f0-1f f1-1f f1-2f f0-2f f1-3f f0-3f rightl1 (3)
move_l_down f0-2f f1-2f f1-3f f2-2f f2-3f rightl1 (3)
move_l_down f1-2f f2-2f f2-3f f3-2f f3-3f rightl1 (3)
move_two f4-1f f4-0f f5-0f straight0 (2)
move_square f3-1f f4-1f square2 (1)
move_l_up f2-2f f3-2f f3-3f f1-2f f2-3f f1-3f rightl1 (3)
move_l_up f1-2f f2-2f f2-3f f0-2f f1-3f f0-3f rightl1 (3)
move_l_left f0-2f f1-2f f1-3f f0-1f f1-1f rightl1 (3)
move_square f2-1f f2-0f square0 (1)
move_l_down f0-1f f1-1f f1-2f f2-1f f2-2f rightl1 (3)
move_l_down f1-1f f2-1f f2-2f f3-1f f3-2f rightl1 (3)
move_two f4-0f f5-0f f5-1f straight0 (2)
move_square f3-0f f4-0f square1 (1)
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl0 (3)
move_l_right f2-1f f3-1f f3-2f f2-2f f3-3f f2-3f rightl1 (3)
move_l_down f2-2f f3-2f f3-3f f4-2f f4-3f rightl1 (3)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl0 (3)
move_l_down f3-2f f4-2f f4-3f f5-2f f5-3f rightl1 (3)
move_two f5-0f f5-1f f6-1f straight0 (2)
move_square f2-0f f3-0f square0 (1)
move_square f4-0f f5-0f square1 (1)
move_square f3-0f f4-0f square0 (1)
[t=0.775821s, 25340 KB] Plan length: 30 step(s).
[t=0.775821s, 25340 KB] Plan cost: 69
[t=0.775821s, 25340 KB] Expanded 3824 state(s).
[t=0.775821s, 25340 KB] Reopened 0 state(s).
[t=0.775821s, 25340 KB] Evaluated 3825 state(s).
[t=0.775821s, 25340 KB] Evaluations: 7650
[t=0.775821s, 25340 KB] Generated 43181 state(s).
[t=0.775821s, 25340 KB] Dead ends: 0 state(s).
[t=0.775821s, 25340 KB] Number of registered states: 3825
[t=0.775821s, 25340 KB] Int hash set load factor: 3825/4096 = 0.933838
[t=0.775821s, 25340 KB] Int hash set resizes: 12
[t=0.775821s, 25340 KB] Search time: 0.61596s
[t=0.775821s, 25340 KB] Total time: 0.775821s
Solution found.
Peak memory: 25340 KB
search exit code: 0

INFO     Planner time: 3.1s
