INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tetris-opt14-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tetris-opt14-strips/p03-10.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-opt14-strips/p03-10/output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 79 rules.
Computing model... [0.690s CPU, 0.687s wall-clock]
92305 relevant atoms
34164 auxiliary atoms
126469 final queue length
393616 total queue pushes
Completing instantiation... [1.910s CPU, 1.911s wall-clock]
Instantiating: [2.630s CPU, 2.624s wall-clock]
Computing fact groups...
Finding invariants...
14 initial candidates
Finding invariants: [0.050s CPU, 0.047s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
1980 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.004s wall-clock]
Computing fact groups: [0.060s CPU, 0.062s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.040s CPU, 0.036s wall-clock]
Translating task: [1.210s CPU, 1.208s wall-clock]
81420 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [0.860s CPU, 0.857s wall-clock]
Reordering and filtering variables...
1982 of 1982 variables necessary.
0 of 2 mutex groups necessary.
32588 of 32588 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.650s CPU, 0.657s wall-clock]
Translator variables: 1982
Translator derived variables: 0
Translator facts: 4040
Translator goal facts: 20
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 32588
Translator axioms: 0
Translator task size: 282302
Translator peak memory: 217668 KB
Writing output... [0.200s CPU, 0.193s wall-clock]
Done! [5.660s CPU, 5.654s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-opt14-strips/p03-10/output.sas
INFO     search time limit: 294.28s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-opt14-strips/p03-10/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-opt14-strips/p03-10/output.sas
[t=0s, 9880 KB] reading input...
[t=0.114483s, 22972 KB] done reading input!
[t=0.118484s, 23228 KB] Initializing landmark count heuristic...
[t=0.118484s, 23228 KB] Generating landmark graph...
[t=0.118484s, 24432 KB] Building a landmark graph with reasonable orders.
[t=0.122484s, 25352 KB] Initializing Exploration...
[t=0.138485s, 51200 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.422485s, 53496 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.422485s, 53496 KB] Landmarks generation time: 0.308001s
[t=0.426485s, 53496 KB] Discovered 40 landmarks, of which 1 are disjunctive and 0 are conjunctive.
[t=0.426485s, 53496 KB] 21 edges
[t=0.426485s, 53496 KB] approx. reasonable orders
[t=0.426485s, 53496 KB] approx. obedient reasonable orders
[t=0.426485s, 53496 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.426485s, 53496 KB] Landmarks generation time: 0.308001s
[t=0.426485s, 53496 KB] Discovered 40 landmarks, of which 1 are disjunctive and 0 are conjunctive.
[t=0.426485s, 53496 KB] 21 edges
[t=0.426485s, 53496 KB] Landmark graph generation time: 0.308001s
[t=0.426485s, 53496 KB] Landmark graph contains 40 landmarks, of which 1 are disjunctive and 0 are conjunctive.
[t=0.426485s, 53496 KB] Landmark graph contains 21 orderings.
[t=0.434484s, 53496 KB] Simplifying 146624 unary operators... done! [105104 unary operators]
[t=0.490484s, 53496 KB] time to simplify: 0.056s
[t=0.490484s, 53496 KB] Initializing additive heuristic...
[t=0.490484s, 53496 KB] Initializing FF heuristic...
[t=0.490484s, 53496 KB] Building successor generator...done!
[t=0.498483s, 53496 KB] peak memory difference for successor generator creation: 0 KB
[t=0.498483s, 53496 KB] time for successor generation creation: 0.00799925s
[t=0.498483s, 53496 KB] Variables: 1982
[t=0.498483s, 53496 KB] FactPairs: 4040
[t=0.498483s, 53496 KB] Bytes per state: 252
[t=0.498483s, 53496 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.498483s, 53496 KB] 25 initial landmarks, 20 goal landmarks
[t=0.498483s, 53496 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.498483s, 53496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.498483s, 53496 KB] g=0, 1 evaluated, 0 expanded
[t=0.502484s, 53496 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.502484s, 53496 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.502484s, 53496 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.502484s, 53496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.502484s, 53496 KB] g=1, 3 evaluated, 2 expanded
[t=0.502484s, 53496 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.502484s, 53496 KB] g=3, 7 evaluated, 6 expanded
[t=0.514483s, 53496 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.514483s, 53496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.514483s, 53496 KB] g=6, 32 evaluated, 31 expanded
[t=0.522483s, 53496 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.522483s, 53496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.522483s, 53496 KB] g=8, 47 evaluated, 46 expanded
[t=0.618483s, 53496 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.618483s, 53496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.618483s, 53496 KB] g=14, 276 evaluated, 275 expanded
[t=1.39048s, 53496 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=1.39048s, 53496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=1.39048s, 53496 KB] g=25, 2078 evaluated, 2077 expanded
[t=1.39448s, 53496 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=1.39448s, 53496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=1.39448s, 53496 KB] g=26, 2079 evaluated, 2078 expanded
[t=2.55445s, 53496 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=2.55445s, 53496 KB] g=34, 4988 evaluated, 4987 expanded
[t=2.56245s, 53496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=2.56245s, 53496 KB] g=37, 5014 evaluated, 5013 expanded
[t=2.56245s, 53496 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=2.56245s, 53496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=2.56245s, 53496 KB] g=38, 5015 evaluated, 5014 expanded
[t=2.88245s, 53496 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=2.88245s, 53496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=2.88245s, 53496 KB] g=41, 5843 evaluated, 5842 expanded
[t=3.31045s, 53496 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=3.31045s, 53496 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=3.31045s, 53496 KB] g=47, 7018 evaluated, 7017 expanded
[t=3.44645s, 53496 KB] Solution found!
[t=3.44645s, 53496 KB] Actual search time: 2.94797s
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl0 (3)
move_l_right f0-1f f1-1f f1-2f f0-2f f1-3f f0-3f rightl1 (3)
move_two f0-0f f1-0f f1-1f straight0 (2)
move_l_down f2-2f f3-2f f3-3f f4-2f f4-3f rightl3 (3)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl0 (3)
move_l_down f3-2f f4-2f f4-3f f5-2f f5-3f rightl3 (3)
move_l_left f4-2f f5-2f f5-3f f4-1f f5-1f rightl3 (3)
move_square f4-0f f5-0f square1 (1)
move_two f1-0f f1-1f f0-1f straight0 (2)
move_l_right f4-1f f5-1f f5-2f f4-2f f5-3f f4-3f rightl3 (3)
move_l_down f2-0f f3-0f f3-1f f4-0f f4-1f rightl2 (3)
move_square f2-1f f2-0f square0 (1)
move_l_down f6-2f f7-2f f7-3f f8-2f f8-3f rightl0 (3)
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl3 (3)
move_two f1-1f f0-1f f0-0f straight0 (2)
move_square f2-0f f1-0f square0 (1)
move_l_up f3-0f f4-0f f4-1f f2-0f f3-1f f2-1f rightl2 (3)
move_l_right f2-0f f3-0f f3-1f f2-1f f3-2f f2-2f rightl2 (3)
move_square f1-0f f1-1f square0 (1)
move_two f0-1f f0-0f f1-0f straight0 (2)
move_two f0-0f f1-0f f2-0f straight0 (2)
move_two f1-0f f2-0f f3-0f straight0 (2)
move_two f2-0f f3-0f f4-0f straight0 (2)
move_two f3-0f f4-0f f4-1f straight0 (2)
move_two f4-0f f4-1f f5-1f straight0 (2)
move_two f4-1f f5-1f f6-1f straight0 (2)
move_l_down f0-2f f1-2f f1-3f f2-2f f2-3f rightl1 (3)
move_l_down f2-1f f3-1f f3-2f f4-1f f4-2f rightl2 (3)
move_l_down f1-2f f2-2f f2-3f f3-2f f3-3f rightl1 (3)
move_l_left f3-1f f4-1f f4-2f f3-0f f4-0f rightl2 (3)
move_l_down f2-2f f3-2f f3-3f f4-2f f4-3f rightl1 (3)
move_square f5-0f f6-0f square1 (1)
move_two f5-1f f6-1f f7-1f straight0 (2)
move_l_down f3-0f f4-0f f4-1f f5-0f f5-1f rightl2 (3)
move_l_left f3-2f f4-2f f4-3f f3-1f f4-1f rightl1 (3)
move_square f6-0f f7-0f square1 (1)
move_two f6-1f f7-1f f8-1f straight0 (2)
move_l_down f4-0f f5-0f f5-1f f6-0f f6-1f rightl2 (3)
move_l_down f7-2f f8-2f f8-3f f9-2f f9-3f rightl0 (3)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl3 (3)
move_l_down f3-1f f4-1f f4-2f f5-1f f5-2f rightl1 (3)
move_two f7-1f f8-1f f8-0f straight0 (2)
move_two f8-1f f8-0f f9-0f straight0 (2)
move_l_left f8-2f f9-2f f9-3f f8-1f f9-1f rightl0 (3)
move_l_down f6-2f f7-2f f7-3f f8-2f f8-3f rightl3 (3)
move_l_right f4-1f f5-1f f5-2f f4-2f f5-3f f4-3f rightl1 (3)
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl1 (3)
move_square f1-1f f2-1f square0 (1)
move_square f2-1f f3-1f square0 (1)
move_square f3-1f f4-1f square0 (1)
move_square f4-1f f5-1f square0 (1)
[t=3.44645s, 53496 KB] Plan length: 51 step(s).
[t=3.44645s, 53496 KB] Plan cost: 119
[t=3.44645s, 53496 KB] Expanded 7380 state(s).
[t=3.44645s, 53496 KB] Reopened 0 state(s).
[t=3.44645s, 53496 KB] Evaluated 7381 state(s).
[t=3.44645s, 53496 KB] Evaluations: 14762
[t=3.44645s, 53496 KB] Generated 86376 state(s).
[t=3.44645s, 53496 KB] Dead ends: 0 state(s).
[t=3.44645s, 53496 KB] Number of registered states: 7381
[t=3.44645s, 53496 KB] Int hash set load factor: 7381/16384 = 0.4505
[t=3.44645s, 53496 KB] Int hash set resizes: 14
[t=3.44645s, 53496 KB] Search time: 2.94797s
[t=3.44645s, 53496 KB] Total time: 3.44645s
Solution found.
Peak memory: 53496 KB
search exit code: 0

INFO     Planner time: 9.2s
