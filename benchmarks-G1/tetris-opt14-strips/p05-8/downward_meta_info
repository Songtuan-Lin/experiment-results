INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.99s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tetris-opt14-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tetris-opt14-strips/p05-8.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-opt14-strips/p05-8/output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 79 rules.
Computing model... [0.500s CPU, 0.503s wall-clock]
70893 relevant atoms
26456 auxiliary atoms
97349 final queue length
302653 total queue pushes
Completing instantiation... [1.400s CPU, 1.406s wall-clock]
Instantiating: [1.930s CPU, 1.929s wall-clock]
Computing fact groups...
Finding invariants...
14 initial candidates
Finding invariants: [0.030s CPU, 0.036s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1440 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.003s wall-clock]
Computing fact groups: [0.040s CPU, 0.047s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.060s CPU, 0.060s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.020s CPU, 0.027s wall-clock]
Translating task: [0.930s CPU, 0.934s wall-clock]
62240 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
4 propositions removed
Detecting unreachable propositions: [0.480s CPU, 0.480s wall-clock]
Reordering and filtering variables...
1444 of 1444 variables necessary.
0 of 4 mutex groups necessary.
24928 of 24928 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.430s CPU, 0.425s wall-clock]
Translator variables: 1444
Translator derived variables: 0
Translator facts: 3008
Translator goal facts: 16
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 24928
Translator axioms: 0
Translator task size: 215860
Translator peak memory: 174904 KB
Writing output... [0.150s CPU, 0.154s wall-clock]
Done! [4.070s CPU, 4.069s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-opt14-strips/p05-8/output.sas
INFO     search time limit: 295.88s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-opt14-strips/p05-8/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-opt14-strips/p05-8/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0869147s, 19872 KB] done reading input!
[t=0.0869147s, 20128 KB] Initializing landmark count heuristic...
[t=0.0869147s, 20128 KB] Generating landmark graph...
[t=0.0909154s, 21068 KB] Building a landmark graph with reasonable orders.
[t=0.0909154s, 21868 KB] Initializing Exploration...
[t=0.102915s, 36648 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.26291s, 39596 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.26291s, 39596 KB] Landmarks generation time: 0.171995s
[t=0.26291s, 39596 KB] Discovered 33 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.26291s, 39596 KB] 17 edges
[t=0.26291s, 39596 KB] approx. reasonable orders
[t=0.26291s, 39596 KB] approx. obedient reasonable orders
[t=0.26291s, 39596 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.26291s, 39596 KB] Landmarks generation time: 0.175995s
[t=0.26291s, 39596 KB] Discovered 33 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.26291s, 39596 KB] 17 edges
[t=0.26291s, 39596 KB] Landmark graph generation time: 0.175995s
[t=0.26291s, 39596 KB] Landmark graph contains 33 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.26291s, 39596 KB] Landmark graph contains 17 orderings.
[t=0.270909s, 39596 KB] Simplifying 112096 unary operators... done! [80032 unary operators]
[t=0.310909s, 39596 KB] time to simplify: 0.0399995s
[t=0.310909s, 39596 KB] Initializing additive heuristic...
[t=0.310909s, 39596 KB] Initializing FF heuristic...
[t=0.310909s, 39596 KB] Building successor generator...done!
[t=0.318909s, 39596 KB] peak memory difference for successor generator creation: 0 KB
[t=0.318909s, 39596 KB] time for successor generation creation: 0.00799996s
[t=0.318909s, 39596 KB] Variables: 1444
[t=0.318909s, 39596 KB] FactPairs: 3008
[t=0.318909s, 39596 KB] Bytes per state: 184
[t=0.318909s, 39596 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.318909s, 39596 KB] 21 initial landmarks, 16 goal landmarks
[t=0.318909s, 39596 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.318909s, 39596 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.318909s, 39596 KB] g=0, 1 evaluated, 0 expanded
[t=0.318909s, 39596 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.318909s, 39596 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.318909s, 39596 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.318909s, 39596 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.318909s, 39596 KB] g=1, 2 evaluated, 1 expanded
[t=0.318909s, 39596 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.318909s, 39596 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.318909s, 39596 KB] g=2, 3 evaluated, 2 expanded
[t=0.386909s, 39596 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.386909s, 39596 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.386909s, 39596 KB] g=11, 215 evaluated, 214 expanded
[t=0.434909s, 39596 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.434909s, 39596 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.434909s, 39596 KB] g=16, 375 evaluated, 374 expanded
[t=0.466909s, 39596 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.466909s, 39596 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.466909s, 39596 KB] g=21, 478 evaluated, 477 expanded
[t=0.466909s, 39596 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.466909s, 39596 KB] g=22, 479 evaluated, 478 expanded
[t=5.58286s, 39596 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=5.58286s, 39596 KB] g=31, 18429 evaluated, 18428 expanded
[t=6.63484s, 40564 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=6.63484s, 40564 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=6.63484s, 40564 KB] g=33, 22338 evaluated, 22337 expanded
[t=7.64684s, 42160 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=7.64684s, 42160 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=7.64684s, 42160 KB] g=36, 26370 evaluated, 26369 expanded
[t=95.6676s, 162400 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=95.6676s, 162400 KB] g=50, 340962 evaluated, 340961 expanded
[t=96.5676s, 163728 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=96.5676s, 163728 KB] g=73, 344337 evaluated, 344336 expanded
[t=96.8836s, 164136 KB] Solution found!
[t=96.8836s, 164136 KB] Actual search time: 96.5647s
move_l_down f3-0f f4-0f f4-1f f5-0f f5-1f rightl3 (3)
move_l_down f3-2f f4-2f f4-3f f5-2f f5-3f rightl1 (3)
move_square f0-2f f0-3f square1 (1)
move_l_right f0-1f f1-1f f1-2f f0-2f f1-3f f0-3f rightl2 (3)
move_square f2-2f f2-3f square2 (1)
move_l_right f1-0f f2-0f f2-1f f1-1f f2-2f f1-2f rightl0 (3)
move_square f3-1f f3-0f square3 (1)
move_l_down f1-1f f2-1f f2-2f f3-1f f3-2f rightl0 (3)
move_square f2-3f f2-2f square2 (1)
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl1 (3)
move_l_down f2-1f f3-1f f3-2f f4-1f f4-2f rightl0 (3)
move_l_left f0-2f f1-2f f1-3f f0-1f f1-1f rightl2 (3)
move_square f2-2f f2-1f square2 (1)
move_square f2-1f f2-0f square2 (1)
move_l_down f4-0f f5-0f f5-1f f6-0f f6-1f rightl3 (3)
move_square f3-0f f4-0f square3 (1)
move_l_right f0-1f f1-1f f1-2f f0-2f f1-3f f0-3f rightl2 (3)
move_l_down f0-2f f1-2f f1-3f f2-2f f2-3f rightl2 (3)
move_l_down f1-2f f2-2f f2-3f f3-2f f3-3f rightl2 (3)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl1 (3)
move_l_down f3-1f f4-1f f4-2f f5-1f f5-2f rightl0 (3)
move_l_down f2-2f f3-2f f3-3f f4-2f f4-3f rightl2 (3)
move_l_down f5-0f f6-0f f6-1f f7-0f f7-1f rightl3 (3)
move_square f2-0f f3-0f square2 (1)
move_square f4-0f f5-0f square3 (1)
move_square f3-0f f4-0f square2 (1)
move_square f0-0f f0-1f square0 (1)
move_square f0-1f f0-2f square0 (1)
move_square f0-3f f1-3f square1 (1)
move_square f0-2f f0-3f square0 (1)
move_square f1-3f f2-3f square1 (1)
move_square f0-3f f1-3f square0 (1)
move_l_up f3-2f f4-2f f4-3f f2-2f f3-3f f2-3f rightl2 (3)
move_l_left f2-2f f3-2f f3-3f f2-1f f3-1f rightl2 (3)
move_l_left f2-1f f3-1f f3-2f f2-0f f3-0f rightl2 (3)
move_l_up f2-0f f3-0f f3-1f f1-0f f2-1f f1-1f rightl2 (3)
move_l_right f1-0f f2-0f f2-1f f1-1f f2-2f f1-2f rightl2 (3)
move_square f2-3f f3-3f square1 (1)
move_square f3-3f f4-3f square1 (1)
move_square f1-3f f2-3f square0 (1)
move_square f2-3f f3-3f square0 (1)
move_l_right f1-1f f2-1f f2-2f f1-2f f2-3f f1-3f rightl2 (3)
move_square f3-3f f3-2f square0 (1)
move_square f3-2f f4-2f square0 (1)
move_square f4-3f f5-3f square1 (1)
move_square f4-2f f4-3f square0 (1)
move_square f5-3f f6-3f square1 (1)
move_l_right f4-1f f5-1f f5-2f f4-2f f5-3f f4-3f rightl0 (3)
move_square f4-0f f4-1f square2 (1)
move_square f4-1f f5-1f square2 (1)
move_l_down f1-2f f2-2f f2-3f f3-2f f3-3f rightl2 (3)
move_l_left f2-2f f3-2f f3-3f f2-1f f3-1f rightl2 (3)
move_l_left f2-1f f3-1f f3-2f f2-0f f3-0f rightl2 (3)
move_l_down f2-0f f3-0f f3-1f f4-0f f4-1f rightl2 (3)
move_square f5-1f f6-1f square2 (1)
move_l_up f3-0f f4-0f f4-1f f2-0f f3-1f f2-1f rightl2 (3)
move_l_left f4-2f f5-2f f5-3f f4-1f f5-1f rightl0 (3)
move_square f4-3f f5-3f square0 (1)
move_l_right f2-0f f3-0f f3-1f f2-1f f3-2f f2-2f rightl2 (3)
move_l_right f2-1f f3-1f f3-2f f2-2f f3-3f f2-3f rightl2 (3)
move_l_down f2-2f f3-2f f3-3f f4-2f f4-3f rightl2 (3)
move_square f5-0f f4-0f square3 (1)
move_square f4-0f f3-0f square3 (1)
move_l_left f4-1f f5-1f f5-2f f4-0f f5-0f rightl0 (3)
move_l_left f3-2f f4-2f f4-3f f3-1f f4-1f rightl2 (3)
move_square f5-3f f4-3f square0 (1)
move_square f4-3f f3-3f square0 (1)
move_l_right f3-1f f4-1f f4-2f f3-2f f4-3f f3-3f rightl2 (3)
move_l_down f3-2f f4-2f f4-3f f5-2f f5-3f rightl2 (3)
move_square f3-3f f4-3f square0 (1)
move_square f3-0f f3-1f square3 (1)
move_square f3-1f f4-1f square3 (1)
[t=96.8836s, 164136 KB] Plan length: 72 step(s).
[t=96.8836s, 164136 KB] Plan cost: 144
[t=96.8836s, 164136 KB] Expanded 345546 state(s).
[t=96.8836s, 164136 KB] Reopened 0 state(s).
[t=96.8836s, 164136 KB] Evaluated 345547 state(s).
[t=96.8836s, 164136 KB] Evaluations: 691094
[t=96.8836s, 164136 KB] Generated 4000184 state(s).
[t=96.8836s, 164136 KB] Dead ends: 0 state(s).
[t=96.8836s, 164136 KB] Number of registered states: 345547
[t=96.8836s, 164136 KB] Int hash set load factor: 345547/524288 = 0.659079
[t=96.8836s, 164136 KB] Int hash set resizes: 19
[t=96.8836s, 164136 KB] Search time: 96.5647s
[t=96.8836s, 164136 KB] Total time: 96.8836s
Solution found.
Peak memory: 164136 KB
search exit code: 0

INFO     Planner time: 1e+02s
