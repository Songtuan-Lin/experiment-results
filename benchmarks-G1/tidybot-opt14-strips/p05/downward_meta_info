INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tidybot-opt14-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tidybot-opt14-strips/p05.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt14-strips/p05/output.sas
Parsing...
Parsing: [0.010s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.013s wall-clock]
Preparing model... [0.010s CPU, 0.004s wall-clock]
Generated 400 rules.
Computing model... [0.350s CPU, 0.352s wall-clock]
30417 relevant atoms
31996 auxiliary atoms
62413 final queue length
160620 total queue pushes
Completing instantiation... [1.320s CPU, 1.319s wall-clock]
Instantiating: [1.700s CPU, 1.703s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.040s CPU, 0.036s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
371 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.040s CPU, 0.039s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.060s CPU, 0.060s wall-clock]
Translating task: [1.670s CPU, 1.667s wall-clock]
80851 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [1.050s CPU, 1.052s wall-clock]
Reordering and filtering variables...
373 of 373 variables necessary.
1 of 3 mutex groups necessary.
29864 of 29864 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.380s CPU, 0.379s wall-clock]
Translator variables: 373
Translator derived variables: 0
Translator facts: 749
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 29864
Translator axioms: 0
Translator task size: 360262
Translator peak memory: 222772 KB
Writing output... [0.220s CPU, 0.225s wall-clock]
Done! [5.130s CPU, 5.130s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt14-strips/p05/output.sas
INFO     search time limit: 294.8s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt14-strips/p05/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt14-strips/p05/output.sas
[t=0s, 9880 KB] reading input...
[t=0.117222s, 23364 KB] done reading input!
[t=0.121224s, 23760 KB] Initializing landmark count heuristic...
[t=0.121224s, 23760 KB] Generating landmark graph...
[t=0.121224s, 24948 KB] Building a landmark graph with reasonable orders.
[t=0.125223s, 26004 KB] Initializing Exploration...
[t=0.153225s, 60376 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.589172s, 60948 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.593169s, 60948 KB] Landmarks generation time: 0.475946s
[t=0.59717s, 60948 KB] Discovered 26 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.59717s, 60948 KB] 39 edges
[t=0.59717s, 60948 KB] approx. reasonable orders
[t=0.59717s, 60948 KB] approx. obedient reasonable orders
[t=0.59717s, 60948 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.59717s, 60948 KB] Landmarks generation time: 0.475946s
[t=0.59717s, 60948 KB] Discovered 26 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.59717s, 60948 KB] 39 edges
[t=0.59717s, 60948 KB] Landmark graph generation time: 0.475946s
[t=0.59717s, 60948 KB] Landmark graph contains 26 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.59717s, 60948 KB] Landmark graph contains 39 orderings.
[t=0.609167s, 60948 KB] Simplifying 178679 unary operators... done! [178007 unary operators]
[t=1.41711s, 60948 KB] time to simplify: 0.807942s
[t=1.42111s, 60948 KB] Initializing additive heuristic...
[t=1.42111s, 60948 KB] Initializing FF heuristic...
[t=1.42111s, 60948 KB] Building successor generator...done!
[t=1.4331s, 60948 KB] peak memory difference for successor generator creation: 0 KB
[t=1.4331s, 60948 KB] time for successor generation creation: 0.011998s
[t=1.4331s, 60948 KB] Variables: 373
[t=1.4331s, 60948 KB] FactPairs: 749
[t=1.4331s, 60948 KB] Bytes per state: 48
[t=1.4331s, 60948 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=1.4331s, 60948 KB] 15 initial landmarks, 4 goal landmarks
[t=1.4331s, 60948 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=1.4331s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=1.4331s, 60948 KB] g=0, 1 evaluated, 0 expanded
[t=1.4331s, 60948 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=1.4331s, 60948 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 24
[t=1.43711s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=1.43711s, 60948 KB] g=1, 4 evaluated, 3 expanded
[t=1.44111s, 60948 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=1.44111s, 60948 KB] g=1, 5 evaluated, 4 expanded
[t=1.44111s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=1.44111s, 60948 KB] g=2, 6 evaluated, 5 expanded
[t=1.44911s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=1.44911s, 60948 KB] g=3, 12 evaluated, 11 expanded
[t=1.45711s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=1.45711s, 60948 KB] g=4, 17 evaluated, 16 expanded
[t=1.47711s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=1.47711s, 60948 KB] g=7, 33 evaluated, 32 expanded
[t=1.48511s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=1.48511s, 60948 KB] g=7, 41 evaluated, 40 expanded
[t=1.55311s, 60948 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=1.55311s, 60948 KB] g=11, 97 evaluated, 96 expanded
[t=1.58111s, 60948 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=1.58111s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=1.58111s, 60948 KB] g=12, 121 evaluated, 120 expanded
[t=1.58111s, 60948 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=1.58111s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=1.58111s, 60948 KB] g=13, 122 evaluated, 121 expanded
[t=1.58511s, 60948 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=1.58511s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=1.58511s, 60948 KB] g=14, 124 evaluated, 123 expanded
[t=1.64511s, 60948 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=1.64511s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=1.64511s, 60948 KB] g=29, 179 evaluated, 178 expanded
[t=1.64911s, 60948 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=1.64911s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=1.64911s, 60948 KB] g=30, 181 evaluated, 180 expanded
[t=1.64911s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=1.64911s, 60948 KB] g=32, 183 evaluated, 182 expanded
[t=1.66511s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=1.66511s, 60948 KB] g=37, 196 evaluated, 195 expanded
[t=1.68111s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=1.68111s, 60948 KB] g=37, 208 evaluated, 207 expanded
[t=1.68111s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=1.68111s, 60948 KB] g=38, 210 evaluated, 209 expanded
[t=1.69711s, 60948 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=1.69711s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=1.69711s, 60948 KB] g=42, 227 evaluated, 226 expanded
[t=1.70111s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=1.70111s, 60948 KB] g=43, 228 evaluated, 227 expanded
[t=1.70511s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=1.70511s, 60948 KB] g=45, 232 evaluated, 231 expanded
[t=3.08503s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=3.08503s, 60948 KB] g=60, 1794 evaluated, 1793 expanded
[t=3.08503s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=3.08503s, 60948 KB] g=61, 1796 evaluated, 1795 expanded
[t=3.08503s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=3.08503s, 60948 KB] g=62, 1798 evaluated, 1797 expanded
[t=3.08903s, 60948 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=3.08903s, 60948 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=3.08903s, 60948 KB] g=63, 1799 evaluated, 1798 expanded
[t=3.08903s, 60948 KB] Solution found!
[t=3.08903s, 60948 KB] Actual search time: 1.65592s
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-down pr2 x1 y0 y1 (1)
finish-object object3 x4 y5 (1)
base-down pr2 x1 y1 y2 (1)
base-down pr2 x1 y2 y3 (1)
base-down pr2 x1 y3 y4 (1)
base-right pr2 x1 x2 y4 (1)
park pr2 (1)
gripper-right pr2 x2 y4 xrel0 xrel1 x2 x3 yrel0 y4 (1)
get-down pr2 x2 y4 xrel1 x3 yrel0 y4 object2 y5 (1)
put-right pr2 x2 y4 xrel1 x3 yrel0 y4 object2 x4 (1)
gripper-left pr2 x2 y4 xrel1 xrel0 x3 x2 yrel0 y4 (1)
finish-object object2 x4 y4 (1)
unpark pr2 xrel0 yrel0 (1)
base-left pr2 x2 x1 y4 (1)
base-up pr2 x1 y4 y3 (1)
park pr2 (1)
gripper-up pr2 x1 y3 xrel0 x1 yrel0 yrel-1 y3 y2 (1)
gripper-right pr2 x1 y3 xrel0 xrel1 x1 x2 yrel-1 y2 (1)
get-up pr2 x1 y3 xrel1 x2 yrel-1 y2 object1 y1 (1)
gripper-left pr2 x1 y3 xrel1 xrel0 x2 x1 yrel-1 y2 (1)
gripper-down pr2 x1 y3 xrel0 x1 yrel-1 yrel0 y2 y3 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x1 y3 y4 (1)
park pr2 (1)
gripper-down pr2 x1 y4 xrel0 x1 yrel0 yrel1 y4 y5 (1)
gripper-right pr2 x1 y4 xrel0 xrel1 x1 x2 yrel1 y5 (1)
put-right pr2 x1 y4 xrel1 x2 yrel1 y5 object1 x3 (1)
finish-object object1 x3 y5 (1)
gripper-left pr2 x1 y4 xrel1 xrel0 x2 x1 yrel1 y5 (1)
gripper-up pr2 x1 y4 xrel0 x1 yrel1 yrel0 y5 y4 (1)
unpark pr2 xrel0 yrel0 (1)
base-up pr2 x1 y4 y3 (1)
base-up pr2 x1 y3 y2 (1)
base-right pr2 x1 x2 y2 (1)
base-right pr2 x2 x3 y2 (1)
base-up pr2 x3 y2 y1 (1)
park pr2 (1)
gripper-down pr2 x3 y1 xrel0 x3 yrel0 yrel1 y1 y2 (1)
gripper-up pr2 x3 y1 xrel0 x3 yrel1 yrel0 y2 y1 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x3 y1 y2 (1)
park pr2 (1)
gripper-right pr2 x3 y2 xrel0 xrel1 x3 x4 yrel0 y2 (1)
gripper-left pr2 x3 y2 xrel1 xrel0 x4 x3 yrel0 y2 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x3 x4 y2 (1)
park pr2 (1)
gripper-up pr2 x4 y2 xrel0 x4 yrel0 yrel-1 y2 y1 (1)
gripper-right pr2 x4 y2 xrel0 xrel1 x4 x5 yrel-1 y1 (1)
get-right pr2 x4 y2 xrel1 x5 yrel-1 y1 object0 x6 (1)
gripper-left pr2 x4 y2 xrel1 xrel0 x5 x4 yrel-1 y1 (1)
gripper-down pr2 x4 y2 xrel0 x4 yrel-1 yrel0 y1 y2 (1)
unpark pr2 xrel0 yrel0 (1)
base-left pr2 x4 x3 y2 (1)
base-left pr2 x3 x2 y2 (1)
base-left pr2 x2 x1 y2 (1)
base-down pr2 x1 y2 y3 (1)
base-down pr2 x1 y3 y4 (1)
base-right pr2 x1 x2 y4 (1)
park pr2 (1)
put-right pr2 x2 y4 xrel0 x2 yrel0 y4 object0 x3 (1)
finish-object object0 x3 y4 (1)
[t=3.08903s, 60948 KB] Plan length: 64 step(s).
[t=3.08903s, 60948 KB] Plan cost: 64
[t=3.08903s, 60948 KB] Expanded 1799 state(s).
[t=3.08903s, 60948 KB] Reopened 0 state(s).
[t=3.08903s, 60948 KB] Evaluated 1800 state(s).
[t=3.08903s, 60948 KB] Evaluations: 3600
[t=3.08903s, 60948 KB] Generated 6363 state(s).
[t=3.08903s, 60948 KB] Dead ends: 0 state(s).
[t=3.08903s, 60948 KB] Number of registered states: 1800
[t=3.08903s, 60948 KB] Int hash set load factor: 1800/2048 = 0.878906
[t=3.08903s, 60948 KB] Int hash set resizes: 11
[t=3.08903s, 60948 KB] Search time: 1.65592s
[t=3.08903s, 60948 KB] Total time: 3.08903s
Solution found.
Peak memory: 60948 KB
search exit code: 0

INFO     Planner time: 8.3s
