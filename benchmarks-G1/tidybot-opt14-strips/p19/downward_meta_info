INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.99s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tidybot-opt14-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tidybot-opt14-strips/p19.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt14-strips/p19/output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.020s CPU, 0.013s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 400 rules.
Computing model... [0.320s CPU, 0.319s wall-clock]
30758 relevant atoms
32087 auxiliary atoms
62845 final queue length
161737 total queue pushes
Completing instantiation... [1.210s CPU, 1.205s wall-clock]
Instantiating: [1.560s CPU, 1.553s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.040s CPU, 0.035s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
375 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.040s CPU, 0.037s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.060s CPU, 0.058s wall-clock]
Translating task: [1.590s CPU, 1.590s wall-clock]
81187 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [0.920s CPU, 0.931s wall-clock]
Reordering and filtering variables...
377 of 377 variables necessary.
1 of 3 mutex groups necessary.
30200 of 30200 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.370s CPU, 0.367s wall-clock]
Translator variables: 377
Translator derived variables: 0
Translator facts: 757
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 30200
Translator axioms: 0
Translator task size: 363466
Translator peak memory: 224056 KB
Writing output... [0.230s CPU, 0.231s wall-clock]
Done! [4.770s CPU, 4.770s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt14-strips/p19/output.sas
INFO     search time limit: 295.18s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt14-strips/p19/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt14-strips/p19/output.sas
[t=0s, 9880 KB] reading input...
[t=0.115433s, 23528 KB] done reading input!
[t=0.115433s, 23924 KB] Initializing landmark count heuristic...
[t=0.115433s, 23924 KB] Generating landmark graph...
[t=0.119434s, 25116 KB] Building a landmark graph with reasonable orders.
[t=0.119434s, 26164 KB] Initializing Exploration...
[t=0.143441s, 60692 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.379437s, 61220 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.383437s, 61220 KB] Landmarks generation time: 0.264003s
[t=0.383437s, 61220 KB] Discovered 25 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.383437s, 61220 KB] 40 edges
[t=0.383437s, 61220 KB] approx. reasonable orders
[t=0.383437s, 61220 KB] approx. obedient reasonable orders
[t=0.383437s, 61220 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.383437s, 61220 KB] Landmarks generation time: 0.268004s
[t=0.383437s, 61220 KB] Discovered 25 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.383437s, 61220 KB] 40 edges
[t=0.383437s, 61220 KB] Landmark graph generation time: 0.268004s
[t=0.383437s, 61220 KB] Landmark graph contains 25 landmarks, of which 2 are disjunctive and 0 are conjunctive.
[t=0.383437s, 61220 KB] Landmark graph contains 40 orderings.
[t=0.395431s, 61220 KB] Simplifying 179687 unary operators... done! [178919 unary operators]
[t=0.967426s, 61220 KB] time to simplify: 0.571995s
[t=0.971425s, 61220 KB] Initializing additive heuristic...
[t=0.971425s, 61220 KB] Initializing FF heuristic...
[t=0.971425s, 61220 KB] Building successor generator...done!
[t=0.979423s, 61220 KB] peak memory difference for successor generator creation: 0 KB
[t=0.979423s, 61220 KB] time for successor generation creation: 0.00799788s
[t=0.979423s, 61220 KB] Variables: 377
[t=0.979423s, 61220 KB] FactPairs: 757
[t=0.979423s, 61220 KB] Bytes per state: 48
[t=0.979423s, 61220 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.979423s, 61220 KB] 14 initial landmarks, 4 goal landmarks
[t=0.983423s, 61220 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.983423s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.983423s, 61220 KB] g=0, 1 evaluated, 0 expanded
[t=0.983423s, 61220 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.983423s, 61220 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.987425s, 61220 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.987425s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.987425s, 61220 KB] g=1, 5 evaluated, 4 expanded
[t=0.995423s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.995423s, 61220 KB] g=3, 11 evaluated, 10 expanded
[t=0.999423s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.999423s, 61220 KB] g=5, 13 evaluated, 12 expanded
[t=1.00342s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=1.00342s, 61220 KB] g=5, 18 evaluated, 17 expanded
[t=1.00742s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=1.00742s, 61220 KB] g=6, 19 evaluated, 18 expanded
[t=1.01542s, 61220 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=1.01542s, 61220 KB] g=9, 26 evaluated, 25 expanded
[t=1.05542s, 61220 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=1.05542s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=1.05542s, 61220 KB] g=10, 65 evaluated, 64 expanded
[t=1.05542s, 61220 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=1.05542s, 61220 KB] g=11, 66 evaluated, 65 expanded
[t=1.05942s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=1.05942s, 61220 KB] g=11, 69 evaluated, 68 expanded
[t=1.05942s, 61220 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=1.05942s, 61220 KB] g=12, 70 evaluated, 69 expanded
[t=1.07542s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=1.07542s, 61220 KB] g=16, 87 evaluated, 86 expanded
[t=1.27142s, 61220 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=1.27142s, 61220 KB] g=32, 292 evaluated, 291 expanded
[t=1.30342s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=1.30342s, 61220 KB] g=41, 325 evaluated, 324 expanded
[t=1.31142s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=1.31142s, 61220 KB] g=44, 334 evaluated, 333 expanded
[t=1.32342s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=1.32342s, 61220 KB] g=47, 348 evaluated, 347 expanded
[t=1.34742s, 61220 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=1.34742s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=1.34742s, 61220 KB] g=50, 377 evaluated, 376 expanded
[t=1.34742s, 61220 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=1.34742s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=1.34742s, 61220 KB] g=51, 379 evaluated, 378 expanded
[t=1.36743s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=1.36743s, 61220 KB] g=57, 399 evaluated, 398 expanded
[t=1.36743s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=1.36743s, 61220 KB] g=58, 401 evaluated, 400 expanded
[t=1.37142s, 61220 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=1.37142s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=1.37142s, 61220 KB] g=59, 404 evaluated, 403 expanded
[t=1.37142s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=1.37142s, 61220 KB] g=60, 405 evaluated, 404 expanded
[t=1.37142s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=1.37142s, 61220 KB] g=61, 406 evaluated, 405 expanded
[t=1.37142s, 61220 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=1.37142s, 61220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=1.37142s, 61220 KB] g=62, 407 evaluated, 406 expanded
[t=1.37142s, 61220 KB] Solution found!
[t=1.37142s, 61220 KB] Actual search time: 0.392s
finish-object object3 x4 y3 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-down pr2 x1 y0 y1 (1)
base-down pr2 x1 y1 y2 (1)
base-right pr2 x1 x2 y2 (1)
park pr2 (1)
gripper-right pr2 x2 y2 xrel0 xrel1 x2 x3 yrel0 y2 (1)
get-down pr2 x2 y2 xrel1 x3 yrel0 y2 object2 y3 (1)
put-right pr2 x2 y2 xrel1 x3 yrel0 y2 object2 x4 (1)
gripper-left pr2 x2 y2 xrel1 xrel0 x3 x2 yrel0 y2 (1)
finish-object object2 x4 y2 (1)
unpark pr2 xrel0 yrel0 (1)
base-left pr2 x2 x1 y2 (1)
base-down pr2 x1 y2 y3 (1)
base-down pr2 x1 y3 y4 (1)
base-down pr2 x1 y4 y5 (1)
base-right pr2 x1 x2 y5 (1)
park pr2 (1)
gripper-right pr2 x2 y5 xrel0 xrel1 x2 x3 yrel0 y5 (1)
gripper-down pr2 x2 y5 xrel1 x3 yrel0 yrel1 y5 y6 (1)
get-right pr2 x2 y5 xrel1 x3 yrel1 y6 object0 x4 (1)
gripper-up pr2 x2 y5 xrel1 x3 yrel1 yrel0 y6 y5 (1)
gripper-left pr2 x2 y5 xrel1 xrel0 x3 x2 yrel0 y5 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x2 x3 y5 (1)
base-right pr2 x3 x4 y5 (1)
park pr2 (1)
gripper-right pr2 x4 y5 xrel0 xrel1 x4 x5 yrel0 y5 (1)
gripper-down pr2 x4 y5 xrel1 x5 yrel0 yrel1 y5 y6 (1)
put-left pr2 x4 y5 xrel1 x5 yrel1 y6 object0 x4 (1)
get-right pr2 x4 y5 xrel1 x5 yrel1 y6 object1 x6 (1)
gripper-up pr2 x4 y5 xrel1 x5 yrel1 yrel0 y6 y5 (1)
gripper-left pr2 x4 y5 xrel1 xrel0 x5 x4 yrel0 y5 (1)
gripper-left pr2 x4 y5 xrel0 xrel-1 x4 x3 yrel0 y5 (1)
gripper-down pr2 x4 y5 xrel-1 x3 yrel0 yrel1 y5 y6 (1)
put-left pr2 x4 y5 xrel-1 x3 yrel1 y6 object1 x2 (1)
get-right pr2 x4 y5 xrel-1 x3 yrel1 y6 object0 x4 (1)
gripper-up pr2 x4 y5 xrel-1 x3 yrel1 yrel0 y6 y5 (1)
gripper-right pr2 x4 y5 xrel-1 xrel0 x3 x4 yrel0 y5 (1)
unpark pr2 xrel0 yrel0 (1)
base-left pr2 x4 x3 y5 (1)
base-left pr2 x3 x2 y5 (1)
base-left pr2 x2 x1 y5 (1)
base-up pr2 x1 y5 y4 (1)
base-up pr2 x1 y4 y3 (1)
base-right pr2 x1 x2 y3 (1)
park pr2 (1)
gripper-right pr2 x2 y3 xrel0 xrel1 x2 x3 yrel0 y3 (1)
put-up pr2 x2 y3 xrel1 x3 yrel0 y3 object0 y2 (1)
finish-object object0 x3 y2 (1)
gripper-left pr2 x2 y3 xrel1 xrel0 x3 x2 yrel0 y3 (1)
unpark pr2 xrel0 yrel0 (1)
base-left pr2 x2 x1 y3 (1)
base-down pr2 x1 y3 y4 (1)
base-down pr2 x1 y4 y5 (1)
base-right pr2 x1 x2 y5 (1)
park pr2 (1)
get-down pr2 x2 y5 xrel0 x2 yrel0 y5 object1 y6 (1)
gripper-right pr2 x2 y5 xrel0 xrel1 x2 x3 yrel0 y5 (1)
gripper-down pr2 x2 y5 xrel1 x3 yrel0 yrel1 y5 y6 (1)
put-right pr2 x2 y5 xrel1 x3 yrel1 y6 object1 x4 (1)
finish-object object1 x4 y6 (1)
[t=1.37142s, 61220 KB] Plan length: 63 step(s).
[t=1.37142s, 61220 KB] Plan cost: 63
[t=1.37142s, 61220 KB] Expanded 407 state(s).
[t=1.37142s, 61220 KB] Reopened 0 state(s).
[t=1.37142s, 61220 KB] Evaluated 408 state(s).
[t=1.37142s, 61220 KB] Evaluations: 816
[t=1.37142s, 61220 KB] Generated 1369 state(s).
[t=1.37142s, 61220 KB] Dead ends: 0 state(s).
[t=1.37142s, 61220 KB] Number of registered states: 408
[t=1.37142s, 61220 KB] Int hash set load factor: 408/512 = 0.796875
[t=1.37142s, 61220 KB] Int hash set resizes: 9
[t=1.37142s, 61220 KB] Search time: 0.392s
[t=1.37142s, 61220 KB] Total time: 1.37142s
Solution found.
Peak memory: 61220 KB
search exit code: 0

INFO     Planner time: 6.2s
