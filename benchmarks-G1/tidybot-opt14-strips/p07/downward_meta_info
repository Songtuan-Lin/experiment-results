INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tidybot-opt14-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tidybot-opt14-strips/p07.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt14-strips/p07/output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.020s CPU, 0.013s wall-clock]
Preparing model... [0.000s CPU, 0.004s wall-clock]
Generated 400 rules.
Computing model... [0.340s CPU, 0.335s wall-clock]
30399 relevant atoms
31995 auxiliary atoms
62394 final queue length
160559 total queue pushes
Completing instantiation... [1.300s CPU, 1.303s wall-clock]
Instantiating: [1.680s CPU, 1.669s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.030s CPU, 0.035s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
371 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.010s CPU, 0.001s wall-clock]
Computing fact groups: [0.040s CPU, 0.037s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.050s CPU, 0.057s wall-clock]
Translating task: [1.600s CPU, 1.607s wall-clock]
80827 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [1.030s CPU, 1.025s wall-clock]
Reordering and filtering variables...
373 of 373 variables necessary.
1 of 3 mutex groups necessary.
29843 of 29843 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.370s CPU, 0.374s wall-clock]
Translator variables: 373
Translator derived variables: 0
Translator facts: 749
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 29843
Translator axioms: 0
Translator task size: 360046
Translator peak memory: 222496 KB
Writing output... [0.220s CPU, 0.227s wall-clock]
Done! [5.010s CPU, 5.012s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt14-strips/p07/output.sas
INFO     search time limit: 294.92s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt14-strips/p07/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt14-strips/p07/output.sas
[t=0s, 9880 KB] reading input...
[t=0.126241s, 23364 KB] done reading input!
[t=0.126241s, 23760 KB] Initializing landmark count heuristic...
[t=0.126241s, 23760 KB] Generating landmark graph...
[t=0.130249s, 24960 KB] Building a landmark graph with reasonable orders.
[t=0.130249s, 26016 KB] Initializing Exploration...
[t=0.158243s, 60364 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.426253s, 60900 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.430245s, 60900 KB] Landmarks generation time: 0.299995s
[t=0.430245s, 60900 KB] Discovered 22 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.430245s, 60900 KB] 36 edges
[t=0.430245s, 60900 KB] approx. reasonable orders
[t=0.434243s, 60900 KB] approx. obedient reasonable orders
[t=0.434243s, 60900 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.434243s, 60900 KB] Landmarks generation time: 0.308002s
[t=0.434243s, 60900 KB] Discovered 22 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.434243s, 60900 KB] 36 edges
[t=0.434243s, 60900 KB] Landmark graph generation time: 0.308002s
[t=0.434243s, 60900 KB] Landmark graph contains 22 landmarks, of which 4 are disjunctive and 0 are conjunctive.
[t=0.434243s, 60900 KB] Landmark graph contains 36 orderings.
[t=0.442242s, 60900 KB] Simplifying 178610 unary operators... done! [177938 unary operators]
[t=1.25814s, 60900 KB] time to simplify: 0.815898s
[t=1.26214s, 60900 KB] Initializing additive heuristic...
[t=1.26214s, 60900 KB] Initializing FF heuristic...
[t=1.26214s, 60900 KB] Building successor generator...done!
[t=1.27014s, 60900 KB] peak memory difference for successor generator creation: 0 KB
[t=1.27014s, 60900 KB] time for successor generation creation: 0.00799695s
[t=1.27014s, 60900 KB] Variables: 373
[t=1.27014s, 60900 KB] FactPairs: 749
[t=1.27014s, 60900 KB] Bytes per state: 48
[t=1.27014s, 60900 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=1.27014s, 60900 KB] 10 initial landmarks, 4 goal landmarks
[t=1.27414s, 60900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=1.27414s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 30
[t=1.27414s, 60900 KB] g=0, 1 evaluated, 0 expanded
[t=1.27414s, 60900 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=1.27414s, 60900 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 30
[t=1.27414s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=1.27414s, 60900 KB] g=1, 2 evaluated, 1 expanded
[t=1.28214s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=1.28214s, 60900 KB] g=2, 7 evaluated, 6 expanded
[t=1.28214s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 27
[t=1.28214s, 60900 KB] g=3, 8 evaluated, 7 expanded
[t=1.29014s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=1.29014s, 60900 KB] g=6, 15 evaluated, 14 expanded
[t=1.30214s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=1.30214s, 60900 KB] g=7, 25 evaluated, 24 expanded
[t=1.30614s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=1.30614s, 60900 KB] g=4, 27 evaluated, 26 expanded
[t=1.31014s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=1.31014s, 60900 KB] g=6, 31 evaluated, 30 expanded
[t=1.49014s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=1.49014s, 60900 KB] g=8, 195 evaluated, 194 expanded
[t=1.49414s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=1.49414s, 60900 KB] g=11, 201 evaluated, 200 expanded
[t=1.49814s, 60900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=1.49814s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=1.49814s, 60900 KB] g=12, 203 evaluated, 202 expanded
[t=1.50214s, 60900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=1.50214s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=1.50214s, 60900 KB] g=13, 206 evaluated, 205 expanded
[t=1.55014s, 60900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=1.55014s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=1.55014s, 60900 KB] g=29, 250 evaluated, 249 expanded
[t=1.55014s, 60900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=1.55014s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=1.55014s, 60900 KB] g=30, 252 evaluated, 251 expanded
[t=1.55415s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=1.55415s, 60900 KB] g=32, 254 evaluated, 253 expanded
[t=1.55814s, 60900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=1.55814s, 60900 KB] g=33, 258 evaluated, 257 expanded
[t=1.56214s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=1.56214s, 60900 KB] g=34, 259 evaluated, 258 expanded
[t=1.56214s, 60900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=1.56214s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=1.56214s, 60900 KB] g=34, 260 evaluated, 259 expanded
[t=1.58614s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=1.58614s, 60900 KB] g=39, 280 evaluated, 279 expanded
[t=1.59414s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=1.59414s, 60900 KB] g=40, 288 evaluated, 287 expanded
[t=1.59814s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=1.59814s, 60900 KB] g=41, 294 evaluated, 293 expanded
[t=1.60614s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=1.60614s, 60900 KB] g=42, 301 evaluated, 300 expanded
[t=1.61014s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=1.61014s, 60900 KB] g=42, 306 evaluated, 305 expanded
[t=1.61414s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=1.61414s, 60900 KB] g=43, 309 evaluated, 308 expanded
[t=1.61414s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=1.61414s, 60900 KB] g=44, 310 evaluated, 309 expanded
[t=1.61814s, 60900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=1.61814s, 60900 KB] g=46, 316 evaluated, 315 expanded
[t=1.61814s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=1.61814s, 60900 KB] g=47, 317 evaluated, 316 expanded
[t=1.62214s, 60900 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=1.62214s, 60900 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=1.62214s, 60900 KB] g=48, 318 evaluated, 317 expanded
[t=1.62214s, 60900 KB] Solution found!
[t=1.62214s, 60900 KB] Actual search time: 0.352s
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-right pr2 x1 x2 y0 (1)
base-down pr2 x2 y0 y1 (1)
base-right pr2 x2 x3 y1 (1)
base-right pr2 x3 x4 y1 (1)
park pr2 (1)
gripper-down pr2 x4 y1 xrel0 x4 yrel0 yrel1 y1 y2 (1)
gripper-right pr2 x4 y1 xrel0 xrel1 x4 x5 yrel1 y2 (1)
get-down pr2 x4 y1 xrel1 x5 yrel1 y2 object0 y3 (1)
gripper-left pr2 x4 y1 xrel1 xrel0 x5 x4 yrel1 y2 (1)
put-down pr2 x4 y1 xrel0 x4 yrel1 y2 object0 y3 (1)
finish-object object0 x4 y3 (1)
gripper-up pr2 x4 y1 xrel0 x4 yrel1 yrel0 y2 y1 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x4 y1 y2 (1)
park pr2 (1)
gripper-right pr2 x4 y2 xrel0 xrel1 x4 x5 yrel0 y2 (1)
gripper-down pr2 x4 y2 xrel1 x5 yrel0 yrel1 y2 y3 (1)
get-down pr2 x4 y2 xrel1 x5 yrel1 y3 object1 y4 (1)
gripper-up pr2 x4 y2 xrel1 x5 yrel1 yrel0 y3 y2 (1)
put-down pr2 x4 y2 xrel1 x5 yrel0 y2 object1 y3 (1)
gripper-left pr2 x4 y2 xrel1 xrel0 x5 x4 yrel0 y2 (1)
unpark pr2 xrel0 yrel0 (1)
base-down pr2 x4 y2 y3 (1)
park pr2 (1)
get-down pr2 x4 y3 xrel0 x4 yrel0 y3 object3 y4 (1)
gripper-down pr2 x4 y3 xrel0 x4 yrel0 yrel1 y3 y4 (1)
put-right pr2 x4 y3 xrel0 x4 yrel1 y4 object3 x5 (1)
finish-object object3 x5 y4 (1)
gripper-up pr2 x4 y3 xrel0 x4 yrel1 yrel0 y4 y3 (1)
get-right pr2 x4 y3 xrel0 x4 yrel0 y3 object1 x5 (1)
put-down pr2 x4 y3 xrel0 x4 yrel0 y3 object1 y4 (1)
finish-object object1 x4 y4 (1)
unpark pr2 xrel0 yrel0 (1)
base-up pr2 x4 y3 y2 (1)
base-up pr2 x4 y2 y1 (1)
base-left pr2 x4 x3 y1 (1)
base-left pr2 x3 x2 y1 (1)
base-down pr2 x2 y1 y2 (1)
base-down pr2 x2 y2 y3 (1)
base-left pr2 x2 x1 y3 (1)
base-down pr2 x1 y3 y4 (1)
park pr2 (1)
gripper-down pr2 x1 y4 xrel0 x1 yrel0 yrel1 y4 y5 (1)
get-down pr2 x1 y4 xrel0 x1 yrel1 y5 object2 y6 (1)
gripper-left pr2 x1 y4 xrel0 xrel-1 x1 x0 yrel1 y5 (1)
put-right pr2 x1 y4 xrel-1 x0 yrel1 y5 object2 x1 (1)
finish-object object2 x1 y5 (1)
[t=1.62214s, 60900 KB] Plan length: 49 step(s).
[t=1.62214s, 60900 KB] Plan cost: 49
[t=1.62214s, 60900 KB] Expanded 318 state(s).
[t=1.62214s, 60900 KB] Reopened 0 state(s).
[t=1.62214s, 60900 KB] Evaluated 319 state(s).
[t=1.62214s, 60900 KB] Evaluations: 638
[t=1.62214s, 60900 KB] Generated 1063 state(s).
[t=1.62214s, 60900 KB] Dead ends: 0 state(s).
[t=1.62214s, 60900 KB] Number of registered states: 319
[t=1.62214s, 60900 KB] Int hash set load factor: 319/512 = 0.623047
[t=1.62214s, 60900 KB] Int hash set resizes: 9
[t=1.62214s, 60900 KB] Search time: 0.352s
[t=1.62214s, 60900 KB] Total time: 1.62214s
Solution found.
Peak memory: 60900 KB
search exit code: 0

INFO     Planner time: 6.7s
