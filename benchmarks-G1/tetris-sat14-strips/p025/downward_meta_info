INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tetris-sat14-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tetris-sat14-strips/p025.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p025/output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 79 rules.
Computing model... [0.310s CPU, 0.308s wall-clock]
31361 relevant atoms
29376 auxiliary atoms
60737 final queue length
146468 total queue pushes
Completing instantiation... [0.680s CPU, 0.681s wall-clock]
Instantiating: [1.010s CPU, 1.007s wall-clock]
Computing fact groups...
Finding invariants...
14 initial candidates
Finding invariants: [0.020s CPU, 0.017s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1080 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.000s CPU, 0.003s wall-clock]
Computing fact groups: [0.030s CPU, 0.026s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.014s wall-clock]
Translating task: [0.480s CPU, 0.485s wall-clock]
28208 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
4 propositions removed
Detecting unreachable propositions: [0.270s CPU, 0.265s wall-clock]
Reordering and filtering variables...
1084 of 1084 variables necessary.
0 of 4 mutex groups necessary.
12104 of 12104 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.180s CPU, 0.174s wall-clock]
Translator variables: 1084
Translator derived variables: 0
Translator facts: 2352
Translator goal facts: 24
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 12104
Translator axioms: 0
Translator task size: 101596
Translator peak memory: 95912 KB
Writing output... [0.070s CPU, 0.072s wall-clock]
Done! [2.060s CPU, 2.053s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p025/output.sas
INFO     search time limit: 297.89s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p025/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p025/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0399993s, 14704 KB] done reading input!
[t=0.0399993s, 15100 KB] Initializing landmark count heuristic...
[t=0.0399993s, 15100 KB] Generating landmark graph...
[t=0.0399993s, 15496 KB] Building a landmark graph with reasonable orders.
[t=0.0399993s, 15892 KB] Initializing Exploration...
[t=0.0480015s, 22936 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.184s, 24472 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.188002s, 24472 KB] Landmarks generation time: 0.148003s
[t=0.188002s, 24472 KB] Discovered 48 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.188002s, 24472 KB] 27 edges
[t=0.188002s, 24472 KB] approx. reasonable orders
[t=0.188002s, 24472 KB] approx. obedient reasonable orders
[t=0.188002s, 24472 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.188002s, 24472 KB] Landmarks generation time: 0.148003s
[t=0.188002s, 24472 KB] Discovered 48 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.188002s, 24472 KB] 27 edges
[t=0.188002s, 24472 KB] Landmark graph generation time: 0.148003s
[t=0.188002s, 24472 KB] Landmark graph contains 48 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.188002s, 24472 KB] Landmark graph contains 27 orderings.
[t=0.192001s, 24472 KB] Simplifying 52016 unary operators... done! [39272 unary operators]
[t=0.220002s, 24472 KB] time to simplify: 0.0280003s
[t=0.220002s, 24472 KB] Initializing additive heuristic...
[t=0.220002s, 24472 KB] Initializing FF heuristic...
[t=0.220002s, 24472 KB] Building successor generator...done!
[t=0.224002s, 24472 KB] peak memory difference for successor generator creation: 0 KB
[t=0.224002s, 24472 KB] time for successor generation creation: 0.00400075s
[t=0.224002s, 24472 KB] Variables: 1084
[t=0.224002s, 24472 KB] FactPairs: 2352
[t=0.224002s, 24472 KB] Bytes per state: 140
[t=0.224002s, 24472 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.224002s, 24472 KB] 32 initial landmarks, 24 goal landmarks
[t=0.224002s, 24472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.224002s, 24472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.224002s, 24472 KB] g=0, 1 evaluated, 0 expanded
[t=0.224002s, 24472 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.224002s, 24472 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.224002s, 24472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.224002s, 24472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.224002s, 24472 KB] g=1, 2 evaluated, 1 expanded
[t=0.224002s, 24472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.224002s, 24472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.224002s, 24472 KB] g=2, 3 evaluated, 2 expanded
[t=0.224002s, 24472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.224002s, 24472 KB] g=3, 4 evaluated, 3 expanded
[t=0.224002s, 24472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.224002s, 24472 KB] g=4, 7 evaluated, 6 expanded
[t=0.228001s, 24472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.228001s, 24472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.228001s, 24472 KB] g=6, 39 evaluated, 38 expanded
[t=0.228001s, 24472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.228001s, 24472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.228001s, 24472 KB] g=7, 40 evaluated, 39 expanded
[t=0.383999s, 24472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.383999s, 24472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.383999s, 24472 KB] g=13, 942 evaluated, 941 expanded
[t=0.383999s, 24472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.383999s, 24472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.383999s, 24472 KB] g=14, 943 evaluated, 942 expanded
[t=0.547999s, 24472 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.547999s, 24472 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.547999s, 24472 KB] g=21, 1973 evaluated, 1972 expanded
[t=1.90797s, 25048 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=1.90797s, 25048 KB] g=27, 10531 evaluated, 10530 expanded
[t=1.90797s, 25048 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=1.90797s, 25048 KB] g=29, 10542 evaluated, 10541 expanded
[t=2.28397s, 26108 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=2.28397s, 26108 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=2.28397s, 26108 KB] g=30, 12921 evaluated, 12920 expanded
[t=2.81597s, 27752 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=2.81597s, 27752 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=2.81597s, 27752 KB] g=32, 16404 evaluated, 16403 expanded
[t=37.7794s, 129196 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=37.7794s, 129196 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=37.7794s, 129196 KB] g=41, 247919 evaluated, 247918 expanded
[t=66.6192s, 213140 KB] Solution found!
[t=66.6192s, 213140 KB] Actual search time: 66.3952s
move_two f4-0f f5-0f f6-0f straight2 (2)
move_two f5-0f f6-0f f6-1f straight2 (2)
move_two f3-1f f4-1f f4-0f straight0 (2)
move_two f3-2f f4-2f f4-3f straight1 (2)
move_two f4-2f f4-3f f5-3f straight1 (2)
move_two f4-3f f5-3f f6-3f straight1 (2)
move_two f5-3f f6-3f f6-2f straight1 (2)
move_l_down f0-1f f1-1f f1-2f f2-1f f2-2f rightl0 (3)
move_l_down f1-1f f2-1f f2-2f f3-1f f3-2f rightl0 (3)
move_l_left f2-1f f3-1f f3-2f f2-0f f3-0f rightl0 (3)
move_two f6-0f f6-1f f7-1f straight2 (2)
move_two f4-1f f4-0f f5-0f straight0 (2)
move_two f4-0f f5-0f f6-0f straight0 (2)
move_two f5-0f f6-0f f7-0f straight0 (2)
move_l_down f2-0f f3-0f f3-1f f4-0f f4-1f rightl0 (3)
move_l_right f3-0f f4-0f f4-1f f3-1f f4-2f f3-2f rightl0 (3)
move_square f5-1f f5-0f square2 (1)
move_square f5-2f f5-1f square3 (1)
move_l_left f3-1f f4-1f f4-2f f3-0f f4-0f rightl0 (3)
move_two f6-0f f7-0f f8-0f straight0 (2)
move_square f5-0f f6-0f square2 (1)
move_l_right f3-0f f4-0f f4-1f f3-1f f4-2f f3-2f rightl0 (3)
move_l_right f3-1f f4-1f f4-2f f3-2f f4-3f f3-3f rightl0 (3)
move_l_down f3-2f f4-2f f4-3f f5-2f f5-3f rightl0 (3)
move_two f6-3f f6-2f f7-2f straight1 (2)
move_two f6-2f f7-2f f7-3f straight1 (2)
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl0 (3)
move_two f7-2f f7-3f f8-3f straight1 (2)
move_two f7-3f f8-3f f8-2f straight1 (2)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl0 (3)
move_two f6-1f f7-1f f8-1f straight2 (2)
move_square f5-1f f6-1f square3 (1)
move_square f1-0f f0-0f square1 (1)
move_square f0-0f f0-1f square1 (1)
move_square f0-2f f0-3f square0 (1)
move_square f0-3f f1-3f square0 (1)
move_square f1-3f f2-3f square0 (1)
move_square f2-3f f3-3f square0 (1)
move_square f3-3f f4-3f square0 (1)
move_square f4-3f f5-3f square0 (1)
move_square f5-3f f6-3f square0 (1)
move_two f7-0f f8-0f f9-0f straight0 (2)
move_square f6-0f f7-0f square2 (1)
move_square f0-1f f0-0f square1 (1)
move_square f0-0f f1-0f square1 (1)
move_square f1-0f f2-0f square1 (1)
move_square f2-0f f3-0f square1 (1)
move_square f3-0f f4-0f square1 (1)
move_square f4-0f f5-0f square1 (1)
move_square f5-0f f6-0f square1 (1)
[t=66.6192s, 213140 KB] Plan length: 50 step(s).
[t=66.6192s, 213140 KB] Plan cost: 90
[t=66.6192s, 213140 KB] Expanded 445869 state(s).
[t=66.6192s, 213140 KB] Reopened 0 state(s).
[t=66.6192s, 213140 KB] Evaluated 445870 state(s).
[t=66.6192s, 213140 KB] Evaluations: 891740
[t=66.6192s, 213140 KB] Generated 6984457 state(s).
[t=66.6192s, 213140 KB] Dead ends: 0 state(s).
[t=66.6192s, 213140 KB] Number of registered states: 445870
[t=66.6192s, 213140 KB] Int hash set load factor: 445870/1048576 = 0.425215
[t=66.6192s, 213140 KB] Int hash set resizes: 20
[t=66.6192s, 213140 KB] Search time: 66.3952s
[t=66.6192s, 213140 KB] Total time: 66.6192s
Solution found.
Peak memory: 213140 KB
search exit code: 0

INFO     Planner time: 6.9e+01s
