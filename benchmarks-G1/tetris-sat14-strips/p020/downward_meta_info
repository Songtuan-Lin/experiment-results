INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tetris-sat14-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tetris-sat14-strips/p020.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p020/output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 79 rules.
Computing model... [0.240s CPU, 0.240s wall-clock]
25001 relevant atoms
23764 auxiliary atoms
48765 final queue length
117784 total queue pushes
Completing instantiation... [0.580s CPU, 0.570s wall-clock]
Instantiating: [0.830s CPU, 0.827s wall-clock]
Computing fact groups...
Finding invariants...
14 initial candidates
Finding invariants: [0.010s CPU, 0.014s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
888 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.002s wall-clock]
Computing fact groups: [0.020s CPU, 0.021s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.012s wall-clock]
Translating task: [0.350s CPU, 0.353s wall-clock]
22544 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
1 propositions removed
Detecting unreachable propositions: [0.220s CPU, 0.220s wall-clock]
Reordering and filtering variables...
889 of 889 variables necessary.
0 of 1 mutex groups necessary.
9456 of 9456 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.190s CPU, 0.185s wall-clock]
Translator variables: 889
Translator derived variables: 0
Translator facts: 1816
Translator goal facts: 20
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 9456
Translator axioms: 0
Translator task size: 80161
Translator peak memory: 82012 KB
Writing output... [0.060s CPU, 0.056s wall-clock]
Done! [1.680s CPU, 1.684s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p020/output.sas
INFO     search time limit: 298.25s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p020/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p020/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0319059s, 13664 KB] done reading input!
[t=0.0319059s, 14060 KB] Initializing landmark count heuristic...
[t=0.0319059s, 14060 KB] Generating landmark graph...
[t=0.0319059s, 14324 KB] Building a landmark graph with reasonable orders.
[t=0.0359072s, 14728 KB] Initializing Exploration...
[t=0.0399076s, 21240 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.143908s, 22308 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.143908s, 22308 KB] Landmarks generation time: 0.112002s
[t=0.143908s, 22308 KB] Discovered 37 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.143908s, 22308 KB] 20 edges
[t=0.143908s, 22308 KB] approx. reasonable orders
[t=0.143908s, 22308 KB] approx. obedient reasonable orders
[t=0.143908s, 22308 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.143908s, 22308 KB] Landmarks generation time: 0.112002s
[t=0.143908s, 22308 KB] Discovered 37 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.143908s, 22308 KB] 20 edges
[t=0.143908s, 22308 KB] Landmark graph generation time: 0.112002s
[t=0.143908s, 22308 KB] Landmark graph contains 37 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.143908s, 22308 KB] Landmark graph contains 20 orderings.
[t=0.147906s, 22308 KB] Simplifying 41100 unary operators... done! [30720 unary operators]
[t=0.171906s, 22308 KB] time to simplify: 0.024s
[t=0.171906s, 22308 KB] Initializing additive heuristic...
[t=0.171906s, 22308 KB] Initializing FF heuristic...
[t=0.171906s, 22308 KB] Building successor generator...done!
[t=0.175908s, 22308 KB] peak memory difference for successor generator creation: 0 KB
[t=0.175908s, 22308 KB] time for successor generation creation: 0.00400147s
[t=0.175908s, 22308 KB] Variables: 889
[t=0.175908s, 22308 KB] FactPairs: 1816
[t=0.175908s, 22308 KB] Bytes per state: 112
[t=0.175908s, 22308 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.175908s, 22308 KB] 24 initial landmarks, 20 goal landmarks
[t=0.175908s, 22308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.175908s, 22308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.175908s, 22308 KB] g=0, 1 evaluated, 0 expanded
[t=0.175908s, 22308 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.175908s, 22308 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.175908s, 22308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.175908s, 22308 KB] g=1, 2 evaluated, 1 expanded
[t=0.175908s, 22308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.175908s, 22308 KB] g=2, 3 evaluated, 2 expanded
[t=0.175908s, 22308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.175908s, 22308 KB] g=1, 6 evaluated, 5 expanded
[t=0.175908s, 22308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.175908s, 22308 KB] g=2, 8 evaluated, 7 expanded
[t=0.175908s, 22308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.175908s, 22308 KB] g=3, 9 evaluated, 8 expanded
[t=0.179906s, 22308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.179906s, 22308 KB] g=2, 12 evaluated, 11 expanded
[t=0.179906s, 22308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.179906s, 22308 KB] g=4, 15 evaluated, 14 expanded
[t=0.183908s, 22308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.183908s, 22308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.183908s, 22308 KB] g=9, 66 evaluated, 65 expanded
[t=0.187907s, 22308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.187907s, 22308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.187907s, 22308 KB] g=10, 69 evaluated, 68 expanded
[t=0.915884s, 22308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.915884s, 22308 KB] g=26, 5334 evaluated, 5333 expanded
[t=0.915884s, 22308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.915884s, 22308 KB] g=27, 5336 evaluated, 5335 expanded
[t=0.915884s, 22308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.915884s, 22308 KB] g=28, 5337 evaluated, 5336 expanded
[t=0.915884s, 22308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.915884s, 22308 KB] g=29, 5338 evaluated, 5337 expanded
[t=1.23988s, 22308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=1.23988s, 22308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=1.23988s, 22308 KB] g=33, 7772 evaluated, 7771 expanded
[t=1.23988s, 22308 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=1.23988s, 22308 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=1.23988s, 22308 KB] g=34, 7773 evaluated, 7772 expanded
[t=2.27587s, 23384 KB] Solution found!
[t=2.27587s, 23384 KB] Actual search time: 2.09996s
move_two f3-1f f4-1f f5-1f straight2 (2)
move_two f0-0f f1-0f f2-0f straight0 (2)
move_two f0-2f f1-2f f1-3f straight1 (2)
move_two f4-1f f5-1f f5-0f straight2 (2)
move_two f1-2f f1-3f f0-3f straight1 (2)
move_l_right f1-1f f2-1f f2-2f f1-2f f2-3f f1-3f rightl0 (3)
move_l_down f1-2f f2-2f f2-3f f3-2f f3-3f rightl0 (3)
move_l_down f2-2f f3-2f f3-3f f4-2f f4-3f rightl0 (3)
move_l_down f3-2f f4-2f f4-3f f5-2f f5-3f rightl0 (3)
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl0 (3)
move_two f1-3f f0-3f f0-2f straight1 (2)
move_two f0-3f f0-2f f0-1f straight1 (2)
move_two f0-2f f0-1f f1-1f straight1 (2)
move_two f0-1f f1-1f f2-1f straight1 (2)
move_square f3-0f f3-1f square0 (1)
move_two f1-0f f2-0f f3-0f straight0 (2)
move_square f3-1f f3-2f square0 (1)
move_two f1-1f f2-1f f3-1f straight1 (2)
move_two f2-0f f3-0f f4-0f straight0 (2)
move_two f3-0f f4-0f f4-1f straight0 (2)
move_two f4-0f f4-1f f4-2f straight0 (2)
move_square f3-2f f2-2f square0 (1)
move_two f2-1f f3-1f f3-2f straight1 (2)
move_two f4-1f f4-2f f4-3f straight0 (2)
move_two f3-1f f3-2f f3-3f straight1 (2)
move_two f4-2f f4-3f f5-3f straight0 (2)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl0 (3)
move_two f4-3f f5-3f f5-2f straight0 (2)
move_two f5-1f f5-0f f6-0f straight2 (2)
move_two f3-2f f3-3f f4-3f straight1 (2)
move_two f3-3f f4-3f f4-2f straight1 (2)
move_two f4-3f f4-2f f4-1f straight1 (2)
move_two f4-2f f4-1f f5-1f straight1 (2)
move_two f4-1f f5-1f f6-1f straight1 (2)
move_two f5-1f f6-1f f7-1f straight1 (2)
move_square f2-2f f2-1f square0 (1)
move_square f2-1f f3-1f square0 (1)
move_square f3-1f f4-1f square0 (1)
move_square f4-1f f5-1f square0 (1)
[t=2.27587s, 23384 KB] Plan length: 39 step(s).
[t=2.27587s, 23384 KB] Plan cost: 77
[t=2.27587s, 23384 KB] Expanded 15929 state(s).
[t=2.27587s, 23384 KB] Reopened 0 state(s).
[t=2.27587s, 23384 KB] Evaluated 15930 state(s).
[t=2.27587s, 23384 KB] Evaluations: 31860
[t=2.27587s, 23384 KB] Generated 163575 state(s).
[t=2.27587s, 23384 KB] Dead ends: 0 state(s).
[t=2.27587s, 23384 KB] Number of registered states: 15930
[t=2.27587s, 23384 KB] Int hash set load factor: 15930/32768 = 0.486145
[t=2.27587s, 23384 KB] Int hash set resizes: 15
[t=2.27587s, 23384 KB] Search time: 2.09996s
[t=2.27587s, 23384 KB] Total time: 2.27587s
Solution found.
Peak memory: 23384 KB
search exit code: 0

INFO     Planner time: 4.0s
