INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tetris-sat14-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tetris-sat14-strips/p023.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p023/output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.010s CPU, 0.002s wall-clock]
Generated 79 rules.
Computing model... [0.490s CPU, 0.491s wall-clock]
59373 relevant atoms
33792 auxiliary atoms
93165 final queue length
260710 total queue pushes
Completing instantiation... [1.300s CPU, 1.293s wall-clock]
Instantiating: [1.810s CPU, 1.808s wall-clock]
Computing fact groups...
Finding invariants...
14 initial candidates
Finding invariants: [0.040s CPU, 0.032s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
1632 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.004s wall-clock]
Computing fact groups: [0.050s CPU, 0.045s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.001s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.001s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.001s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.030s CPU, 0.024s wall-clock]
Translating task: [0.850s CPU, 0.856s wall-clock]
52944 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
4 propositions removed
Detecting unreachable propositions: [0.460s CPU, 0.453s wall-clock]
Reordering and filtering variables...
1636 of 1636 variables necessary.
0 of 4 mutex groups necessary.
21912 of 21912 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.380s CPU, 0.385s wall-clock]
Translator variables: 1636
Translator derived variables: 0
Translator facts: 3456
Translator goal facts: 24
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 21912
Translator axioms: 0
Translator task size: 186916
Translator peak memory: 153076 KB
Writing output... [0.130s CPU, 0.129s wall-clock]
Done! [3.720s CPU, 3.716s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p023/output.sas
INFO     search time limit: 296.22s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p023/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p023/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0759991s, 18680 KB] done reading input!
[t=0.0759991s, 19076 KB] Initializing landmark count heuristic...
[t=0.0759991s, 19076 KB] Generating landmark graph...
[t=0.0759991s, 19736 KB] Building a landmark graph with reasonable orders.
[t=0.0800001s, 20548 KB] Initializing Exploration...
[t=0.0920019s, 34120 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.392002s, 36864 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.396002s, 36864 KB] Landmarks generation time: 0.320003s
[t=0.396002s, 36864 KB] Discovered 51 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.396002s, 36864 KB] 30 edges
[t=0.396002s, 36864 KB] approx. reasonable orders
[t=0.396002s, 36864 KB] approx. obedient reasonable orders
[t=0.396002s, 36864 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.396002s, 36864 KB] Landmarks generation time: 0.320003s
[t=0.396002s, 36864 KB] Discovered 51 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.396002s, 36864 KB] 30 edges
[t=0.396002s, 36864 KB] Landmark graph generation time: 0.320003s
[t=0.396002s, 36864 KB] Landmark graph contains 51 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.396002s, 36864 KB] Landmark graph contains 30 orderings.
[t=0.400002s, 36864 KB] Simplifying 96448 unary operators... done! [70960 unary operators]
[t=0.456003s, 36864 KB] time to simplify: 0.0560008s
[t=0.456003s, 36864 KB] Initializing additive heuristic...
[t=0.456003s, 36864 KB] Initializing FF heuristic...
[t=0.456003s, 36864 KB] Building successor generator...done!
[t=0.464001s, 36864 KB] peak memory difference for successor generator creation: 0 KB
[t=0.464001s, 36864 KB] time for successor generation creation: 0.00799841s
[t=0.464001s, 36864 KB] Variables: 1636
[t=0.464001s, 36864 KB] FactPairs: 3456
[t=0.464001s, 36864 KB] Bytes per state: 208
[t=0.464001s, 36864 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.464001s, 36864 KB] 32 initial landmarks, 24 goal landmarks
[t=0.464001s, 36864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.464001s, 36864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.464001s, 36864 KB] g=0, 1 evaluated, 0 expanded
[t=0.464001s, 36864 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.464001s, 36864 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.464001s, 36864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.464001s, 36864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.464001s, 36864 KB] g=1, 2 evaluated, 1 expanded
[t=0.464001s, 36864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.464001s, 36864 KB] g=2, 3 evaluated, 2 expanded
[t=0.464001s, 36864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 16
[t=0.464001s, 36864 KB] g=3, 4 evaluated, 3 expanded
[t=0.511994s, 36864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.515994s, 36864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.515994s, 36864 KB] g=6, 159 evaluated, 158 expanded
[t=0.579984s, 36864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.579984s, 36864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.579984s, 36864 KB] g=10, 367 evaluated, 366 expanded
[t=0.579984s, 36864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.579984s, 36864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.579984s, 36864 KB] g=11, 369 evaluated, 368 expanded
[t=1.61998s, 36864 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=1.62399s, 36864 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=1.62399s, 36864 KB] g=12, 3643 evaluated, 3642 expanded
[t=6.50382s, 38936 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=6.50382s, 38936 KB] g=16, 18885 evaluated, 18884 expanded
[t=7.83578s, 41324 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=7.83578s, 41324 KB] g=18, 23104 evaluated, 23103 expanded
[t=8.30778s, 42388 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=8.30778s, 42388 KB] g=20, 24591 evaluated, 24590 expanded
[t=8.54376s, 42784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=8.54376s, 42784 KB] g=22, 25333 evaluated, 25332 expanded
[t=8.95175s, 43452 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=8.95175s, 43452 KB] g=30, 26598 evaluated, 26597 expanded
[t=12.5356s, 50244 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=12.5356s, 50244 KB] g=38, 37648 evaluated, 37647 expanded
[t=12.7836s, 50776 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=12.7836s, 50776 KB] g=40, 38431 evaluated, 38430 expanded
[t=12.7916s, 50776 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=12.7916s, 50776 KB] g=42, 38454 evaluated, 38453 expanded
[t=13.4236s, 51852 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=13.4236s, 51852 KB] g=43, 40514 evaluated, 40513 expanded
[t=13.4276s, 51852 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=13.4276s, 51852 KB] g=45, 40535 evaluated, 40534 expanded
[t=13.4316s, 51852 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=13.4316s, 51852 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=13.4316s, 51852 KB] g=46, 40538 evaluated, 40537 expanded
[t=14.7475s, 54252 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=14.7475s, 54252 KB] g=55, 45059 evaluated, 45058 expanded
[t=15.3515s, 55320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=15.3515s, 55320 KB] g=58, 47179 evaluated, 47178 expanded
[t=15.3555s, 55320 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=15.3555s, 55320 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=15.3555s, 55320 KB] g=59, 47180 evaluated, 47179 expanded
[t=20.3273s, 64480 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=20.3273s, 64480 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=20.3273s, 64480 KB] g=63, 65627 evaluated, 65626 expanded
[t=126.931s, 257096 KB] Solution found!
[t=126.931s, 257096 KB] Actual search time: 126.467s
move_two f2-1f f3-1f f3-2f straight2 (2)
move_two f1-0f f2-0f f2-1f straight1 (2)
move_two f0-1f f1-1f f1-0f straight0 (2)
move_square f5-1f f5-0f square2 (1)
move_square f5-2f f5-1f square3 (1)
move_square f5-0f f6-0f square2 (1)
move_two f3-1f f3-2f f3-3f straight2 (2)
move_two f3-2f f3-3f f4-3f straight2 (2)
move_two f3-3f f4-3f f5-3f straight2 (2)
move_two f4-3f f5-3f f6-3f straight2 (2)
move_two f5-3f f6-3f f6-2f straight2 (2)
move_square f5-1f f6-1f square3 (1)
move_l_down f3-0f f4-0f f4-1f f5-0f f5-1f rightl0 (3)
move_square f6-0f f7-0f square2 (1)
move_square f6-1f f7-1f square3 (1)
move_l_down f4-0f f5-0f f5-1f f6-0f f6-1f rightl0 (3)
move_two f6-3f f6-2f f7-2f straight2 (2)
move_two f6-2f f7-2f f7-3f straight2 (2)
move_two f7-2f f7-3f f8-3f straight2 (2)
move_l_right f5-0f f6-0f f6-1f f5-1f f6-2f f5-2f rightl0 (3)
move_square f7-1f f8-1f square3 (1)
move_l_down f5-1f f6-1f f6-2f f7-1f f7-2f rightl0 (3)
move_two f1-1f f1-0f f0-0f straight0 (2)
move_two f2-0f f2-1f f1-1f straight1 (2)
move_two f2-1f f1-1f f0-1f straight1 (2)
move_l_down f1-2f f2-2f f2-3f f3-2f f3-3f rightl1 (3)
move_square f4-2f f4-1f square1 (1)
move_l_down f2-2f f3-2f f3-3f f4-2f f4-3f rightl1 (3)
move_l_down f3-2f f4-2f f4-3f f5-2f f5-3f rightl1 (3)
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl1 (3)
move_square f0-2f f0-3f square0 (1)
move_two f1-1f f0-1f f0-2f straight1 (2)
move_two f0-1f f0-2f f1-2f straight1 (2)
move_two f0-2f f1-2f f2-2f straight1 (2)
move_two f1-2f f2-2f f3-2f straight1 (2)
move_two f2-2f f3-2f f4-2f straight1 (2)
move_square f7-0f f8-0f square2 (1)
move_l_left f6-1f f7-1f f7-2f f6-0f f7-0f rightl0 (3)
move_two f7-3f f8-3f f9-3f straight2 (2)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl1 (3)
move_two f3-2f f4-2f f4-3f straight1 (2)
move_two f4-2f f4-3f f5-3f straight1 (2)
move_two f4-3f f5-3f f6-3f straight1 (2)
move_two f8-3f f9-3f f10-3f straight2 (2)
move_l_down f6-2f f7-2f f7-3f f8-2f f8-3f rightl1 (3)
move_two f5-3f f6-3f f6-2f straight1 (2)
move_two f1-0f f0-0f f0-1f straight0 (2)
move_two f0-0f f0-1f f1-1f straight0 (2)
move_two f0-1f f1-1f f1-0f straight0 (2)
move_two f1-1f f1-0f f2-0f straight0 (2)
move_two f1-0f f2-0f f3-0f straight0 (2)
move_two f2-0f f3-0f f4-0f straight0 (2)
move_two f3-0f f4-0f f5-0f straight0 (2)
move_two f4-0f f5-0f f5-1f straight0 (2)
move_two f5-0f f5-1f f6-1f straight0 (2)
move_two f9-3f f10-3f f11-3f straight2 (2)
move_l_down f7-2f f8-2f f8-3f f9-2f f9-3f rightl1 (3)
move_two f6-3f f6-2f f7-2f straight1 (2)
move_two f6-2f f7-2f f7-3f straight1 (2)
move_two f5-1f f6-1f f6-2f straight0 (2)
move_two f6-1f f6-2f f6-3f straight0 (2)
move_square f4-1f f5-1f square1 (1)
move_square f5-1f f6-1f square1 (1)
move_square f8-0f f9-0f square2 (1)
move_square f8-1f f9-1f square3 (1)
move_l_down f6-0f f7-0f f7-1f f8-0f f8-1f rightl0 (3)
move_square f0-3f f0-2f square0 (1)
move_square f0-2f f0-1f square0 (1)
move_square f0-1f f0-0f square0 (1)
move_square f0-0f f1-0f square0 (1)
move_square f1-0f f2-0f square0 (1)
move_square f2-0f f3-0f square0 (1)
move_square f3-0f f4-0f square0 (1)
move_square f4-0f f5-0f square0 (1)
move_square f5-0f f6-0f square0 (1)
[t=126.931s, 257096 KB] Plan length: 75 step(s).
[t=126.931s, 257096 KB] Plan cost: 140
[t=126.931s, 257096 KB] Expanded 456489 state(s).
[t=126.931s, 257096 KB] Reopened 0 state(s).
[t=126.931s, 257096 KB] Evaluated 456490 state(s).
[t=126.931s, 257096 KB] Evaluations: 912980
[t=126.931s, 257096 KB] Generated 6893045 state(s).
[t=126.931s, 257096 KB] Dead ends: 0 state(s).
[t=126.931s, 257096 KB] Number of registered states: 456490
[t=126.931s, 257096 KB] Int hash set load factor: 456490/1048576 = 0.435343
[t=126.931s, 257096 KB] Int hash set resizes: 20
[t=126.931s, 257096 KB] Search time: 126.467s
[t=126.931s, 257096 KB] Total time: 126.931s
Solution found.
Peak memory: 257096 KB
search exit code: 0

INFO     Planner time: 1.3e+02s
