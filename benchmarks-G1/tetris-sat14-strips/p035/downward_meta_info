INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tetris-sat14-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tetris-sat14-strips/p035.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p035/output.sas
Parsing...
Parsing: [0.000s CPU, 0.002s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.003s wall-clock]
Preparing model... [0.000s CPU, 0.002s wall-clock]
Generated 79 rules.
Computing model... [1.690s CPU, 1.688s wall-clock]
200453 relevant atoms
59476 auxiliary atoms
259929 final queue length
843445 total queue pushes
Completing instantiation... [4.850s CPU, 4.855s wall-clock]
Instantiating: [6.630s CPU, 6.618s wall-clock]
Computing fact groups...
Finding invariants...
14 initial candidates
Finding invariants: [0.150s CPU, 0.149s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.001s wall-clock]
Choosing groups...
3968 uncovered facts
Choosing groups: [0.000s CPU, 0.001s wall-clock]
Building translation key... [0.010s CPU, 0.010s wall-clock]
Computing fact groups: [0.180s CPU, 0.185s wall-clock]
Building STRIPS to SAS dictionary... [0.010s CPU, 0.003s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.003s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.003s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.090s CPU, 0.083s wall-clock]
Translating task: [2.980s CPU, 2.982s wall-clock]
176632 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [1.690s CPU, 1.687s wall-clock]
Reordering and filtering variables...
3970 of 3970 variables necessary.
0 of 2 mutex groups necessary.
70264 of 70264 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [2.310s CPU, 2.315s wall-clock]
Translator variables: 3970
Translator derived variables: 0
Translator facts: 8048
Translator goal facts: 28
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 70264
Translator axioms: 0
Translator task size: 610606
Translator peak memory: 427112 KB
Writing output... [0.430s CPU, 0.433s wall-clock]
Done! [14.360s CPU, 14.360s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p035/output.sas
INFO     search time limit: 285.53s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p035/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tetris-sat14-strips/p035/output.sas
[t=0s, 9880 KB] reading input...
[t=0.242816s, 37992 KB] done reading input!
[t=0.246816s, 38388 KB] Initializing landmark count heuristic...
[t=0.246816s, 38388 KB] Generating landmark graph...
[t=0.254818s, 40812 KB] Building a landmark graph with reasonable orders.
[t=0.258818s, 43216 KB] Initializing Exploration...
[t=0.310818s, 95512 KB] Generating landmarks using the RPG/SAS+ approach
[t=2.17075s, 102424 KB] Removed 0 reasonable or obedient reasonable orders
[t=2.17475s, 102424 KB] Landmarks generation time: 1.92393s
[t=2.17875s, 102424 KB] Discovered 54 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=2.17875s, 102424 KB] 27 edges
[t=2.17875s, 102424 KB] approx. reasonable orders
[t=2.17875s, 102424 KB] approx. obedient reasonable orders
[t=2.17875s, 102424 KB] Removed 0 reasonable or obedient reasonable orders
[t=2.17875s, 102424 KB] Landmarks generation time: 1.93194s
[t=2.17875s, 102424 KB] Discovered 54 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=2.17875s, 102424 KB] 27 edges
[t=2.17875s, 102424 KB] Landmark graph generation time: 1.93194s
[t=2.17875s, 102424 KB] Landmark graph contains 54 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=2.17875s, 102424 KB] Landmark graph contains 27 orderings.
[t=2.19875s, 102424 KB] Simplifying 317880 unary operators... done! [227232 unary operators]
[t=2.52674s, 102424 KB] time to simplify: 0.327991s
[t=2.53474s, 102424 KB] Initializing additive heuristic...
[t=2.53474s, 102424 KB] Initializing FF heuristic...
[t=2.53474s, 102424 KB] Building successor generator...done!
[t=2.55474s, 102424 KB] peak memory difference for successor generator creation: 0 KB
[t=2.55474s, 102424 KB] time for successor generation creation: 0.019996s
[t=2.55474s, 102424 KB] Variables: 3970
[t=2.55474s, 102424 KB] FactPairs: 8048
[t=2.55474s, 102424 KB] Bytes per state: 500
[t=2.55474s, 102424 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=2.55474s, 102424 KB] 34 initial landmarks, 28 goal landmarks
[t=2.55874s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=2.55874s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=2.55874s, 102424 KB] g=0, 1 evaluated, 0 expanded
[t=2.55874s, 102424 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=2.55874s, 102424 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 14
[t=2.56674s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=2.56674s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=2.56674s, 102424 KB] g=1, 3 evaluated, 2 expanded
[t=2.57474s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=2.57474s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=2.57474s, 102424 KB] g=2, 5 evaluated, 4 expanded
[t=2.58674s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=2.58674s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=2.58674s, 102424 KB] g=3, 8 evaluated, 7 expanded
[t=2.59874s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=2.59874s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=2.59874s, 102424 KB] g=4, 11 evaluated, 10 expanded
[t=3.80667s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=3.80667s, 102424 KB] g=12, 356 evaluated, 355 expanded
[t=3.81867s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=3.81867s, 102424 KB] g=13, 359 evaluated, 358 expanded
[t=3.82667s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=3.82667s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=3.82667s, 102424 KB] g=14, 362 evaluated, 361 expanded
[t=13.9583s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=13.9583s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=13.9583s, 102424 KB] g=16, 5309 evaluated, 5308 expanded
[t=15.0462s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=15.0462s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=15.0462s, 102424 KB] g=18, 6093 evaluated, 6092 expanded
[t=30.5058s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=30.5058s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=30.5058s, 102424 KB] g=26, 13431 evaluated, 13430 expanded
[t=39.1055s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=39.1055s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=39.1055s, 102424 KB] g=29, 17110 evaluated, 17109 expanded
[t=51.253s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=51.253s, 102424 KB] g=41, 25242 evaluated, 25241 expanded
[t=51.477s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=51.477s, 102424 KB] g=43, 25434 evaluated, 25433 expanded
[t=51.477s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=51.477s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=51.477s, 102424 KB] g=44, 25435 evaluated, 25434 expanded
[t=65.8006s, 102424 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=65.8006s, 102424 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=65.8006s, 102424 KB] g=50, 38592 evaluated, 38591 expanded
[t=69.8565s, 102424 KB] Solution found!
[t=69.8565s, 102424 KB] Actual search time: 67.3018s
move_l_down f5-0f f6-0f f6-1f f7-0f f7-1f rightl0 (3)
move_l_down f6-0f f7-0f f7-1f f8-0f f8-1f rightl0 (3)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl1 (3)
move_l_down f6-2f f7-2f f7-3f f8-2f f8-3f rightl1 (3)
move_l_down f2-0f f3-0f f3-1f f4-0f f4-1f rightl2 (3)
move_l_down f3-0f f4-0f f4-1f f5-0f f5-1f rightl2 (3)
move_l_down f4-0f f5-0f f5-1f f6-0f f6-1f rightl2 (3)
move_l_down f2-2f f3-2f f3-3f f4-2f f4-3f rightl4 (3)
move_l_down f3-2f f4-2f f4-3f f5-2f f5-3f rightl4 (3)
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl4 (3)
move_l_down f7-0f f8-0f f8-1f f9-0f f9-1f rightl0 (3)
move_l_down f5-0f f6-0f f6-1f f7-0f f7-1f rightl2 (3)
move_l_down f8-0f f9-0f f9-1f f10-0f f10-1f rightl0 (3)
move_l_down f6-0f f7-0f f7-1f f8-0f f8-1f rightl2 (3)
move_l_down f7-2f f8-2f f8-3f f9-2f f9-3f rightl1 (3)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl4 (3)
move_l_down f8-2f f9-2f f9-3f f10-2f f10-3f rightl1 (3)
move_l_down f6-2f f7-2f f7-3f f8-2f f8-3f rightl4 (3)
move_l_down f0-2f f1-2f f1-3f f2-2f f2-3f rightl3 (3)
move_l_down f1-2f f2-2f f2-3f f3-2f f3-3f rightl3 (3)
move_l_down f2-2f f3-2f f3-3f f4-2f f4-3f rightl3 (3)
move_l_down f3-2f f4-2f f4-3f f5-2f f5-3f rightl3 (3)
move_l_down f4-2f f5-2f f5-3f f6-2f f6-3f rightl3 (3)
move_l_down f9-2f f10-2f f10-3f f11-2f f11-3f rightl1 (3)
move_l_down f7-2f f8-2f f8-3f f9-2f f9-3f rightl4 (3)
move_l_down f5-2f f6-2f f6-3f f7-2f f7-3f rightl3 (3)
move_l_down f10-2f f11-2f f11-3f f12-2f f12-3f rightl1 (3)
move_l_down f8-2f f9-2f f9-3f f10-2f f10-3f rightl4 (3)
move_l_down f6-2f f7-2f f7-3f f8-2f f8-3f rightl3 (3)
move_square f0-1f f0-2f square0 (1)
move_l_right f0-0f f1-0f f1-1f f0-1f f1-2f f0-2f rightl5 (3)
move_square f2-1f f2-0f square1 (1)
move_l_down f0-1f f1-1f f1-2f f2-1f f2-2f rightl5 (3)
move_l_down f1-1f f2-1f f2-2f f3-1f f3-2f rightl5 (3)
move_l_down f2-1f f3-1f f3-2f f4-1f f4-2f rightl5 (3)
move_l_down f3-1f f4-1f f4-2f f5-1f f5-2f rightl5 (3)
move_l_down f4-1f f5-1f f5-2f f6-1f f6-2f rightl5 (3)
move_l_left f5-1f f6-1f f6-2f f5-0f f6-0f rightl5 (3)
move_l_down f9-0f f10-0f f10-1f f11-0f f11-1f rightl0 (3)
move_l_down f7-0f f8-0f f8-1f f9-0f f9-1f rightl2 (3)
move_l_down f5-0f f6-0f f6-1f f7-0f f7-1f rightl5 (3)
move_l_down f10-0f f11-0f f11-1f f12-0f f12-1f rightl0 (3)
move_l_down f8-0f f9-0f f9-1f f10-0f f10-1f rightl2 (3)
move_l_down f6-0f f7-0f f7-1f f8-0f f8-1f rightl5 (3)
move_square f2-0f f3-0f square1 (1)
move_square f3-0f f4-0f square1 (1)
move_square f4-0f f5-0f square1 (1)
move_square f5-0f f6-0f square1 (1)
move_square f6-0f f6-1f square1 (1)
move_square f6-1f f7-1f square1 (1)
move_square f0-2f f0-3f square0 (1)
move_square f0-3f f1-3f square0 (1)
move_square f1-3f f2-3f square0 (1)
move_square f2-3f f3-3f square0 (1)
move_square f3-3f f4-3f square0 (1)
move_square f4-3f f5-3f square0 (1)
move_square f5-3f f6-3f square0 (1)
move_square f6-3f f7-3f square0 (1)
[t=69.8565s, 102424 KB] Plan length: 58 step(s).
[t=69.8565s, 102424 KB] Plan cost: 142
[t=69.8565s, 102424 KB] Expanded 43329 state(s).
[t=69.8565s, 102424 KB] Reopened 0 state(s).
[t=69.8565s, 102424 KB] Evaluated 43330 state(s).
[t=69.8565s, 102424 KB] Evaluations: 86660
[t=69.8565s, 102424 KB] Generated 567164 state(s).
[t=69.8565s, 102424 KB] Dead ends: 0 state(s).
[t=69.8565s, 102424 KB] Number of registered states: 43330
[t=69.8565s, 102424 KB] Int hash set load factor: 43330/65536 = 0.661163
[t=69.8565s, 102424 KB] Int hash set resizes: 16
[t=69.8565s, 102424 KB] Search time: 67.3018s
[t=69.8565s, 102424 KB] Total time: 69.8565s
Solution found.
Peak memory: 102424 KB
search exit code: 0

INFO     Planner time: 8.4e+01s
