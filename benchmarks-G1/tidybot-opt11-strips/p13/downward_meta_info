INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tidybot-opt11-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tidybot-opt11-strips/p13.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt11-strips/p13/output.sas
Parsing...
Parsing: [0.010s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.013s wall-clock]
Preparing model... [0.010s CPU, 0.004s wall-clock]
Generated 400 rules.
Computing model... [0.220s CPU, 0.232s wall-clock]
19710 relevant atoms
25207 auxiliary atoms
44917 final queue length
106179 total queue pushes
Completing instantiation... [0.840s CPU, 0.832s wall-clock]
Instantiating: [1.090s CPU, 1.092s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.030s CPU, 0.026s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
291 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.001s wall-clock]
Computing fact groups: [0.030s CPU, 0.028s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.010s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.040s CPU, 0.038s wall-clock]
Translating task: [1.070s CPU, 1.063s wall-clock]
49953 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [0.480s CPU, 0.487s wall-clock]
Reordering and filtering variables...
293 of 293 variables necessary.
1 of 3 mutex groups necessary.
19255 of 19255 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.240s CPU, 0.232s wall-clock]
Translator variables: 293
Translator derived variables: 0
Translator facts: 589
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 19255
Translator axioms: 0
Translator task size: 228164
Translator peak memory: 154384 KB
Writing output... [0.140s CPU, 0.142s wall-clock]
Done! [3.090s CPU, 3.088s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt11-strips/p13/output.sas
INFO     search time limit: 296.85s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt11-strips/p13/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt11-strips/p13/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0774113s, 18412 KB] done reading input!
[t=0.081412s, 18808 KB] Initializing landmark count heuristic...
[t=0.081412s, 18808 KB] Generating landmark graph...
[t=0.081412s, 19468 KB] Building a landmark graph with reasonable orders.
[t=0.0854116s, 19996 KB] Initializing Exploration...
[t=0.101414s, 38556 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.353416s, 38968 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.353416s, 38968 KB] Landmarks generation time: 0.276004s
[t=0.357416s, 38968 KB] Discovered 29 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.357416s, 38968 KB] 50 edges
[t=0.357416s, 38968 KB] approx. reasonable orders
[t=0.357416s, 38968 KB] approx. obedient reasonable orders
[t=0.357416s, 38968 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.357416s, 38968 KB] Landmarks generation time: 0.276004s
[t=0.357416s, 38968 KB] Discovered 29 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.357416s, 38968 KB] 50 edges
[t=0.357416s, 38968 KB] Landmark graph generation time: 0.276004s
[t=0.357416s, 38968 KB] Landmark graph contains 29 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.357416s, 38968 KB] Landmark graph contains 50 orderings.
[t=0.361414s, 38968 KB] Simplifying 110936 unary operators... done! [110552 unary operators]
[t=0.849408s, 38968 KB] time to simplify: 0.487995s
[t=0.849408s, 40988 KB] Initializing additive heuristic...
[t=0.849408s, 40988 KB] Initializing FF heuristic...
[t=0.849408s, 40988 KB] Building successor generator...done!
[t=0.857406s, 40988 KB] peak memory difference for successor generator creation: 0 KB
[t=0.857406s, 40988 KB] time for successor generation creation: 0.00799747s
[t=0.857406s, 40988 KB] Variables: 293
[t=0.857406s, 40988 KB] FactPairs: 589
[t=0.857406s, 40988 KB] Bytes per state: 40
[t=0.857406s, 40988 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.857406s, 40988 KB] 16 initial landmarks, 4 goal landmarks
[t=0.861407s, 40988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.861407s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.861407s, 40988 KB] g=0, 1 evaluated, 0 expanded
[t=0.861407s, 40988 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.861407s, 40988 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.865407s, 40988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.865407s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 20
[t=0.865407s, 40988 KB] g=1, 5 evaluated, 4 expanded
[t=0.873406s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.873406s, 40988 KB] g=4, 17 evaluated, 16 expanded
[t=0.881405s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.881405s, 40988 KB] g=4, 23 evaluated, 22 expanded
[t=2.56926s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=2.56926s, 40988 KB] g=13, 2070 evaluated, 2069 expanded
[t=4.01317s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=4.01718s, 40988 KB] g=17, 3799 evaluated, 3798 expanded
[t=4.01718s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=4.01718s, 40988 KB] g=18, 3801 evaluated, 3800 expanded
[t=4.01718s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=4.01718s, 40988 KB] g=19, 3803 evaluated, 3802 expanded
[t=4.02117s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=4.02117s, 40988 KB] g=20, 3805 evaluated, 3804 expanded
[t=4.02518s, 40988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=4.02518s, 40988 KB] g=22, 3813 evaluated, 3812 expanded
[t=4.02917s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=4.02917s, 40988 KB] g=22, 3819 evaluated, 3818 expanded
[t=4.02917s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=4.02917s, 40988 KB] g=24, 3821 evaluated, 3820 expanded
[t=4.02917s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=4.02917s, 40988 KB] g=25, 3822 evaluated, 3821 expanded
[t=4.02917s, 40988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=4.02917s, 40988 KB] g=26, 3823 evaluated, 3822 expanded
[t=4.03317s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=4.03317s, 40988 KB] g=27, 3824 evaluated, 3823 expanded
[t=4.03317s, 40988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=4.03317s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=4.03317s, 40988 KB] g=28, 3825 evaluated, 3824 expanded
[t=4.03317s, 40988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=4.03317s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=4.03317s, 40988 KB] g=29, 3827 evaluated, 3826 expanded
[t=4.03317s, 40988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=4.03317s, 40988 KB] g=31, 3829 evaluated, 3828 expanded
[t=4.04117s, 40988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=4.04117s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=4.04117s, 40988 KB] g=33, 3843 evaluated, 3842 expanded
[t=4.04117s, 40988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=4.04117s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=4.04117s, 40988 KB] g=34, 3844 evaluated, 3843 expanded
[t=4.04117s, 40988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=4.04117s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=4.04117s, 40988 KB] g=35, 3845 evaluated, 3844 expanded
[t=4.04117s, 40988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=4.04117s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=4.04117s, 40988 KB] g=36, 3846 evaluated, 3845 expanded
[t=4.04117s, 40988 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=4.04117s, 40988 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=4.04117s, 40988 KB] g=37, 3847 evaluated, 3846 expanded
[t=4.04117s, 40988 KB] Solution found!
[t=4.04117s, 40988 KB] Actual search time: 3.18377s
finish-object object3 x4 y4 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-down pr2 x1 y0 y1 (1)
base-right pr2 x1 x2 y1 (1)
park pr2 (1)
gripper-right pr2 x2 y1 xrel0 xrel1 x2 x3 yrel0 y1 (1)
gripper-left pr2 x2 y1 xrel1 xrel0 x3 x2 yrel0 y1 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x2 x3 y1 (1)
base-right pr2 x3 x4 y1 (1)
base-right pr2 x4 x5 y1 (1)
park pr2 (1)
gripper-left pr2 x5 y1 xrel0 xrel-1 x5 x4 yrel0 y1 (1)
gripper-right pr2 x5 y1 xrel-1 xrel0 x4 x5 yrel0 y1 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x5 x6 y1 (1)
base-down pr2 x6 y1 y2 (1)
base-down pr2 x6 y2 y3 (1)
base-left pr2 x6 x5 y3 (1)
base-left pr2 x5 x4 y3 (1)
base-left pr2 x4 x3 y3 (1)
park pr2 (1)
get-down pr2 x3 y3 xrel0 x3 yrel0 y3 object2 y4 (1)
gripper-down pr2 x3 y3 xrel0 x3 yrel0 yrel1 y3 y4 (1)
put-up pr2 x3 y3 xrel0 x3 yrel1 y4 object2 y3 (1)
get-up pr2 x3 y3 xrel0 x3 yrel1 y4 object1 y3 (1)
gripper-up pr2 x3 y3 xrel0 x3 yrel1 yrel0 y4 y3 (1)
put-down pr2 x3 y3 xrel0 x3 yrel0 y3 object1 y4 (1)
get-right pr2 x3 y3 xrel0 x3 yrel0 y3 object0 x4 (1)
gripper-right pr2 x3 y3 xrel0 xrel1 x3 x4 yrel0 y3 (1)
put-left pr2 x3 y3 xrel1 x4 yrel0 y3 object0 x3 (1)
get-left pr2 x3 y3 xrel1 x4 yrel0 y3 object2 x3 (1)
gripper-left pr2 x3 y3 xrel1 xrel0 x4 x3 yrel0 y3 (1)
put-right pr2 x3 y3 xrel0 x3 yrel0 y3 object2 x4 (1)
finish-object object0 x3 y3 (1)
finish-object object1 x3 y4 (1)
finish-object object2 x4 y3 (1)
[t=4.04117s, 40988 KB] Plan length: 38 step(s).
[t=4.04117s, 40988 KB] Plan cost: 38
[t=4.04117s, 40988 KB] Expanded 3847 state(s).
[t=4.04117s, 40988 KB] Reopened 0 state(s).
[t=4.04117s, 40988 KB] Evaluated 3848 state(s).
[t=4.04117s, 40988 KB] Evaluations: 7696
[t=4.04117s, 40988 KB] Generated 12854 state(s).
[t=4.04117s, 40988 KB] Dead ends: 0 state(s).
[t=4.04117s, 40988 KB] Number of registered states: 3848
[t=4.04117s, 40988 KB] Int hash set load factor: 3848/4096 = 0.939453
[t=4.04117s, 40988 KB] Int hash set resizes: 12
[t=4.04117s, 40988 KB] Search time: 3.18377s
[t=4.04117s, 40988 KB] Total time: 4.04117s
Solution found.
Peak memory: 40988 KB
search exit code: 0

INFO     Planner time: 7.2s
