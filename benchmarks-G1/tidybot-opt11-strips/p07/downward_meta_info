INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tidybot-opt11-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tidybot-opt11-strips/p07.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt11-strips/p07/output.sas
Parsing...
Parsing: [0.000s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.013s wall-clock]
Preparing model... [0.010s CPU, 0.004s wall-clock]
Generated 400 rules.
Computing model... [0.160s CPU, 0.165s wall-clock]
12732 relevant atoms
19456 auxiliary atoms
32188 final queue length
69274 total queue pushes
Completing instantiation... [0.500s CPU, 0.503s wall-clock]
Instantiating: [0.690s CPU, 0.693s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.020s CPU, 0.020s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
231 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.022s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.020s CPU, 0.023s wall-clock]
Translating task: [0.660s CPU, 0.663s wall-clock]
29495 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [0.310s CPU, 0.305s wall-clock]
Reordering and filtering variables...
233 of 233 variables necessary.
1 of 3 mutex groups necessary.
12351 of 12351 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.140s CPU, 0.138s wall-clock]
Translator variables: 233
Translator derived variables: 0
Translator facts: 469
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 12351
Translator axioms: 0
Translator task size: 141918
Translator peak memory: 108628 KB
Writing output... [0.090s CPU, 0.090s wall-clock]
Done! [1.930s CPU, 1.939s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt11-strips/p07/output.sas
INFO     search time limit: 298.01s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt11-strips/p07/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt11-strips/p07/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0479986s, 15256 KB] done reading input!
[t=0.0479986s, 15520 KB] Initializing landmark count heuristic...
[t=0.0479986s, 15520 KB] Generating landmark graph...
[t=0.0519997s, 15916 KB] Building a landmark graph with reasonable orders.
[t=0.0519997s, 16312 KB] Initializing Exploration...
[t=0.0600014s, 30664 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.152002s, 30800 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.156002s, 30800 KB] Landmarks generation time: 0.104002s
[t=0.156002s, 30800 KB] Discovered 24 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.156002s, 30800 KB] 36 edges
[t=0.156002s, 30800 KB] approx. reasonable orders
[t=0.156002s, 30800 KB] approx. obedient reasonable orders
[t=0.156002s, 30800 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.156002s, 30800 KB] Landmarks generation time: 0.108003s
[t=0.156002s, 30800 KB] Discovered 24 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.156002s, 30800 KB] 36 edges
[t=0.156002s, 30800 KB] Landmark graph generation time: 0.108003s
[t=0.156002s, 30800 KB] Landmark graph contains 24 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.156002s, 30800 KB] Landmark graph contains 36 orderings.
[t=0.160002s, 30800 KB] Simplifying 66354 unary operators... done! [65970 unary operators]
[t=0.391891s, 30800 KB] time to simplify: 0.231889s
[t=0.391891s, 30800 KB] Initializing additive heuristic...
[t=0.391891s, 30800 KB] Initializing FF heuristic...
[t=0.391891s, 30800 KB] Building successor generator...done!
[t=0.395888s, 30800 KB] peak memory difference for successor generator creation: 0 KB
[t=0.395888s, 30800 KB] time for successor generation creation: 0.00399759s
[t=0.395888s, 30800 KB] Variables: 233
[t=0.395888s, 30800 KB] FactPairs: 469
[t=0.395888s, 30800 KB] Bytes per state: 32
[t=0.395888s, 30800 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.395888s, 30800 KB] 14 initial landmarks, 4 goal landmarks
[t=0.399888s, 30800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.399888s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.399888s, 30800 KB] g=0, 1 evaluated, 0 expanded
[t=0.399888s, 30800 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.399888s, 30800 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.399888s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.399888s, 30800 KB] g=1, 4 evaluated, 3 expanded
[t=0.399888s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.399888s, 30800 KB] g=2, 5 evaluated, 4 expanded
[t=0.399888s, 30800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.399888s, 30800 KB] g=1, 6 evaluated, 5 expanded
[t=0.399888s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.399888s, 30800 KB] g=3, 9 evaluated, 8 expanded
[t=0.403887s, 30800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.403887s, 30800 KB] g=2, 14 evaluated, 13 expanded
[t=0.403887s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.403887s, 30800 KB] g=4, 15 evaluated, 14 expanded
[t=0.407887s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.407887s, 30800 KB] g=5, 21 evaluated, 20 expanded
[t=0.411888s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.411888s, 30800 KB] g=7, 30 evaluated, 29 expanded
[t=0.411888s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.411888s, 30800 KB] g=7, 37 evaluated, 36 expanded
[t=0.411888s, 30800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.411888s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.411888s, 30800 KB] g=9, 41 evaluated, 40 expanded
[t=0.415886s, 30800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.415886s, 30800 KB] g=12, 45 evaluated, 44 expanded
[t=0.415886s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.415886s, 30800 KB] g=13, 46 evaluated, 45 expanded
[t=0.415886s, 30800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.415886s, 30800 KB] g=14, 47 evaluated, 46 expanded
[t=0.579887s, 30800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.579887s, 30800 KB] g=18, 641 evaluated, 592 expanded
[t=0.579887s, 30800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.579887s, 30800 KB] g=19, 644 evaluated, 595 expanded
[t=0.579887s, 30800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.579887s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.579887s, 30800 KB] g=21, 647 evaluated, 598 expanded
[t=0.579887s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.579887s, 30800 KB] g=22, 648 evaluated, 599 expanded
[t=0.579887s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.579887s, 30800 KB] g=24, 650 evaluated, 601 expanded
[t=0.579887s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.579887s, 30800 KB] g=25, 651 evaluated, 602 expanded
[t=0.579887s, 30800 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.579887s, 30800 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.579887s, 30800 KB] g=26, 652 evaluated, 603 expanded
[t=0.579887s, 30800 KB] Solution found!
[t=0.579887s, 30800 KB] Actual search time: 0.183998s
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-right pr2 x1 x2 y0 (1)
finish-object object0 x2 y2 (1)
base-down pr2 x2 y0 y1 (1)
base-down pr2 x2 y1 y2 (1)
park pr2 (1)
get-down pr2 x2 y2 xrel0 x2 yrel0 y2 object3 y3 (1)
gripper-down pr2 x2 y2 xrel0 x2 yrel0 yrel1 y2 y3 (1)
put-up pr2 x2 y2 xrel0 x2 yrel1 y3 object3 y2 (1)
get-right pr2 x2 y2 xrel0 x2 yrel1 y3 object1 x3 (1)
gripper-right pr2 x2 y2 xrel0 xrel1 x2 x3 yrel1 y3 (1)
put-left pr2 x2 y2 xrel1 x3 yrel1 y3 object1 x2 (1)
finish-object object1 x2 y3 (1)
get-up pr2 x2 y2 xrel1 x3 yrel1 y3 object2 y2 (1)
gripper-up pr2 x2 y2 xrel1 x3 yrel1 yrel0 y3 y2 (1)
gripper-up pr2 x2 y2 xrel1 x3 yrel0 yrel-1 y2 y1 (1)
put-down pr2 x2 y2 xrel1 x3 yrel-1 y1 object2 y2 (1)
finish-object object2 x3 y2 (1)
gripper-left pr2 x2 y2 xrel1 xrel0 x3 x2 yrel-1 y1 (1)
get-down pr2 x2 y2 xrel0 x2 yrel-1 y1 object3 y2 (1)
gripper-down pr2 x2 y2 xrel0 x2 yrel-1 yrel0 y1 y2 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x2 x3 y2 (1)
park pr2 (1)
put-down pr2 x3 y2 xrel0 x3 yrel0 y2 object3 y3 (1)
finish-object object3 x3 y3 (1)
[t=0.579887s, 30800 KB] Plan length: 27 step(s).
[t=0.579887s, 30800 KB] Plan cost: 27
[t=0.579887s, 30800 KB] Expanded 604 state(s).
[t=0.579887s, 30800 KB] Reopened 0 state(s).
[t=0.579887s, 30800 KB] Evaluated 653 state(s).
[t=0.579887s, 30800 KB] Evaluations: 1258
[t=0.579887s, 30800 KB] Generated 1673 state(s).
[t=0.579887s, 30800 KB] Dead ends: 48 state(s).
[t=0.579887s, 30800 KB] Number of registered states: 653
[t=0.579887s, 30800 KB] Int hash set load factor: 653/1024 = 0.637695
[t=0.579887s, 30800 KB] Int hash set resizes: 10
[t=0.579887s, 30800 KB] Search time: 0.183998s
[t=0.579887s, 30800 KB] Total time: 0.579887s
Solution found.
Peak memory: 30800 KB
search exit code: 0

INFO     Planner time: 2.6s
