INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/tidybot-opt11-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/tidybot-opt11-strips/p04.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt11-strips/p04/output.sas
Parsing...
Parsing: [0.010s CPU, 0.004s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.001s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.013s wall-clock]
Preparing model... [0.000s CPU, 0.003s wall-clock]
Generated 400 rules.
Computing model... [0.110s CPU, 0.110s wall-clock]
8002 relevant atoms
14467 auxiliary atoms
22469 final queue length
43835 total queue pushes
Completing instantiation... [0.260s CPU, 0.265s wall-clock]
Instantiating: [0.390s CPU, 0.396s wall-clock]
Computing fact groups...
Finding invariants...
41 initial candidates
Finding invariants: [0.010s CPU, 0.015s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
179 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.010s CPU, 0.016s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.010s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.010s CPU, 0.014s wall-clock]
Translating task: [0.340s CPU, 0.345s wall-clock]
16333 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
2 propositions removed
Detecting unreachable propositions: [0.160s CPU, 0.162s wall-clock]
Reordering and filtering variables...
181 of 181 variables necessary.
1 of 3 mutex groups necessary.
7687 of 7687 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.080s CPU, 0.077s wall-clock]
Translator variables: 181
Translator derived variables: 0
Translator facts: 365
Translator goal facts: 4
Translator mutex groups: 1
Translator total mutex groups size: 2
Translator operators: 7687
Translator axioms: 0
Translator task size: 84888
Translator peak memory: 76856 KB
Writing output... [0.050s CPU, 0.052s wall-clock]
Done! [1.070s CPU, 1.066s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt11-strips/p04/output.sas
INFO     search time limit: 298.88s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt11-strips/p04/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/tidybot-opt11-strips/p04/output.sas
[t=0s, 9880 KB] reading input...
[t=0.027945s, 13104 KB] done reading input!
[t=0.027945s, 13368 KB] Initializing landmark count heuristic...
[t=0.027945s, 13368 KB] Generating landmark graph...
[t=0.027945s, 13632 KB] Building a landmark graph with reasonable orders.
[t=0.027945s, 13896 KB] Initializing Exploration...
[t=0.0359471s, 21516 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0799475s, 21784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0799475s, 21784 KB] Landmarks generation time: 0.0520025s
[t=0.0799475s, 21784 KB] Discovered 29 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0799475s, 21784 KB] 50 edges
[t=0.0799475s, 21784 KB] approx. reasonable orders
[t=0.0799475s, 21784 KB] approx. obedient reasonable orders
[t=0.0799475s, 21784 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0799475s, 21784 KB] Landmarks generation time: 0.0520025s
[t=0.0799475s, 21784 KB] Discovered 29 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0799475s, 21784 KB] 50 edges
[t=0.0799475s, 21784 KB] Landmark graph generation time: 0.0520025s
[t=0.0799475s, 21784 KB] Landmark graph contains 29 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0799475s, 21784 KB] Landmark graph contains 50 orderings.
[t=0.0839468s, 21784 KB] Simplifying 37516 unary operators... done! [37132 unary operators]
[t=0.151945s, 21784 KB] time to simplify: 0.0679985s
[t=0.151945s, 21784 KB] Initializing additive heuristic...
[t=0.151945s, 21784 KB] Initializing FF heuristic...
[t=0.151945s, 21784 KB] Building successor generator...done!
[t=0.155946s, 21784 KB] peak memory difference for successor generator creation: 0 KB
[t=0.155946s, 21784 KB] time for successor generation creation: 0.00400118s
[t=0.155946s, 21784 KB] Variables: 181
[t=0.155946s, 21784 KB] FactPairs: 365
[t=0.155946s, 21784 KB] Bytes per state: 24
[t=0.155946s, 21784 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.155946s, 21784 KB] 16 initial landmarks, 4 goal landmarks
[t=0.155946s, 21784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.155946s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.155946s, 21784 KB] g=0, 1 evaluated, 0 expanded
[t=0.155946s, 21784 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.155946s, 21784 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.159946s, 21784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.159946s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.159946s, 21784 KB] g=1, 5 evaluated, 4 expanded
[t=0.159946s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 24
[t=0.159946s, 21784 KB] g=5, 15 evaluated, 14 expanded
[t=0.163945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.163945s, 21784 KB] g=5, 25 evaluated, 24 expanded
[t=0.207945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.207945s, 21784 KB] g=14, 244 evaluated, 243 expanded
[t=0.211945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.211945s, 21784 KB] g=16, 247 evaluated, 246 expanded
[t=0.211945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.211945s, 21784 KB] g=16, 251 evaluated, 250 expanded
[t=0.211945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.211945s, 21784 KB] g=17, 253 evaluated, 252 expanded
[t=0.211945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.211945s, 21784 KB] g=18, 257 evaluated, 256 expanded
[t=0.211945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.211945s, 21784 KB] g=19, 260 evaluated, 259 expanded
[t=0.211945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.211945s, 21784 KB] g=20, 263 evaluated, 262 expanded
[t=0.215945s, 21784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.215945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.215945s, 21784 KB] g=24, 273 evaluated, 272 expanded
[t=0.215945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.215945s, 21784 KB] g=25, 274 evaluated, 273 expanded
[t=0.215945s, 21784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.215945s, 21784 KB] g=26, 275 evaluated, 274 expanded
[t=0.215945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.215945s, 21784 KB] g=27, 276 evaluated, 275 expanded
[t=0.215945s, 21784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.215945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.215945s, 21784 KB] g=28, 277 evaluated, 276 expanded
[t=0.215945s, 21784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.215945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.215945s, 21784 KB] g=29, 279 evaluated, 278 expanded
[t=0.215945s, 21784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.215945s, 21784 KB] g=31, 281 evaluated, 280 expanded
[t=0.219945s, 21784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.219945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.219945s, 21784 KB] g=33, 296 evaluated, 295 expanded
[t=0.219945s, 21784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.219945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 4
[t=0.219945s, 21784 KB] g=34, 297 evaluated, 296 expanded
[t=0.219945s, 21784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 3
[t=0.219945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.219945s, 21784 KB] g=35, 298 evaluated, 297 expanded
[t=0.219945s, 21784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.219945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.219945s, 21784 KB] g=36, 299 evaluated, 298 expanded
[t=0.219945s, 21784 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.219945s, 21784 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.219945s, 21784 KB] g=37, 300 evaluated, 299 expanded
[t=0.219945s, 21784 KB] Solution found!
[t=0.219945s, 21784 KB] Actual search time: 0.0639987s
finish-object object3 x3 y3 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x0 x1 y0 (1)
base-right pr2 x1 x2 y0 (1)
base-right pr2 x2 x3 y0 (1)
base-right pr2 x3 x4 y0 (1)
park pr2 (1)
gripper-left pr2 x4 y0 xrel0 xrel-1 x4 x3 yrel0 y0 (1)
gripper-right pr2 x4 y0 xrel-1 xrel0 x3 x4 yrel0 y0 (1)
unpark pr2 xrel0 yrel0 (1)
base-right pr2 x4 x5 y0 (1)
base-down pr2 x5 y0 y1 (1)
base-down pr2 x5 y1 y2 (1)
base-down pr2 x5 y2 y3 (1)
base-down pr2 x5 y3 y4 (1)
base-down pr2 x5 y4 y5 (1)
base-left pr2 x5 x4 y5 (1)
base-left pr2 x4 x3 y5 (1)
base-up pr2 x3 y5 y4 (1)
base-up pr2 x3 y4 y3 (1)
base-up pr2 x3 y3 y2 (1)
base-left pr2 x3 x2 y2 (1)
park pr2 (1)
get-down pr2 x2 y2 xrel0 x2 yrel0 y2 object2 y3 (1)
gripper-down pr2 x2 y2 xrel0 x2 yrel0 yrel1 y2 y3 (1)
put-up pr2 x2 y2 xrel0 x2 yrel1 y3 object2 y2 (1)
get-up pr2 x2 y2 xrel0 x2 yrel1 y3 object1 y2 (1)
gripper-up pr2 x2 y2 xrel0 x2 yrel1 yrel0 y3 y2 (1)
put-down pr2 x2 y2 xrel0 x2 yrel0 y2 object1 y3 (1)
get-right pr2 x2 y2 xrel0 x2 yrel0 y2 object0 x3 (1)
gripper-right pr2 x2 y2 xrel0 xrel1 x2 x3 yrel0 y2 (1)
put-left pr2 x2 y2 xrel1 x3 yrel0 y2 object0 x2 (1)
get-left pr2 x2 y2 xrel1 x3 yrel0 y2 object2 x2 (1)
gripper-left pr2 x2 y2 xrel1 xrel0 x3 x2 yrel0 y2 (1)
put-right pr2 x2 y2 xrel0 x2 yrel0 y2 object2 x3 (1)
finish-object object0 x2 y2 (1)
finish-object object1 x2 y3 (1)
finish-object object2 x3 y2 (1)
[t=0.219945s, 21784 KB] Plan length: 38 step(s).
[t=0.219945s, 21784 KB] Plan cost: 38
[t=0.219945s, 21784 KB] Expanded 300 state(s).
[t=0.219945s, 21784 KB] Reopened 0 state(s).
[t=0.219945s, 21784 KB] Evaluated 301 state(s).
[t=0.219945s, 21784 KB] Evaluations: 602
[t=0.219945s, 21784 KB] Generated 758 state(s).
[t=0.219945s, 21784 KB] Dead ends: 0 state(s).
[t=0.219945s, 21784 KB] Number of registered states: 301
[t=0.219945s, 21784 KB] Int hash set load factor: 301/512 = 0.587891
[t=0.219945s, 21784 KB] Int hash set resizes: 9
[t=0.219945s, 21784 KB] Search time: 0.0639987s
[t=0.219945s, 21784 KB] Total time: 0.219945s
Solution found.
Peak memory: 21784 KB
search exit code: 0

INFO     Planner time: 1.3s
