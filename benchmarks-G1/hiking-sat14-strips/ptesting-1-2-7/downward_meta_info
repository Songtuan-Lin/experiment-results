INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.99s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/hiking-sat14-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/hiking-sat14-strips/ptesting-1-2-7.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/hiking-sat14-strips/ptesting-1-2-7/output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.010s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 74 rules.
Computing model... [0.010s CPU, 0.010s wall-clock]
1301 relevant atoms
645 auxiliary atoms
1946 final queue length
5679 total queue pushes
Completing instantiation... [0.020s CPU, 0.021s wall-clock]
Instantiating: [0.040s CPU, 0.034s wall-clock]
Computing fact groups...
Finding invariants...
16 initial candidates
Finding invariants: [0.000s CPU, 0.004s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.000s CPU, 0.004s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.000s CPU, 0.001s wall-clock]
Translating task: [0.020s CPU, 0.017s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
7 propositions removed
Detecting unreachable propositions: [0.010s CPU, 0.007s wall-clock]
Reordering and filtering variables...
7 of 7 variables necessary.
0 of 8 mutex groups necessary.
706 of 706 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.000s CPU, 0.003s wall-clock]
Translator variables: 7
Translator derived variables: 0
Translator facts: 44
Translator goal facts: 1
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 706
Translator axioms: 0
Translator task size: 5286
Translator peak memory: 32400 KB
Writing output... [0.000s CPU, 0.003s wall-clock]
Done! [0.070s CPU, 0.071s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/hiking-sat14-strips/ptesting-1-2-7/output.sas
INFO     search time limit: 299.89s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/hiking-sat14-strips/ptesting-1-2-7/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/hiking-sat14-strips/ptesting-1-2-7/output.sas
[t=0s, 9880 KB] reading input...
[t=0.00277178s, 10004 KB] done reading input!
[t=0.00277178s, 10400 KB] Initializing landmark count heuristic...
[t=0.00277178s, 10400 KB] Generating landmark graph...
[t=0.00277178s, 10400 KB] Building a landmark graph with reasonable orders.
[t=0.00277178s, 10400 KB] Initializing Exploration...
[t=0.00277178s, 10956 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.0067712s, 11080 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0067712s, 11080 KB] Landmarks generation time: 0.00399942s
[t=0.0067712s, 11080 KB] Discovered 28 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0067712s, 11080 KB] 103 edges
[t=0.0067712s, 11080 KB] approx. reasonable orders
[t=0.0067712s, 11080 KB] approx. obedient reasonable orders
[t=0.0067712s, 11080 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.0067712s, 11080 KB] Landmarks generation time: 0.00399942s
[t=0.0067712s, 11080 KB] Discovered 28 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0067712s, 11080 KB] 124 edges
[t=0.0067712s, 11080 KB] Landmark graph generation time: 0.00399942s
[t=0.0067712s, 11080 KB] Landmark graph contains 28 landmarks, of which 0 are disjunctive and 0 are conjunctive.
[t=0.0067712s, 11080 KB] Landmark graph contains 124 orderings.
[t=0.0067712s, 11080 KB] Simplifying 2062 unary operators... done! [550 unary operators]
[t=0.0067712s, 11080 KB] time to simplify: 0s
[t=0.0067712s, 11080 KB] Initializing additive heuristic...
[t=0.0067712s, 11080 KB] Initializing FF heuristic...
[t=0.0067712s, 11080 KB] Building successor generator...done!
[t=0.0067712s, 11080 KB] peak memory difference for successor generator creation: 0 KB
[t=0.0067712s, 11080 KB] time for successor generation creation: 0s
[t=0.0067712s, 11080 KB] Variables: 7
[t=0.0067712s, 11080 KB] FactPairs: 44
[t=0.0067712s, 11080 KB] Bytes per state: 4
[t=0.0067712s, 11080 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.0067712s, 11080 KB] 5 initial landmarks, 1 goal landmarks
[t=0.0067712s, 11080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0067712s, 11080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0067712s, 11080 KB] g=0, 1 evaluated, 0 expanded
[t=0.0067712s, 11080 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 23
[t=0.0067712s, 11080 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 23
[t=0.0067712s, 11080 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 22
[t=0.0067712s, 11080 KB] New best heuristic value for ff(transform = adapt_costs(one)): 22
[t=0.0067712s, 11080 KB] g=1, 2 evaluated, 1 expanded
[t=0.0347701s, 11372 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 19
[t=0.0347701s, 11372 KB] New best heuristic value for ff(transform = adapt_costs(one)): 19
[t=0.0347701s, 11372 KB] g=5, 2365 evaluated, 2363 expanded
[t=0.0347701s, 11372 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 18
[t=0.0347701s, 11372 KB] New best heuristic value for ff(transform = adapt_costs(one)): 18
[t=0.0347701s, 11372 KB] g=7, 2375 evaluated, 2373 expanded
[t=0.0347701s, 11372 KB] New best heuristic value for ff(transform = adapt_costs(one)): 17
[t=0.0347701s, 11372 KB] g=8, 2380 evaluated, 2378 expanded
[t=0.0787697s, 12436 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 15
[t=0.0787697s, 12436 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.0787697s, 12436 KB] g=15, 6290 evaluated, 6285 expanded
[t=0.0787697s, 12436 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.0787697s, 12436 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.0787697s, 12436 KB] g=17, 6298 evaluated, 6293 expanded
[t=0.0787697s, 12568 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.0787697s, 12568 KB] g=18, 6302 evaluated, 6297 expanded
[t=0.10277s, 13220 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.10277s, 13220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.10277s, 13220 KB] g=25, 8662 evaluated, 8654 expanded
[t=0.10277s, 13220 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.10277s, 13220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.10277s, 13220 KB] g=27, 8668 evaluated, 8660 expanded
[t=0.10277s, 13220 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.10277s, 13220 KB] g=28, 8671 evaluated, 8663 expanded
[t=0.11077s, 13352 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.11077s, 13352 KB] g=35, 9450 evaluated, 9438 expanded
[t=0.11877s, 13616 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 6
[t=0.11877s, 13616 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.11877s, 13616 KB] g=45, 10274 evaluated, 10261 expanded
[t=0.11877s, 13616 KB] New best heuristic value for ff(transform = adapt_costs(one)): 6
[t=0.11877s, 13616 KB] g=47, 10278 evaluated, 10265 expanded
[t=0.11877s, 13616 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 5
[t=0.11877s, 13616 KB] New best heuristic value for ff(transform = adapt_costs(one)): 5
[t=0.11877s, 13616 KB] g=48, 10281 evaluated, 10268 expanded
[t=0.13077s, 13884 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 2
[t=0.13077s, 13884 KB] New best heuristic value for ff(transform = adapt_costs(one)): 3
[t=0.13077s, 13884 KB] g=55, 11334 evaluated, 11318 expanded
[t=0.13077s, 13884 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.13077s, 13884 KB] g=58, 11337 evaluated, 11321 expanded
[t=0.13077s, 13884 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.13077s, 13884 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.13077s, 13884 KB] g=59, 11338 evaluated, 11322 expanded
[t=0.13077s, 13884 KB] Solution found!
[t=0.13077s, 13884 KB] Actual search time: 0.123998s
drive_tent girl0 place0 place1 car0 tent0 (1)
put_up girl0 place1 tent0 (1)
drive guy0 place0 place1 car1 (1)
drive_passenger girl0 place1 place0 car0 guy0 (1)
walk_together tent0 place1 guy0 place0 girl0 couple0 (1)
put_down girl0 place1 tent0 (1)
drive_tent girl0 place1 place2 car1 tent0 (1)
drive girl0 place2 place1 car1 (1)
drive_passenger girl0 place1 place0 car1 guy0 (1)
drive girl0 place0 place2 car0 (1)
drive guy0 place0 place1 car1 (1)
put_up girl0 place2 tent0 (1)
drive guy0 place1 place2 car1 (1)
drive_passenger girl0 place2 place1 car0 guy0 (1)
walk_together tent0 place2 guy0 place1 girl0 couple0 (1)
put_down girl0 place2 tent0 (1)
drive_tent girl0 place2 place3 car1 tent0 (1)
drive girl0 place3 place2 car1 (1)
drive_passenger girl0 place2 place1 car1 guy0 (1)
drive girl0 place1 place3 car0 (1)
drive guy0 place1 place2 car1 (1)
put_up girl0 place3 tent0 (1)
drive guy0 place2 place3 car1 (1)
drive_passenger girl0 place3 place2 car0 guy0 (1)
walk_together tent0 place3 guy0 place2 girl0 couple0 (1)
put_down girl0 place3 tent0 (1)
drive_tent girl0 place3 place4 car1 tent0 (1)
drive girl0 place4 place3 car1 (1)
drive_passenger girl0 place3 place2 car1 guy0 (1)
drive girl0 place2 place4 car0 (1)
drive guy0 place2 place3 car1 (1)
drive_tent girl0 place4 place5 car0 tent0 (1)
drive girl0 place5 place4 car0 (1)
drive guy0 place3 place5 car1 (1)
drive_tent guy0 place5 place6 car1 tent0 (1)
put_up guy0 place6 tent0 (1)
drive guy0 place6 place3 car1 (1)
drive guy0 place3 place4 car1 (1)
drive_passenger girl0 place4 place3 car0 guy0 (1)
drive girl0 place3 place6 car0 (1)
put_down girl0 place6 tent0 (1)
drive_tent girl0 place6 place4 car0 tent0 (1)
put_up girl0 place4 tent0 (1)
drive girl0 place4 place3 car0 (1)
walk_together tent0 place4 guy0 place3 girl0 couple0 (1)
put_down girl0 place4 tent0 (1)
drive_tent girl0 place4 place5 car1 tent0 (1)
put_up girl0 place5 tent0 (1)
drive girl0 place5 place4 car1 (1)
drive_passenger girl0 place4 place3 car1 guy0 (1)
drive girl0 place3 place5 car0 (1)
drive guy0 place3 place4 car1 (1)
drive guy0 place4 place5 car1 (1)
drive_passenger girl0 place5 place4 car0 guy0 (1)
walk_together tent0 place5 guy0 place4 girl0 couple0 (1)
put_down girl0 place5 tent0 (1)
drive_tent girl0 place5 place6 car1 tent0 (1)
put_up girl0 place6 tent0 (1)
drive girl0 place6 place5 car1 (1)
walk_together tent0 place6 guy0 place5 girl0 couple0 (1)
[t=0.13077s, 13884 KB] Plan length: 60 step(s).
[t=0.13077s, 13884 KB] Plan cost: 60
[t=0.13077s, 13884 KB] Expanded 11323 state(s).
[t=0.13077s, 13884 KB] Reopened 0 state(s).
[t=0.13077s, 13884 KB] Evaluated 11339 state(s).
[t=0.13077s, 13884 KB] Evaluations: 22663
[t=0.13077s, 13884 KB] Generated 142427 state(s).
[t=0.13077s, 13884 KB] Dead ends: 15 state(s).
[t=0.13077s, 13884 KB] Number of registered states: 11339
[t=0.13077s, 13884 KB] Int hash set load factor: 11339/16384 = 0.692078
[t=0.13077s, 13884 KB] Int hash set resizes: 14
[t=0.13077s, 13884 KB] Search time: 0.123998s
[t=0.13077s, 13884 KB] Total time: 0.13077s
Solution found.
Peak memory: 13884 KB
search exit code: 0

INFO     Planner time: 0.25s
