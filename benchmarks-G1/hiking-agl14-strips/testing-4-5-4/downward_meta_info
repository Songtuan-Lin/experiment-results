INFO     planner time limit: 300s
INFO     planner memory limit: None

INFO     Running translator.
INFO     translator stdin: None
INFO     translator time limit: 299.98s
INFO     translator memory limit: None
INFO     translator command line string: /home/users/u6162630/Packages/anaconda3/bin/python /home/users/u6162630/Codes/downward/builds/release/bin/translate/translate.py /home/users/u6162630/Datasets/downward-benchmarks/hiking-agl14-strips/domain.pddl /home/users/u6162630/Datasets/downward-benchmarks/hiking-agl14-strips/testing-4-5-4.pddl --sas-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/hiking-agl14-strips/testing-4-5-4/output.sas
Parsing...
Parsing: [0.000s CPU, 0.001s wall-clock]
Normalizing task... [0.000s CPU, 0.000s wall-clock]
Instantiating...
Generating Datalog program... [0.000s CPU, 0.000s wall-clock]
Normalizing Datalog program...
Normalizing Datalog program: [0.000s CPU, 0.002s wall-clock]
Preparing model... [0.000s CPU, 0.001s wall-clock]
Generated 74 rules.
Computing model... [0.200s CPU, 0.200s wall-clock]
29279 relevant atoms
8739 auxiliary atoms
38018 final queue length
144591 total queue pushes
Completing instantiation... [1.020s CPU, 1.021s wall-clock]
Instantiating: [1.220s CPU, 1.230s wall-clock]
Computing fact groups...
Finding invariants...
16 initial candidates
Finding invariants: [0.020s CPU, 0.015s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.000s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
0 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.016s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Translator axioms removed by simplifying: 0
Computing negative axioms... [0.000s CPU, 0.000s wall-clock]
Processing axioms: [0.040s CPU, 0.039s wall-clock]
Translating task: [0.700s CPU, 0.695s wall-clock]
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
0 operators removed
0 axioms removed
25 propositions removed
Detecting unreachable propositions: [0.360s CPU, 0.361s wall-clock]
Reordering and filtering variables...
25 of 25 variables necessary.
0 of 25 mutex groups necessary.
19504 of 19504 operators necessary.
0 of 0 axiom rules necessary.
Reordering and filtering variables: [0.100s CPU, 0.099s wall-clock]
Translator variables: 25
Translator derived variables: 0
Translator facts: 92
Translator goal facts: 4
Translator mutex groups: 0
Translator total mutex groups size: 0
Translator operators: 19504
Translator axioms: 0
Translator task size: 177513
Translator peak memory: 160040 KB
Writing output... [0.100s CPU, 0.100s wall-clock]
Done! [2.530s CPU, 2.540s wall-clock]
translate exit code: 0

INFO     Running search (release).
INFO     search stdin: /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/hiking-agl14-strips/testing-4-5-4/output.sas
INFO     search time limit: 297.4s
INFO     search memory limit: None
INFO     search command line string: /home/users/u6162630/Codes/downward/builds/release/bin/downward --evaluator 'hlm=lmcount(lm_factory=lm_reasonable_orders_hps(lm_rhw()),transform=adapt_costs(one),pref=false)' --evaluator 'hff=ff(transform=adapt_costs(one))' --search 'lazy_greedy([hff,hlm],preferred=[hff,hlm],cost_type=one,reopen_closed=false)' --internal-plan-file /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/hiking-agl14-strips/testing-4-5-4/sas_plan < /home/users/u6162630/Datasets/fuzzy-neg-prec-domains/hiking-agl14-strips/testing-4-5-4/output.sas
[t=0s, 9880 KB] reading input...
[t=0.0571984s, 16984 KB] done reading input!
[t=0.0571984s, 17380 KB] Initializing landmark count heuristic...
[t=0.0571984s, 17380 KB] Generating landmark graph...
[t=0.0571984s, 17916 KB] Building a landmark graph with reasonable orders.
[t=0.0571984s, 18316 KB] Initializing Exploration...
[t=0.0691993s, 32896 KB] Generating landmarks using the RPG/SAS+ approach
[t=0.253199s, 36000 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.257199s, 36000 KB] Landmarks generation time: 0.200001s
[t=0.257199s, 36000 KB] Discovered 43 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.257199s, 36000 KB] 96 edges
[t=0.257199s, 36000 KB] approx. reasonable orders
[t=0.257199s, 36000 KB] approx. obedient reasonable orders
[t=0.257199s, 36000 KB] Removed 0 reasonable or obedient reasonable orders
[t=0.257199s, 36000 KB] Landmarks generation time: 0.200001s
[t=0.257199s, 36000 KB] Discovered 43 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.257199s, 36000 KB] 100 edges
[t=0.257199s, 36000 KB] Landmark graph generation time: 0.200001s
[t=0.257199s, 36000 KB] Landmark graph contains 43 landmarks, of which 3 are disjunctive and 0 are conjunctive.
[t=0.257199s, 36000 KB] Landmark graph contains 100 orderings.
[t=0.2612s, 36000 KB] Simplifying 70960 unary operators... done! [3280 unary operators]
[t=0.289199s, 36000 KB] time to simplify: 0.0279988s
[t=0.289199s, 36000 KB] Initializing additive heuristic...
[t=0.289199s, 36000 KB] Initializing FF heuristic...
[t=0.289199s, 36000 KB] Building successor generator...done!
[t=0.293199s, 36000 KB] peak memory difference for successor generator creation: 0 KB
[t=0.293199s, 36000 KB] time for successor generation creation: 0.00400069s
[t=0.293199s, 36000 KB] Variables: 25
[t=0.293199s, 36000 KB] FactPairs: 92
[t=0.293199s, 36000 KB] Bytes per state: 8
[t=0.293199s, 36000 KB] Conducting lazy best first search, (real) bound = 2147483647
[t=0.293199s, 36000 KB] 12 initial landmarks, 4 goal landmarks
[t=0.293199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.293199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.293199s, 36000 KB] g=0, 1 evaluated, 0 expanded
[t=0.293199s, 36000 KB] Initial heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 31
[t=0.293199s, 36000 KB] Initial heuristic value for ff(transform = adapt_costs(one)): 32
[t=0.293199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 30
[t=0.293199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 31
[t=0.293199s, 36000 KB] g=1, 2 evaluated, 1 expanded
[t=0.301199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 27
[t=0.301199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 29
[t=0.301199s, 36000 KB] g=3, 22 evaluated, 21 expanded
[t=0.301199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 28
[t=0.301199s, 36000 KB] g=4, 23 evaluated, 22 expanded
[t=0.301199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 26
[t=0.301199s, 36000 KB] g=5, 24 evaluated, 23 expanded
[t=0.301199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 24
[t=0.301199s, 36000 KB] g=4, 25 evaluated, 24 expanded
[t=0.301199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 25
[t=0.301199s, 36000 KB] g=5, 26 evaluated, 25 expanded
[t=0.301199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 21
[t=0.301199s, 36000 KB] g=6, 27 evaluated, 26 expanded
[t=0.301199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 21
[t=0.301199s, 36000 KB] g=5, 28 evaluated, 27 expanded
[t=0.305199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 16
[t=0.305199s, 36000 KB] g=7, 55 evaluated, 54 expanded
[t=0.305199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 20
[t=0.305199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 15
[t=0.305199s, 36000 KB] g=10, 79 evaluated, 78 expanded
[t=0.305199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 17
[t=0.305199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 14
[t=0.305199s, 36000 KB] g=11, 81 evaluated, 80 expanded
[t=0.305199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 14
[t=0.305199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 13
[t=0.305199s, 36000 KB] g=12, 83 evaluated, 82 expanded
[t=0.309199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 13
[t=0.309199s, 36000 KB] g=13, 85 evaluated, 84 expanded
[t=0.309199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 12
[t=0.309199s, 36000 KB] g=14, 88 evaluated, 87 expanded
[t=0.309199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 11
[t=0.309199s, 36000 KB] g=15, 96 evaluated, 95 expanded
[t=0.309199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 12
[t=0.309199s, 36000 KB] g=16, 106 evaluated, 105 expanded
[t=0.309199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 11
[t=0.309199s, 36000 KB] g=18, 140 evaluated, 139 expanded
[t=0.313199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 10
[t=0.313199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 10
[t=0.313199s, 36000 KB] g=19, 141 evaluated, 140 expanded
[t=0.313199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 9
[t=0.313199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 9
[t=0.313199s, 36000 KB] g=20, 142 evaluated, 141 expanded
[t=0.313199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 8
[t=0.313199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 8
[t=0.313199s, 36000 KB] g=21, 143 evaluated, 142 expanded
[t=0.313199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 7
[t=0.313199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 7
[t=0.313199s, 36000 KB] g=22, 144 evaluated, 143 expanded
[t=0.313199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 4
[t=0.313199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 2
[t=0.313199s, 36000 KB] g=24, 149 evaluated, 148 expanded
[t=0.313199s, 36000 KB] New best heuristic value for lmcount(lm_factory = lm_reasonable_orders_hps(lm_rhw), transform = adapt_costs(one), pref = false): 1
[t=0.313199s, 36000 KB] New best heuristic value for ff(transform = adapt_costs(one)): 1
[t=0.313199s, 36000 KB] g=25, 150 evaluated, 149 expanded
[t=0.313199s, 36000 KB] Solution found!
[t=0.313199s, 36000 KB] Actual search time: 0.0199993s
drive_tent girl0 place0 place1 car0 tent0 (1)
put_up girl0 place1 tent0 (1)
walk_together tent0 place1 guy1 place0 girl1 couple1 (1)
walk_together tent0 place1 guy2 place0 girl2 couple2 (1)
walk_together tent0 place1 guy3 place0 girl3 couple3 (1)
put_down girl0 place1 tent0 (1)
drive_tent girl0 place1 place2 car0 tent0 (1)
drive guy0 place0 place2 car3 (1)
put_up girl0 place2 tent0 (1)
walk_together tent0 place2 guy1 place1 girl1 couple1 (1)
walk_together tent0 place2 guy2 place1 girl2 couple2 (1)
walk_together tent0 place2 guy3 place1 girl3 couple3 (1)
drive girl0 place2 place0 car3 (1)
drive_tent girl0 place0 place1 car1 tent2 (1)
drive guy0 place2 place0 car0 (1)
put_up girl0 place1 tent2 (1)
drive_tent guy0 place0 place3 car0 tent3 (1)
put_up guy0 place3 tent3 (1)
walk_together tent3 place3 guy1 place2 girl1 couple1 (1)
walk_together tent3 place3 guy2 place2 girl2 couple2 (1)
walk_together tent3 place3 guy3 place2 girl3 couple3 (1)
drive guy0 place3 place0 car0 (1)
drive girl0 place1 place0 car1 (1)
walk_together tent2 place1 guy0 place0 girl0 couple0 (1)
walk_together tent0 place2 guy0 place1 girl0 couple0 (1)
walk_together tent3 place3 guy0 place2 girl0 couple0 (1)
[t=0.313199s, 36000 KB] Plan length: 26 step(s).
[t=0.313199s, 36000 KB] Plan cost: 26
[t=0.313199s, 36000 KB] Expanded 150 state(s).
[t=0.313199s, 36000 KB] Reopened 0 state(s).
[t=0.313199s, 36000 KB] Evaluated 151 state(s).
[t=0.313199s, 36000 KB] Evaluations: 302
[t=0.313199s, 36000 KB] Generated 52107 state(s).
[t=0.313199s, 36000 KB] Dead ends: 0 state(s).
[t=0.313199s, 36000 KB] Number of registered states: 151
[t=0.313199s, 36000 KB] Int hash set load factor: 151/256 = 0.589844
[t=0.313199s, 36000 KB] Int hash set resizes: 8
[t=0.313199s, 36000 KB] Search time: 0.0199993s
[t=0.313199s, 36000 KB] Total time: 0.313199s
Solution found.
Peak memory: 36000 KB
search exit code: 0

INFO     Planner time: 2.9s
